id,content,tag,move_tag
1,filter  Results String  Get  Index  Response  boolean  boolean  Action  Listener  Set  Index  Resolver  Index  Info  Index  Resolver void  compile  comparing  values  get  Aliases  alias  matches  matcher  add  indices  get  As  Boolean  get  get  Settings  matches  matcher  add  on  Response Index  Resolver Index  Type  valid  include  frozen  valid  regular  to  Sql  to  Native  Index  Info  name  type  sql  table  sql  view  indices  only  options  frozen  indices  options  field  caps  indices  options  field  caps  frozen  indices  options  field  names  blacklist  unmapped  client  cluster  Name  type  Registry  Fields  hierarchical  Mapping  flatted  Mapping Index  Type  to  Sql  to  Native  Index  Info  name  type  to  String  hash  Code  equals  Index  Resolver  cluster  Name  resolve  Names  resolve  Indices  resolve  As  Merged  Mapping  merged  Mappings  create  Field  create  Field  create  Field  Caps  Request  resolve  As  Separate  Mappings  create  Get  Aliases  Request  separate  Mappings  build  Indices  get  Invalid  Fields  For  Aliases Get  Index  Response mappings  aliases  settings  default  Settings  data  Streams  indices Get  Index  Response  Get  Index  Response  indices  get  Indices  mappings  get  Mappings  aliases  get  Aliases  settings  data  Streams  get  Data  Streams  default  Settings  get  Settings  get  Setting  write  To  to  X  Content  to  String  equals  hash  Code,0,0
2,filter  Results String  Get  Index  Response  boolean  boolean  Action  Listener  Set  Index  Resolver  Index  Info  Index  Resolver void  compile  comparing  values  get  Aliases  alias  matches  matcher  add  indices  get  As  Boolean  get  get  Settings  matches  matcher  add  on  Response Get  Index  Response mappings  aliases  settings  default  Settings  data  Streams  indices Get  Index  Response  Get  Index  Response  indices  get  Indices  mappings  get  Mappings  aliases  get  Aliases  settings  data  Streams  get  Data  Streams  default  Settings  get  Settings  get  Setting  write  To  to  X  Content  to  String  equals  hash  Code Index  Resolver Index  Type  valid  include  frozen  valid  regular  to  Sql  to  Native  Index  Info  name  type  sql  table  sql  view  indices  only  options  frozen  indices  options  field  caps  indices  options  field  caps  frozen  indices  options  field  names  blacklist  unmapped  client  cluster  Name  type  Registry  Fields  hierarchical  Mapping  flatted  Mapping Index  Type  to  Sql  to  Native  Index  Info  name  type  to  String  hash  Code  equals  Index  Resolver  cluster  Name  resolve  Names  resolve  Indices  resolve  As  Merged  Mapping  merged  Mappings  create  Field  create  Field  create  Field  Caps  Request  resolve  As  Separate  Mappings  create  Get  Aliases  Request  separate  Mappings  build  Indices  get  Invalid  Fields  For  Aliases,1,0
3,create  Get  Aliases  Request Field  Capabilities  Response  boolean Get  Aliases  Request  indices  Options  indices  aliases  local  get  Indices Index  Resolver Index  Type  valid  include  frozen  valid  regular  to  Sql  to  Native  Index  Info  name  type  sql  table  sql  view  indices  only  options  frozen  indices  options  field  caps  indices  options  field  caps  frozen  indices  options  field  names  blacklist  unmapped  client  cluster  Name  type  Registry  Fields  hierarchical  Mapping  flatted  Mapping Index  Type  to  Sql  to  Native  Index  Info  name  type  to  String  hash  Code  equals  Index  Resolver  cluster  Name  resolve  Names  resolve  Indices  resolve  As  Merged  Mapping  merged  Mappings  create  Field  create  Field  create  Field  Caps  Request  resolve  As  Separate  Mappings  separate  Mappings  build  Indices  get  Invalid  Fields  For  Aliases Field  Capabilities  Response indices  field  fields  field  indices  response  Map  index  Responses  parser Field  Capabilities  Response  Field  Capabilities  Response  Field  Capabilities  Response  Field  Capabilities  Response  Field  Capabilities  Response  get  Indices  get  get  Index  Responses  get  Field  read  Field  write  To  write  Field  to  X  Content  from  X  Content  parse  Type  To  Capabilities  equals  hash  Code  to  String,0,0
4,create  Get  Aliases  Request Field  Capabilities  Response  boolean Get  Aliases  Request  indices  Options  indices  aliases  local  get  Indices Field  Capabilities  Response indices  field  fields  field  indices  response  Map  index  Responses  parser Field  Capabilities  Response  Field  Capabilities  Response  Field  Capabilities  Response  Field  Capabilities  Response  Field  Capabilities  Response  get  Indices  get  get  Index  Responses  get  Field  read  Field  write  To  write  Field  to  X  Content  from  X  Content  parse  Type  To  Capabilities  equals  hash  Code  to  String Index  Resolver Index  Type  valid  include  frozen  valid  regular  to  Sql  to  Native  Index  Info  name  type  sql  table  sql  view  indices  only  options  frozen  indices  options  field  caps  indices  options  field  caps  frozen  indices  options  field  names  blacklist  unmapped  client  cluster  Name  type  Registry  Fields  hierarchical  Mapping  flatted  Mapping Index  Type  to  Sql  to  Native  Index  Info  name  type  to  String  hash  Code  equals  Index  Resolver  cluster  Name  resolve  Names  resolve  Indices  resolve  As  Merged  Mapping  merged  Mappings  create  Field  create  Field  create  Field  Caps  Request  resolve  As  Separate  Mappings  separate  Mappings  build  Indices  get  Invalid  Fields  For  Aliases,1,0
5,create  Empty  Store Store void lucene  Version inc  Ref  create  Empty  get  Index  Version  Created  index  Settings  shard  Id  dec  Ref Ccr  Repository logger  latest  type  name  prefix  snapshot  id  in  sync  allocation  id  metadata  ccr  Settings  local  Cluster  Name  remote  Cluster  Alias  client  ccr  License  Checker  thread  Pool  throttled  Time  Restore  Session  remote  Client  session  U  U  I  D  node  source  Metadata  mapping  Version  ccr  Settings  throttle  Listener  thread  Pool  multi  File  Writer  offset  File  Chunk  md  bytes  Requested  last  Chunk Ccr  Repository  do  Start  do  Stop  do  Close  get  Metadata  get  Remote  Cluster  Client  get  Snapshot  Info  get  Snapshot  Global  Metadata  get  Snapshot  Index  Metadata  get  Repository  Data  finalize  Snapshot  delete  Snapshots  get  Snapshot  Throttle  Time  In  Nanos  get  Restore  Throttle  Time  In  Nanos  start  Verification  end  Verification  verify  is  Read  Only  snapshot  Shard  restore  Shard  acquire  Retention  Lease  On  Leader  get  Shard  Snapshot  Status  update  State  execute  Consistent  State  Update  update  Mappings  open  Session  Restore  Session  restore  Files  restore  Files  on  New  File  next  Chunk  Request  execute  Chunk  Request  write  File  Chunk  handle  Error  close  close  File  Chunk  last  Chunk Store codec  corrupted  marker  codec  version  corrupted  marker  name  prefix  index  store  stats  refresh  interval  setting  readonce  checksum  is  Closed  directory  metadata  Lock  shard  Lock  on  Close  ref  Counter  Store  Directory  deletes  Logger  Metadata  Snapshot  metadata  empty  commit  User  Data  num  Docs  Loaded  Metadata  file  Metadata  user  Data  num  Docs  del  file  extension  liv  file  extension  segment  info  extension  Recovery  Diff  identical  different  missing  Lucene  Verifying  Index  Output  metadata  written  Bytes  checksum  Position  actual  Checksum  footer  Checksum  Verifying  Index  Input  input  digest  checksum  Position  checksum  verified  Position  empty close  Internal  Store  Store  directory  read  Last  Committed  Segments  Info  read  Segments  Info  ensure  Open  get  Metadata  get  Metadata  rename  Temp  Files  Safe  check  Index  stats  inc  Ref  try  Inc  Ref  dec  Ref  close  close  Internal  read  Metadata  Snapshot  try  Open  Index  verify  open  Verifying  Input  verify  check  Integrity  No  Exception  check  Integrity  No  Exception  check  Integrity  is  Marked  Corrupted  remove  Corruption  Marker  fail  If  Corrupted  fail  If  Corrupted  cleanup  And  Verify  verify  After  Cleanup  ref  Count  Store  Directory  estimate  Size  close  delete  File  delete  File  inner  Close  to  String  Metadata  Snapshot  Metadata  Snapshot  Metadata  Snapshot  Metadata  Snapshot  write  To  get  Num  Docs  Loaded  Metadata  load  Metadata  checksum  From  Lucene  File  hash  File  iterator  get  as  Map  recovery  Diff  size  get  Commit  User  Data  get  History  U  U  I  D  contains  get  Segments  File  num  Segment  Files  get  Sync  Id  Recovery  Diff  size  to  String  is  Autogenerated  digest  To  String  Lucene  Verifying  Index  Output  verify  write  Byte  read  And  Compare  Checksum  write  Bytes  Verifying  Index  Input  Verifying  Index  Input  read  Byte  read  Bytes  get  Checksum  seek  close  get  File  Pointer  length  clone  slice  get  Stored  Checksum  verify  delete  Quiet  mark  Store  Corrupted  accept  create  Empty  bootstrap  New  History  bootstrap  New  History  associate  Index  With  New  Translog  trim  Unsafe  Commits  find  Safe  Index  Commit  update  Commit  Data  get  User  Data  new  Appending  Index  Writer  new  Empty  Index  Writer  new  Index  Writer  Config,0,0
6,create  Empty  Store Store void lucene  Version inc  Ref  create  Empty  get  Index  Version  Created  index  Settings  shard  Id  dec  Ref Store codec  corrupted  marker  codec  version  corrupted  marker  name  prefix  index  store  stats  refresh  interval  setting  readonce  checksum  is  Closed  directory  metadata  Lock  shard  Lock  on  Close  ref  Counter  Store  Directory  deletes  Logger  Metadata  Snapshot  metadata  empty  commit  User  Data  num  Docs  Loaded  Metadata  file  Metadata  user  Data  num  Docs  del  file  extension  liv  file  extension  segment  info  extension  Recovery  Diff  identical  different  missing  Lucene  Verifying  Index  Output  metadata  written  Bytes  checksum  Position  actual  Checksum  footer  Checksum  Verifying  Index  Input  input  digest  checksum  Position  checksum  verified  Position  empty close  Internal  Store  Store  directory  read  Last  Committed  Segments  Info  read  Segments  Info  ensure  Open  get  Metadata  get  Metadata  rename  Temp  Files  Safe  check  Index  stats  inc  Ref  try  Inc  Ref  dec  Ref  close  close  Internal  read  Metadata  Snapshot  try  Open  Index  verify  open  Verifying  Input  verify  check  Integrity  No  Exception  check  Integrity  No  Exception  check  Integrity  is  Marked  Corrupted  remove  Corruption  Marker  fail  If  Corrupted  fail  If  Corrupted  cleanup  And  Verify  verify  After  Cleanup  ref  Count  Store  Directory  estimate  Size  close  delete  File  delete  File  inner  Close  to  String  Metadata  Snapshot  Metadata  Snapshot  Metadata  Snapshot  Metadata  Snapshot  write  To  get  Num  Docs  Loaded  Metadata  load  Metadata  checksum  From  Lucene  File  hash  File  iterator  get  as  Map  recovery  Diff  size  get  Commit  User  Data  get  History  U  U  I  D  contains  get  Segments  File  num  Segment  Files  get  Sync  Id  Recovery  Diff  size  to  String  is  Autogenerated  digest  To  String  Lucene  Verifying  Index  Output  verify  write  Byte  read  And  Compare  Checksum  write  Bytes  Verifying  Index  Input  Verifying  Index  Input  read  Byte  read  Bytes  get  Checksum  seek  close  get  File  Pointer  length  clone  slice  get  Stored  Checksum  verify  delete  Quiet  mark  Store  Corrupted  accept  create  Empty  bootstrap  New  History  bootstrap  New  History  associate  Index  With  New  Translog  trim  Unsafe  Commits  find  Safe  Index  Commit  update  Commit  Data  get  User  Data  new  Appending  Index  Writer  new  Empty  Index  Writer  new  Index  Writer  Config Ccr  Repository logger  latest  type  name  prefix  snapshot  id  in  sync  allocation  id  metadata  ccr  Settings  local  Cluster  Name  remote  Cluster  Alias  client  ccr  License  Checker  thread  Pool  throttled  Time  Restore  Session  remote  Client  session  U  U  I  D  node  source  Metadata  mapping  Version  ccr  Settings  throttle  Listener  thread  Pool  multi  File  Writer  offset  File  Chunk  md  bytes  Requested  last  Chunk Ccr  Repository  do  Start  do  Stop  do  Close  get  Metadata  get  Remote  Cluster  Client  get  Snapshot  Info  get  Snapshot  Global  Metadata  get  Snapshot  Index  Metadata  get  Repository  Data  finalize  Snapshot  delete  Snapshots  get  Snapshot  Throttle  Time  In  Nanos  get  Restore  Throttle  Time  In  Nanos  start  Verification  end  Verification  verify  is  Read  Only  snapshot  Shard  restore  Shard  acquire  Retention  Lease  On  Leader  get  Shard  Snapshot  Status  update  State  execute  Consistent  State  Update  update  Mappings  open  Session  Restore  Session  restore  Files  restore  Files  on  New  File  next  Chunk  Request  execute  Chunk  Request  write  File  Chunk  handle  Error  close  close  File  Chunk  last  Chunk,1,0
7,check  Remote  Cluster  License  And  Fetch  Cluster  State Client  String  Client  Consumer  Exception  Consumer  Cluster  State  Response  final  final  Function  Remote  Cluster  License  Checker  License  Checkfinal  Elasticsearch  Status  Exception  Elasticsearch  Status  Exceptionnon  Compliant  License  Elasticsearch  Status  Exception  final  final  Function  Exceptionfinal  Elasticsearch  Status  Exception  Elasticsearch  Status  Exceptionunknown  License  Elasticsearch  Status  Exception  Ccr  License  Checker void  check  Remote  Cluster  Licenses  singleton  List Ccr  License  Checker is  Ccr  Allowed  is  Auth  Allowed Ccr  License  Checker  Ccr  License  Checker  is  Ccr  Allowed  check  Remote  Cluster  License  And  Fetch  Leader  Index  Metadata  And  History  U  U  I  Ds  fetch  Leader  History  U  U  I  Ds  has  Privileges  To  Follow  Indices  get  User  wrap  Client  do  Execute  system  Client  do  Execute  stash  With  Headers  index  Metadata  Non  Compliant  Remote  License  cluster  State  Non  Compliant  Remote  License  index  Metadata  Unknown  Remote  License  cluster  State  Unknown  Remote  License Cluster  State  Request default  wait  for  node  timeout  routing  Table  nodes  metadata  blocks  customs  wait  For  Metadata  Version  wait  For  Timeout  indices  indices  Options Cluster  State  Request  Cluster  State  Request  write  To  validate  all  clear  routing  Table  routing  Table  nodes  nodes  metadata  metadata  blocks  blocks  indices  indices  indices  Options  indices  Options  customs  customs  wait  For  Timeout  wait  For  Timeout  wait  For  Metadata  Version  wait  For  Metadata  Version  on  Response  on  Failure,0,0
8,check  Remote  Cluster  License  And  Fetch  Cluster  State Client  String  Client  Consumer  Exception  Consumer  Cluster  State  Response  final  final  Function  Remote  Cluster  License  Checker  License  Checkfinal  Elasticsearch  Status  Exception  Elasticsearch  Status  Exceptionnon  Compliant  License  Elasticsearch  Status  Exception  final  final  Function  Exceptionfinal  Elasticsearch  Status  Exception  Elasticsearch  Status  Exceptionunknown  License  Elasticsearch  Status  Exception  Ccr  License  Checker void  check  Remote  Cluster  Licenses  singleton  List Cluster  State  Request default  wait  for  node  timeout  routing  Table  nodes  metadata  blocks  customs  wait  For  Metadata  Version  wait  For  Timeout  indices  indices  Options Cluster  State  Request  Cluster  State  Request  write  To  validate  all  clear  routing  Table  routing  Table  nodes  nodes  metadata  metadata  blocks  blocks  indices  indices  indices  Options  indices  Options  customs  customs  wait  For  Timeout  wait  For  Timeout  wait  For  Metadata  Version  wait  For  Metadata  Version  on  Response  on  Failure Ccr  License  Checker is  Ccr  Allowed  is  Auth  Allowed Ccr  License  Checker  Ccr  License  Checker  is  Ccr  Allowed  check  Remote  Cluster  License  And  Fetch  Leader  Index  Metadata  And  History  U  U  I  Ds  fetch  Leader  History  U  U  I  Ds  has  Privileges  To  Follow  Indices  get  User  wrap  Client  do  Execute  system  Client  do  Execute  stash  With  Headers  index  Metadata  Non  Compliant  Remote  License  cluster  State  Non  Compliant  Remote  License  index  Metadata  Unknown  Remote  License  cluster  State  Unknown  Remote  License,1,1
9,fetch  Leader  History  U  U  I  Ds Client  Index  Metadata  Consumer  Exception  Consumer  String void  get  Name  get  Index  get  get  Indices  accept  get  Number  Of  Shards  primary  get  Shard  Routing  get  Commit  Stats  accept  get  get  User  Data  shard  Id  get  Shard  Routing  id  accept  accept  clear  indices  stats  indices  admin  wrap Ccr  License  Checker is  Ccr  Allowed  is  Auth  Allowed Ccr  License  Checker  Ccr  License  Checker  is  Ccr  Allowed  check  Remote  Cluster  License  And  Fetch  Leader  Index  Metadata  And  History  U  U  I  Ds  check  Remote  Cluster  License  And  Fetch  Cluster  State  has  Privileges  To  Follow  Indices  get  User  wrap  Client  do  Execute  system  Client  do  Execute  stash  With  Headers  index  Metadata  Non  Compliant  Remote  License  cluster  State  Non  Compliant  Remote  License  index  Metadata  Unknown  Remote  License  cluster  State  Unknown  Remote  License Index  Metadata index  read  only  block  index  read  block  index  write  block  index  metadata  block  index  read  only  allow  delete  block  State  id  index  setting  prefix  setting  number  of  shards  index  number  of  shards  setting  setting  number  of  replicas  index  number  of  replicas  setting  setting  routing  partition  size  index  routing  partition  size  setting  index  number  of  routing  shards  setting  setting  auto  expand  replicas  index  auto  expand  replicas  setting  setting  read  only  index  read  only  setting  setting  blocks  read  index  blocks  read  setting  setting  blocks  write  index  blocks  write  setting  setting  blocks  metadata  index  blocks  metadata  setting  setting  read  only  allow  delete  index  blocks  read  only  allow  delete  setting  setting  version  created  setting  index  version  created  setting  version  created  string  setting  version  upgraded  setting  version  upgraded  string  setting  creation  date  setting  index  provided  name  setting  priority  index  priority  setting  setting  creation  date  string  setting  index  uuid  setting  data  path  index  data  path  setting  index  uuid  na  value  index  routing  require  group  prefix  index  routing  include  group  prefix  index  routing  exclude  group  prefix  index  routing  require  group  setting  index  routing  include  group  setting  index  routing  exclude  group  setting  index  routing  initial  recovery  group  setting  setting  wait  for  active  shards  setting  index  hidden  index  hidden  setting  index  format  index  format  setting  key  in  sync  allocations  key  version  key  mapping  version  key  settings  version  key  aliases  version  key  routing  num  shards  key  settings  key  state  key  mappings  key  aliases  key  rollover  infos  key  primary  terms  index  state  file  prefix  routing  Num  Shards  routing  Factor  routing  Partition  Size  number  Of  Shards  number  Of  Replicas  index  version  mapping  Version  settings  Version  aliases  Version  primary  Terms  state  aliases  settings  mappings  custom  Data  in  Sync  Allocation  Ids  total  Number  Of  Shards  require  Filters  include  Filters  exclude  Filters  initial  Recovery  Filters  index  Created  Version  index  Upgraded  Version  wait  For  Active  Shards  rollover  Infos  index  resize  source  uuid  key  index  resize  source  name  key  index  resize  source  uuid  index  resize  source  name  Index  Metadata  Diff  index  routing  Num  Shards  version  mapping  Version  settings  Version  aliases  Version  primary  Terms  state  settings  mappings  aliases  custom  Data  in  Sync  Allocation  Ids  rollover  Infos  Builder  index  state  version  mapping  Version  settings  Version  aliases  Version  primary  Terms  settings  mappings  aliases  custom  Metadata  in  Sync  Allocation  Ids  rollover  Infos  routing  Num  Shards  format  params  format get  Task  Result  Mapping  Version  State  id  from  Id  from  String  build  Number  Of  Shards  Setting  Index  Metadata  get  Index  get  Index  U  U  I  D  is  Same  U  U  I  D  get  Index  U  U  I  D  get  Version  get  Mapping  Version  get  Settings  Version  get  Aliases  Version  primary  Term  get  Creation  Version  get  Upgraded  Version  get  Creation  Date  get  State  get  Number  Of  Shards  get  Number  Of  Replicas  get  Routing  Partition  Size  is  Routing  Partitioned  Index  get  Total  Number  Of  Shards  get  Wait  For  Active  Shards  get  Settings  get  Aliases  mapping  get  Resize  Source  Index  get  Custom  Data  get  Custom  Data  get  In  Sync  Allocation  Ids  get  Rollover  Infos  in  Sync  Allocation  Ids  require  Filters  get  Initial  Recovery  Filters  include  Filters  exclude  Filters  equals  hash  Code  diff  read  Diff  From  from  X  Content  to  X  Content  Index  Metadata  Diff  Index  Metadata  Diff  write  To  apply  read  From  write  To  builder  builder  Builder  Builder  index  number  Of  Shards  set  Routing  Num  Shards  get  Routing  Num  Shards  number  Of  Shards  number  Of  Replicas  routing  Partition  Size  creation  Date  settings  settings  mapping  put  Mapping  put  Mapping  state  put  Alias  put  Alias  remove  Alias  remove  All  Aliases  put  Custom  remove  Custom  get  In  Sync  Allocation  Ids  put  In  Sync  Allocation  Ids  put  Rollover  Info  version  version  mapping  Version  mapping  Version  settings  Version  settings  Version  aliases  Version  aliases  Version  primary  Term  primary  Term  primary  Terms  initialize  Primary  Terms  build  to  X  Content  from  X  Content  add  Human  Readable  Settings  get  Routing  Num  Shards  get  Routing  Factor  select  Split  Shard  select  Clone  Shard  assert  Split  Metadata  select  Recover  From  Shards  select  Shrink  Shards  get  Routing  Factor,0,0
10,fetch  Leader  History  U  U  I  Ds Client  Index  Metadata  Consumer  Exception  Consumer  String void  get  Name  get  Index  get  get  Indices  accept  get  Number  Of  Shards  primary  get  Shard  Routing  get  Commit  Stats  accept  get  get  User  Data  shard  Id  get  Shard  Routing  id  accept  accept  clear  indices  stats  indices  admin  wrap Index  Metadata index  read  only  block  index  read  block  index  write  block  index  metadata  block  index  read  only  allow  delete  block  State  id  index  setting  prefix  setting  number  of  shards  index  number  of  shards  setting  setting  number  of  replicas  index  number  of  replicas  setting  setting  routing  partition  size  index  routing  partition  size  setting  index  number  of  routing  shards  setting  setting  auto  expand  replicas  index  auto  expand  replicas  setting  setting  read  only  index  read  only  setting  setting  blocks  read  index  blocks  read  setting  setting  blocks  write  index  blocks  write  setting  setting  blocks  metadata  index  blocks  metadata  setting  setting  read  only  allow  delete  index  blocks  read  only  allow  delete  setting  setting  version  created  setting  index  version  created  setting  version  created  string  setting  version  upgraded  setting  version  upgraded  string  setting  creation  date  setting  index  provided  name  setting  priority  index  priority  setting  setting  creation  date  string  setting  index  uuid  setting  data  path  index  data  path  setting  index  uuid  na  value  index  routing  require  group  prefix  index  routing  include  group  prefix  index  routing  exclude  group  prefix  index  routing  require  group  setting  index  routing  include  group  setting  index  routing  exclude  group  setting  index  routing  initial  recovery  group  setting  setting  wait  for  active  shards  setting  index  hidden  index  hidden  setting  index  format  index  format  setting  key  in  sync  allocations  key  version  key  mapping  version  key  settings  version  key  aliases  version  key  routing  num  shards  key  settings  key  state  key  mappings  key  aliases  key  rollover  infos  key  primary  terms  index  state  file  prefix  routing  Num  Shards  routing  Factor  routing  Partition  Size  number  Of  Shards  number  Of  Replicas  index  version  mapping  Version  settings  Version  aliases  Version  primary  Terms  state  aliases  settings  mappings  custom  Data  in  Sync  Allocation  Ids  total  Number  Of  Shards  require  Filters  include  Filters  exclude  Filters  initial  Recovery  Filters  index  Created  Version  index  Upgraded  Version  wait  For  Active  Shards  rollover  Infos  index  resize  source  uuid  key  index  resize  source  name  key  index  resize  source  uuid  index  resize  source  name  Index  Metadata  Diff  index  routing  Num  Shards  version  mapping  Version  settings  Version  aliases  Version  primary  Terms  state  settings  mappings  aliases  custom  Data  in  Sync  Allocation  Ids  rollover  Infos  Builder  index  state  version  mapping  Version  settings  Version  aliases  Version  primary  Terms  settings  mappings  aliases  custom  Metadata  in  Sync  Allocation  Ids  rollover  Infos  routing  Num  Shards  format  params  format get  Task  Result  Mapping  Version  State  id  from  Id  from  String  build  Number  Of  Shards  Setting  Index  Metadata  get  Index  get  Index  U  U  I  D  is  Same  U  U  I  D  get  Index  U  U  I  D  get  Version  get  Mapping  Version  get  Settings  Version  get  Aliases  Version  primary  Term  get  Creation  Version  get  Upgraded  Version  get  Creation  Date  get  State  get  Number  Of  Shards  get  Number  Of  Replicas  get  Routing  Partition  Size  is  Routing  Partitioned  Index  get  Total  Number  Of  Shards  get  Wait  For  Active  Shards  get  Settings  get  Aliases  mapping  get  Resize  Source  Index  get  Custom  Data  get  Custom  Data  get  In  Sync  Allocation  Ids  get  Rollover  Infos  in  Sync  Allocation  Ids  require  Filters  get  Initial  Recovery  Filters  include  Filters  exclude  Filters  equals  hash  Code  diff  read  Diff  From  from  X  Content  to  X  Content  Index  Metadata  Diff  Index  Metadata  Diff  write  To  apply  read  From  write  To  builder  builder  Builder  Builder  index  number  Of  Shards  set  Routing  Num  Shards  get  Routing  Num  Shards  number  Of  Shards  number  Of  Replicas  routing  Partition  Size  creation  Date  settings  settings  mapping  put  Mapping  put  Mapping  state  put  Alias  put  Alias  remove  Alias  remove  All  Aliases  put  Custom  remove  Custom  get  In  Sync  Allocation  Ids  put  In  Sync  Allocation  Ids  put  Rollover  Info  version  version  mapping  Version  mapping  Version  settings  Version  settings  Version  aliases  Version  aliases  Version  primary  Term  primary  Term  primary  Terms  initialize  Primary  Terms  build  to  X  Content  from  X  Content  add  Human  Readable  Settings  get  Routing  Num  Shards  get  Routing  Factor  select  Split  Shard  select  Clone  Shard  assert  Split  Metadata  select  Recover  From  Shards  select  Shrink  Shards  get  Routing  Factor Ccr  License  Checker is  Ccr  Allowed  is  Auth  Allowed Ccr  License  Checker  Ccr  License  Checker  is  Ccr  Allowed  check  Remote  Cluster  License  And  Fetch  Leader  Index  Metadata  And  History  U  U  I  Ds  check  Remote  Cluster  License  And  Fetch  Cluster  State  has  Privileges  To  Follow  Indices  get  User  wrap  Client  do  Execute  system  Client  do  Execute  stash  With  Headers  index  Metadata  Non  Compliant  Remote  License  cluster  State  Non  Compliant  Remote  License  index  Metadata  Unknown  Remote  License  cluster  State  Unknown  Remote  License,1,0
11,create  Components Client  String  Eql  Plugin Collection  Object  as  List Eql  Plugin enabled  eql  feature  flag  registered  eql  enabled  setting Eql  Plugin  get  Settings  get  Actions  is  Snapshot  is  Enabled  get  Rest  Handlers  get  License  State Named  Writeable  Registry Entry  category  Class  name  reader  registry Entry  Named  Writeable  Registry  get  Reader,0,0
12,create  Components Client  String  Eql  Plugin Collection  Object  as  List Named  Writeable  Registry Entry  category  Class  name  reader  registry Entry  Named  Writeable  Registry  get  Reader Eql  Plugin enabled  eql  feature  flag  registered  eql  enabled  setting Eql  Plugin  get  Settings  get  Actions  is  Snapshot  is  Enabled  get  Rest  Handlers  get  License  State,1,1
13,do  Parse String  Eql  Session Logical  Plan  create  Statement Eql  Session client  configuration  index  Resolver  pre  Analyzer  analyzer  optimizer  planner Eql  Session  client  optimizer  configuration  eql  eql  Executable  physical  Plan  optimized  Plan  analyzed  Plan  pre  Analyze Parser  Params zone  Id  field  Event  Category  field  Timestamp  implicit  Join  Key  query  Params Parser  Params  field  Event  Category  field  Event  Category  field  Timestamp  field  Timestamp  implicit  Join  Key  implicit  Join  Key  params  params  zone  Id,0,0
14,do  Parse String  Eql  Session Logical  Plan  create  Statement Parser  Params zone  Id  field  Event  Category  field  Timestamp  implicit  Join  Key  query  Params Parser  Params  field  Event  Category  field  Event  Category  field  Timestamp  field  Timestamp  implicit  Join  Key  implicit  Join  Key  params  params  zone  Id Eql  Session client  configuration  index  Resolver  pre  Analyzer  analyzer  optimizer  planner Eql  Session  client  optimizer  configuration  eql  eql  Executable  physical  Plan  optimized  Plan  analyzed  Plan  pre  Analyze,1,1
15,verify Verifier Collection  Failure  for  Each  Up  analyzed  children  Resolved  add  fail  unresolved  Message  for  Each  Expressions  resolved  for  Each  Up  children  Resolved  custom  Message  qualifier  input  Set  qualified  Name  name  is  Unsupported  data  Type  is  Primitive  data  Type  add  find  Similar  qualified  Name  is  Empty  with  Unresolved  Message  error  Message  qualified  Name  add  fail  unresolved  Message  unresolved  type  Resolved  add  fail  message  type  Resolved  add  All Verifier  verify  Failures Logical  Plan Stage  stage  lazy  Children  Resolved  lazy  Resolved Logical  Plan  pre  Analyzed  set  Pre  Analyzed  analyzed  set  Analyzed  optimized  set  Optimized  children  Resolved  resolved  expressions  Resolved  hash  Code  equals,0,0
16,verify Verifier Collection  Failure  for  Each  Up  analyzed  children  Resolved  add  fail  unresolved  Message  for  Each  Expressions  resolved  for  Each  Up  children  Resolved  custom  Message  qualifier  input  Set  qualified  Name  name  is  Unsupported  data  Type  is  Primitive  data  Type  add  find  Similar  qualified  Name  is  Empty  with  Unresolved  Message  error  Message  qualified  Name  add  fail  unresolved  Message  unresolved  type  Resolved  add  fail  message  type  Resolved  add  All Logical  Plan Stage  stage  lazy  Children  Resolved  lazy  Resolved Logical  Plan  pre  Analyzed  set  Pre  Analyzed  analyzed  set  Analyzed  optimized  set  Optimized  children  Resolved  resolved  expressions  Resolved  hash  Code  equals Verifier  verify  Failures,1,1
17,top  Hit  Field  Extractor Field  Extractor  Registry Field  Extraction  get  Name  field  is  Alias  field  parent  get  Data  Type  field  parent  get  Data  Type  field  parent  has  Doc  Values  get  Data  Type  field  parent  parent  insert  insert  get  Name  field  parent  parent  name  to  String  get  Data  Type  field  is  Aggregatable  field  is  Alias  field Field  Extractor  Registry cache field  Extraction  create  Field  Extraction  For Field  Attribute parent  nested  Parent  path  field Field  Attribute  Field  Attribute  Field  Attribute  Field  Attribute  info  parent  path  qualified  Path  is  Nested  nested  Parent  get  Exact  Info  exact  Attribute  inner  Field  clone  hash  Code  equals  label  field,0,0
18,top  Hit  Field  Extractor Field  Extractor  Registry Field  Extraction  get  Name  field  is  Alias  field  parent  get  Data  Type  field  parent  get  Data  Type  field  parent  has  Doc  Values  get  Data  Type  field  parent  parent  insert  insert  get  Name  field  parent  parent  name  to  String  get  Data  Type  field  is  Aggregatable  field  is  Alias  field Field  Attribute parent  nested  Parent  path  field Field  Attribute  Field  Attribute  Field  Attribute  Field  Attribute  info  parent  path  qualified  Path  is  Nested  nested  Parent  get  Exact  Info  exact  Attribute  inner  Field  clone  hash  Code  equals  label  field Field  Extractor  Registry cache field  Extraction  create  Field  Extraction  For,1,1
19,schedule  Snapshot  Jobs Cluster  State void  custom  metadata  for  Each  values  get  Snapshot  Configurations Snapshot  Lifecycle  Service logger  job  pattern  suffix  scheduler  cluster  Service  snapshot  Task  scheduled  Tasks  running  is  Master Snapshot  Lifecycle  Service  cluster  Changed  on  Master  off  Master  get  Scheduler  slm  Stopped  Or  Stopping  slm  Stopping  submit  Operation  Mode  Update  cleanup  Deleted  Policies  maybe  Schedule  Snapshot  get  Job  Id  cancel  Snapshot  Jobs  cancel  Scheduled  Snapshot  validate  Repository  Exists  executor  Name  close Cluster  State empty  state  custom  value  serializer  unknown  uuid  unknown  version  version  state  U  U  I  D  routing  Table  nodes  metadata  blocks  customs  cluster  Name  was  Read  From  Diff  routing  Nodes  Metric  value  To  Enum  value  Builder  cluster  Name  version  uuid  metadata  routing  Table  nodes  blocks  customs  from  Diff  Cluster  State  Diff  to  Version  from  Uuid  to  Uuid  cluster  Name  routing  Table  nodes  metadata  blocks  customs resolve  Voting  Config  Exclusions  is  Private  Cluster  State  Cluster  State  term  version  get  Version  state  U  U  I  D  nodes  get  Nodes  metadata  get  Metadata  coordination  Metadata  routing  Table  get  Routing  Table  blocks  get  Blocks  customs  get  Customs  custom  get  Cluster  Name  get  Last  Accepted  Configuration  get  Last  Committed  Configuration  get  Voting  Config  Exclusions  get  Routing  Nodes  to  String  supersedes  Metric  parse  String  to  String  to  X  Content  builder  builder  Builder  Builder  nodes  nodes  nodes  routing  Table  metadata  metadata  blocks  blocks  version  increment  Version  state  U  U  I  D  put  Custom  remove  Custom  customs  from  Diff  build  to  Bytes  from  Bytes  diff  read  Diff  From  read  From  write  To  Cluster  State  Diff  Cluster  State  Diff  write  To  apply,0,0
20,schedule  Snapshot  Jobs Cluster  State void  custom  metadata  for  Each  values  get  Snapshot  Configurations Cluster  State empty  state  custom  value  serializer  unknown  uuid  unknown  version  version  state  U  U  I  D  routing  Table  nodes  metadata  blocks  customs  cluster  Name  was  Read  From  Diff  routing  Nodes  Metric  value  To  Enum  value  Builder  cluster  Name  version  uuid  metadata  routing  Table  nodes  blocks  customs  from  Diff  Cluster  State  Diff  to  Version  from  Uuid  to  Uuid  cluster  Name  routing  Table  nodes  metadata  blocks  customs resolve  Voting  Config  Exclusions  is  Private  Cluster  State  Cluster  State  term  version  get  Version  state  U  U  I  D  nodes  get  Nodes  metadata  get  Metadata  coordination  Metadata  routing  Table  get  Routing  Table  blocks  get  Blocks  customs  get  Customs  custom  get  Cluster  Name  get  Last  Accepted  Configuration  get  Last  Committed  Configuration  get  Voting  Config  Exclusions  get  Routing  Nodes  to  String  supersedes  Metric  parse  String  to  String  to  X  Content  builder  builder  Builder  Builder  nodes  nodes  nodes  routing  Table  metadata  metadata  blocks  blocks  version  increment  Version  state  U  U  I  D  put  Custom  remove  Custom  customs  from  Diff  build  to  Bytes  from  Bytes  diff  read  Diff  From  read  From  write  To  Cluster  State  Diff  Cluster  State  Diff  write  To  apply Snapshot  Lifecycle  Service logger  job  pattern  suffix  scheduler  cluster  Service  snapshot  Task  scheduled  Tasks  running  is  Master Snapshot  Lifecycle  Service  cluster  Changed  on  Master  off  Master  get  Scheduler  slm  Stopped  Or  Stopping  slm  Stopping  submit  Operation  Mode  Update  cleanup  Deleted  Policies  maybe  Schedule  Snapshot  get  Job  Id  cancel  Snapshot  Jobs  cancel  Scheduled  Snapshot  validate  Repository  Exists  executor  Name  close,1,0
21,do  Pre  Analyze Logical  Plan Pre  Analysis  for  Each  Up  add  table  frozen  for  Each  Up Pre  Analyzer Pre  Analysis  empty  indices Pre  Analysis  pre  Analyze Logical  Plan Stage  stage  lazy  Children  Resolved  lazy  Resolved verify  Logical  Plan  pre  Analyzed  set  Pre  Analyzed  analyzed  set  Analyzed  optimized  set  Optimized  children  Resolved  resolved  expressions  Resolved  hash  Code  equals,0,0
22,do  Pre  Analyze Logical  Plan Pre  Analysis  for  Each  Up  add  table  frozen  for  Each  Up Logical  Plan Stage  stage  lazy  Children  Resolved  lazy  Resolved verify  Logical  Plan  pre  Analyzed  set  Pre  Analyzed  analyzed  set  Analyzed  optimized  set  Optimized  children  Resolved  resolved  expressions  Resolved  hash  Code  equals Pre  Analyzer Pre  Analysis  empty  indices Pre  Analysis  pre  Analyze,1,0
23,update  Group Aggs Aggs  groups  size  get  equals  id  id  set  with  id Aggs root  group  name  implicit  group  key  empty  groups  simple  Aggs  pipeline  Aggs create  Source  Builder  copy  Aggs  groups  as  Agg  Builder  use  Implicit  Group  By  add  Groups  add  Agg  add  Agg  find  Group  For  Agg  with  hash  Code  equals Group  By  Key direction Group  By  Key  script  as  Value  Source  create  Source  Builder  copy  with  hash  Code  equals,0,0
24,update  Group Aggs Aggs  groups  size  get  equals  id  id  set  with  id Group  By  Key direction Group  By  Key  script  as  Value  Source  create  Source  Builder  copy  with  hash  Code  equals Aggs root  group  name  implicit  group  key  empty  groups  simple  Aggs  pipeline  Aggs create  Source  Builder  copy  Aggs  groups  as  Agg  Builder  use  Implicit  Group  By  add  Groups  add  Agg  add  Agg  find  Group  For  Agg  with  hash  Code  equals,1,1
25,add  Sort String  Query  Container Query  Container  sort  put  query  aggs  fields  aliases  pseudo  Functions  scalar  Functions  limit  should  Track  Hits  should  Include  Frozen  min  Page  Size Query  Container aggs  query  fields  aliases  pseudo  Functions  scalar  Functions  sort  limit  track  Hits  include  Frozen  min  Page  Size  aggs  Only  custom  Sort  field  Alias  Query  Attribute  Resolver  container Query  Container  Query  Container  sorting  Columns  column  Mask  query  aggs  fields  aliases  pseudo  Functions  sort  limit  is  Aggs  Only  has  Columns  should  Track  Hits  should  Include  Frozen  min  Page  Size  with  with  Aliases  with  Pseudo  Functions  with  with  Limit  with  Track  Hits  with  Frozen  with  Scalar  Processors  alias  Name  top  Hit  Field  Ref  nested  Hit  Field  Ref  rewrite  To  Contain  Nested  Field  resolved  Tree  Computing  Ref  Query  Attribute  Resolver  resolve  add  Column  as  Field  Extraction  add  Column  scalar  Functions  add  Agg  add  Groups  find  Group  For  Agg  update  Group  hash  Code  equals  to  String Sort Direction  Missing  position  direction  missing from  as  Order  first  Missing  from  position  Sort  direction  missing,0,0
26,add  Sort String  Query  Container Query  Container  sort  put  query  aggs  fields  aliases  pseudo  Functions  scalar  Functions  limit  should  Track  Hits  should  Include  Frozen  min  Page  Size Sort Direction  Missing  position  direction  missing from  as  Order  first  Missing  from  position  Sort  direction  missing Query  Container aggs  query  fields  aliases  pseudo  Functions  scalar  Functions  sort  limit  track  Hits  include  Frozen  min  Page  Size  aggs  Only  custom  Sort  field  Alias  Query  Attribute  Resolver  container Query  Container  Query  Container  sorting  Columns  column  Mask  query  aggs  fields  aliases  pseudo  Functions  sort  limit  is  Aggs  Only  has  Columns  should  Track  Hits  should  Include  Frozen  min  Page  Size  with  with  Aliases  with  Pseudo  Functions  with  with  Limit  with  Track  Hits  with  Frozen  with  Scalar  Processors  alias  Name  top  Hit  Field  Ref  nested  Hit  Field  Ref  rewrite  To  Contain  Nested  Field  resolved  Tree  Computing  Ref  Query  Attribute  Resolver  resolve  add  Column  as  Field  Extraction  add  Column  scalar  Functions  add  Agg  add  Groups  find  Group  For  Agg  update  Group  hash  Code  equals  to  String,1,1
27,handle  Exception  While  Communicating  With  Server Cli  Terminal  Runtime  Exception  Abstract  Server  Cli  Command void  ln  error  param  error  line  get  Message  get  Name  get  Class  get  Message  is  Debug  print  Stack  Trace Abstract  Server  Cli  Command  Abstract  Server  Cli  Command  handle  do  Handle Cli  Session http  Client  fetch  Size  fetch  Separator  debug  binary Cli  Session  get  Client  set  Fetch  Size  get  Fetch  Size  set  Fetch  Separator  get  Fetch  Separator  set  Debug  is  Debug  set  Binary  is  Binary  check  Connection,0,0
28,handle  Exception  While  Communicating  With  Server Cli  Terminal  Runtime  Exception  Abstract  Server  Cli  Command void  ln  error  param  error  line  get  Message  get  Name  get  Class  get  Message  is  Debug  print  Stack  Trace Cli  Session http  Client  fetch  Size  fetch  Separator  debug  binary Cli  Session  get  Client  set  Fetch  Size  get  Fetch  Size  set  Fetch  Separator  get  Fetch  Separator  set  Debug  is  Debug  set  Binary  is  Binary  check  Connection Abstract  Server  Cli  Command  Abstract  Server  Cli  Command  handle  do  Handle,1,1
29,check  Connection Cli  Session  Cli  Terminal  Cli void  check  Connection  is  Debug  error  get  Message  println  print  Stack  Trace  flush  get  Cause  get  Cause  connection  String  get  Message  get  Cause  get  Cause  get  Cause  connection  String  get  Message  get  Cause  connection  String  to  String Cli keystore  Location  check  Option  connection  String  binary  Communication  cli  Terminal main  configure  J  Line  Logging  Cli  execute  execute Connection  Configuration properties  validation  properties  validation  default  binary  communication  binary  communication  default  connect  timeout  connect  timeout  default  network  timeout  network  timeout  default  query  timeout  query  timeout  default  page  timeout  page  timeout  default  page  size  page  size  default  auth  user  auth  pass  option  names  validate  Properties  binary  Communication  base  U  R  I  connection  String  connect  Timeout  network  Timeout  query  Timeout  page  Timeout  page  Size  user  pass  ssl  Config  proxy  Config Connection  Configuration  Connection  Configuration  normalize  Schema  option  Names  extra  Options  check  Property  Names  is  Known  Property  parse  Value  is  S  S  L  Enabled  validate  Properties  binary  Communication  ssl  Config  proxy  Config  connect  Timeout  network  Timeout  query  Timeout  page  Timeout  page  Size  auth  User  auth  Pass  base  Uri  connection  String,0,0
30,check  Connection Cli  Session  Cli  Terminal  Cli void  check  Connection  is  Debug  error  get  Message  println  print  Stack  Trace  flush  get  Cause  get  Cause  connection  String  get  Message  get  Cause  get  Cause  get  Cause  connection  String  get  Message  get  Cause  connection  String  to  String Connection  Configuration properties  validation  properties  validation  default  binary  communication  binary  communication  default  connect  timeout  connect  timeout  default  network  timeout  network  timeout  default  query  timeout  query  timeout  default  page  timeout  page  timeout  default  page  size  page  size  default  auth  user  auth  pass  option  names  validate  Properties  binary  Communication  base  U  R  I  connection  String  connect  Timeout  network  Timeout  query  Timeout  page  Timeout  page  Size  user  pass  ssl  Config  proxy  Config Connection  Configuration  Connection  Configuration  normalize  Schema  option  Names  extra  Options  check  Property  Names  is  Known  Property  parse  Value  is  S  S  L  Enabled  validate  Properties  binary  Communication  ssl  Config  proxy  Config  connect  Timeout  network  Timeout  query  Timeout  page  Timeout  page  Size  auth  User  auth  Pass  base  Uri  connection  String Cli keystore  Location  check  Option  connection  String  binary  Communication  cli  Terminal main  configure  J  Line  Logging  Cli  execute  execute,1,1
31,check  Connection Cli  Session  Cli  Terminal  Cli void  check  Connection  is  Debug  error  get  Message  println  print  Stack  Trace  flush  get  Cause  get  Cause  connection  String  get  Message  get  Cause  get  Cause  get  Cause  connection  String  get  Message  get  Cause  connection  String  to  String Cli keystore  Location  check  Option  connection  String  binary  Communication  cli  Terminal main  configure  J  Line  Logging  Cli  execute  execute Cli  Session http  Client  fetch  Size  fetch  Separator  debug  binary Cli  Session  get  Client  set  Fetch  Size  get  Fetch  Size  set  Fetch  Separator  get  Fetch  Separator  set  Debug  is  Debug  set  Binary  is  Binary  handle  Exception  While  Communicating  With  Server,0,0
32,check  Connection Cli  Session  Cli  Terminal  Cli void  check  Connection  is  Debug  error  get  Message  println  print  Stack  Trace  flush  get  Cause  get  Cause  connection  String  get  Message  get  Cause  get  Cause  get  Cause  connection  String  get  Message  get  Cause  connection  String  to  String Cli  Session http  Client  fetch  Size  fetch  Separator  debug  binary Cli  Session  get  Client  set  Fetch  Size  get  Fetch  Size  set  Fetch  Separator  get  Fetch  Separator  set  Debug  is  Debug  set  Binary  is  Binary  handle  Exception  While  Communicating  With  Server Cli keystore  Location  check  Option  connection  String  binary  Communication  cli  Terminal main  configure  J  Line  Logging  Cli  execute  execute,1,0
33,earliest  Valid  Timestamp Data  Counts long  get  Latest  Record  Time  Stamp  get  Latency  millis  get  Time Job type  anomaly  detector  job  type  id  job  type  job  version  groups  analysis  config  analysis  limits  create  time  custom  settings  data  description  description  finished  time  model  plot  config  renormalization  window  days  background  persist  interval  model  snapshot  retention  days  daily  model  snapshot  retention  after  days  results  retention  days  model  snapshot  id  model  snapshot  min  version  results  index  name  deleting  allow  lazy  open  results  field  lenient  parser  strict  parser  min  background  persist  interval  process  memory  overhead  default  model  snapshot  retention  days  default  daily  model  snapshot  retention  after  days  job  Id  job  Type  job  Version  groups  description  create  Time  finished  Time  analysis  Config  analysis  Limits  data  Description  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open  Builder  id  job  Type  job  Version  groups  description  analysis  Config  analysis  Limits  data  Description  create  Time  finished  Time  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open create  Parser  Job  Job  document  Id  get  Id  get  Job  Type  get  Job  Version  get  Groups  get  Initial  Results  Index  Name  get  Results  Index  Name  No  Prefix  get  Description  get  Create  Time  get  Finished  Time  get  Analysis  Config  get  Analysis  Limits  get  Model  Plot  Config  get  Data  Description  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  is  Deleting  allow  Lazy  Open  all  Input  Fields  write  To  to  X  Content  do  X  Content  Body  equals  hash  Code  to  String  check  Value  Not  Less  Than  get  Compatible  Job  Types  job  Created  By  Builder  Builder  Builder  Builder  set  Id  get  Id  set  Job  Version  set  Job  Version  set  Job  Type  set  Groups  get  Groups  set  Custom  Settings  set  Description  set  Analysis  Config  get  Analysis  Config  set  Analysis  Limits  set  Create  Time  set  Finished  Time  set  Data  Description  set  Model  Plot  Config  set  Background  Persist  Interval  set  Renormalization  Window  Days  set  Model  Snapshot  Retention  Days  get  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Results  Index  Name  set  Deleting  set  Allow  Lazy  Open  invalid  Create  Time  Settings  write  To  to  X  Content  equals  hash  Code  validate  Input  Fields  validate  Analysis  Limits  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  validate  Groups  validate  Detectors  Are  Unique  build  build  check  Valid  Background  Persist  Interval  check  Time  Field  Not  In  Analysis  Config Data  Counts document  suffix  processed  record  count  str  processed  field  count  str  input  bytes  str  input  record  count  str  input  field  count  str  invalid  date  count  str  missing  field  count  str  out  of  order  time  count  str  empty  bucket  count  str  sparse  bucket  count  str  bucket  count  str  earliest  record  time  str  latest  record  time  str  last  data  time  str  latest  empty  bucket  time  str  latest  sparse  bucket  time  str  processed  record  count  processed  field  count  input  bytes  input  record  count  input  field  count  invalid  date  count  missing  field  count  out  of  order  time  count  empty  bucket  count  sparse  bucket  count  bucket  count  earliest  record  time  latest  record  time  last  data  time  latest  empty  bucket  time  latest  sparse  bucket  time  type  parser  job  Id  processed  Record  Count  processed  Field  Count  input  Bytes  input  Field  Count  invalid  Date  Count  missing  Field  Count  out  Of  Order  Time  Stamp  Count  empty  Bucket  Count  sparse  Bucket  Count  bucket  Count  earliest  Record  Time  Stamp  latest  Record  Time  Stamp  last  Data  Time  Stamp  latest  Empty  Bucket  Time  Stamp  latest  Sparse  Bucket  Time  Stamp document  Id  v  Document  Id  Data  Counts  Data  Counts  Data  Counts  Data  Counts  get  Jobid  get  Processed  Record  Count  increment  Processed  Record  Count  get  Processed  Field  Count  calc  Processed  Field  Count  get  Input  Record  Count  get  Input  Bytes  increment  Input  Bytes  get  Input  Field  Count  increment  Input  Field  Count  get  Invalid  Date  Count  increment  Invalid  Date  Count  get  Missing  Field  Count  increment  Missing  Field  Count  get  Out  Of  Order  Time  Stamp  Count  increment  Out  Of  Order  Time  Stamp  Count  get  Empty  Bucket  Count  increment  Empty  Bucket  Count  get  Sparse  Bucket  Count  increment  Sparse  Bucket  Count  get  Bucket  Count  increment  Bucket  Count  get  Earliest  Record  Time  Stamp  set  Earliest  Record  Time  Stamp  get  Latest  Record  Time  Stamp  set  Latest  Record  Time  Stamp  update  Latest  Record  Time  Stamp  get  Last  Data  Time  Stamp  set  Last  Data  Time  Stamp  get  Latest  Empty  Bucket  Time  Stamp  set  Latest  Empty  Bucket  Time  Stamp  update  Latest  Empty  Bucket  Time  Stamp  get  Latest  Sparse  Bucket  Time  Stamp  set  Latest  Sparse  Bucket  Time  Stamp  update  Latest  Sparse  Bucket  Time  Stamp  write  To  to  X  Content  do  X  Content  Body  equals  hash  Code,0,0
34,earliest  Valid  Timestamp Data  Counts long  get  Latest  Record  Time  Stamp  get  Latency  millis  get  Time Data  Counts document  suffix  processed  record  count  str  processed  field  count  str  input  bytes  str  input  record  count  str  input  field  count  str  invalid  date  count  str  missing  field  count  str  out  of  order  time  count  str  empty  bucket  count  str  sparse  bucket  count  str  bucket  count  str  earliest  record  time  str  latest  record  time  str  last  data  time  str  latest  empty  bucket  time  str  latest  sparse  bucket  time  str  processed  record  count  processed  field  count  input  bytes  input  record  count  input  field  count  invalid  date  count  missing  field  count  out  of  order  time  count  empty  bucket  count  sparse  bucket  count  bucket  count  earliest  record  time  latest  record  time  last  data  time  latest  empty  bucket  time  latest  sparse  bucket  time  type  parser  job  Id  processed  Record  Count  processed  Field  Count  input  Bytes  input  Field  Count  invalid  Date  Count  missing  Field  Count  out  Of  Order  Time  Stamp  Count  empty  Bucket  Count  sparse  Bucket  Count  bucket  Count  earliest  Record  Time  Stamp  latest  Record  Time  Stamp  last  Data  Time  Stamp  latest  Empty  Bucket  Time  Stamp  latest  Sparse  Bucket  Time  Stamp document  Id  v  Document  Id  Data  Counts  Data  Counts  Data  Counts  Data  Counts  get  Jobid  get  Processed  Record  Count  increment  Processed  Record  Count  get  Processed  Field  Count  calc  Processed  Field  Count  get  Input  Record  Count  get  Input  Bytes  increment  Input  Bytes  get  Input  Field  Count  increment  Input  Field  Count  get  Invalid  Date  Count  increment  Invalid  Date  Count  get  Missing  Field  Count  increment  Missing  Field  Count  get  Out  Of  Order  Time  Stamp  Count  increment  Out  Of  Order  Time  Stamp  Count  get  Empty  Bucket  Count  increment  Empty  Bucket  Count  get  Sparse  Bucket  Count  increment  Sparse  Bucket  Count  get  Bucket  Count  increment  Bucket  Count  get  Earliest  Record  Time  Stamp  set  Earliest  Record  Time  Stamp  get  Latest  Record  Time  Stamp  set  Latest  Record  Time  Stamp  update  Latest  Record  Time  Stamp  get  Last  Data  Time  Stamp  set  Last  Data  Time  Stamp  get  Latest  Empty  Bucket  Time  Stamp  set  Latest  Empty  Bucket  Time  Stamp  update  Latest  Empty  Bucket  Time  Stamp  get  Latest  Sparse  Bucket  Time  Stamp  set  Latest  Sparse  Bucket  Time  Stamp  update  Latest  Sparse  Bucket  Time  Stamp  write  To  to  X  Content  do  X  Content  Body  equals  hash  Code Job type  anomaly  detector  job  type  id  job  type  job  version  groups  analysis  config  analysis  limits  create  time  custom  settings  data  description  description  finished  time  model  plot  config  renormalization  window  days  background  persist  interval  model  snapshot  retention  days  daily  model  snapshot  retention  after  days  results  retention  days  model  snapshot  id  model  snapshot  min  version  results  index  name  deleting  allow  lazy  open  results  field  lenient  parser  strict  parser  min  background  persist  interval  process  memory  overhead  default  model  snapshot  retention  days  default  daily  model  snapshot  retention  after  days  job  Id  job  Type  job  Version  groups  description  create  Time  finished  Time  analysis  Config  analysis  Limits  data  Description  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open  Builder  id  job  Type  job  Version  groups  description  analysis  Config  analysis  Limits  data  Description  create  Time  finished  Time  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open create  Parser  Job  Job  document  Id  get  Id  get  Job  Type  get  Job  Version  get  Groups  get  Initial  Results  Index  Name  get  Results  Index  Name  No  Prefix  get  Description  get  Create  Time  get  Finished  Time  get  Analysis  Config  get  Analysis  Limits  get  Model  Plot  Config  get  Data  Description  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  is  Deleting  allow  Lazy  Open  all  Input  Fields  write  To  to  X  Content  do  X  Content  Body  equals  hash  Code  to  String  check  Value  Not  Less  Than  get  Compatible  Job  Types  job  Created  By  Builder  Builder  Builder  Builder  set  Id  get  Id  set  Job  Version  set  Job  Version  set  Job  Type  set  Groups  get  Groups  set  Custom  Settings  set  Description  set  Analysis  Config  get  Analysis  Config  set  Analysis  Limits  set  Create  Time  set  Finished  Time  set  Data  Description  set  Model  Plot  Config  set  Background  Persist  Interval  set  Renormalization  Window  Days  set  Model  Snapshot  Retention  Days  get  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Results  Index  Name  set  Deleting  set  Allow  Lazy  Open  invalid  Create  Time  Settings  write  To  to  X  Content  equals  hash  Code  validate  Input  Fields  validate  Analysis  Limits  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  validate  Groups  validate  Detectors  Are  Unique  build  build  check  Valid  Background  Persist  Interval  check  Time  Field  Not  In  Analysis  Config,1,0
35,merge  With  Job Job  Byte  Size  Value Job  get  Analysis  Config  set  Groups  set  Description  is  Empty  size  get  Detectors  get  Detector  Index  bad  Request  Exception  get  Detector  Index  get  get  Detectors  get  Detector  Index  get  Description  set  Detector  Description  get  Description  get  Rules  set  Rules  get  Rules  set  Detector  get  Detector  Index  build  set  Model  Plot  Config  validate  And  Set  Defaults  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Job  Version  set  Finished  Time  set  Allow  Lazy  Open  set  Analysis  Config  build Job  Update detectors  clear  job  finish  time  internal  parser  external  parser  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open  Detector  Update  parser  detector  Index  description  rules  Builder  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open Job  Update  Job  Update  write  To  get  Job  Id  get  Groups  get  Description  get  Detector  Updates  get  Model  Plot  Config  get  Analysis  Limits  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Categorization  Filters  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  get  Job  Version  get  Clear  Job  Finish  Time  get  Allow  Lazy  Open  is  Autodetect  Process  Update  to  X  Content  get  Update  Fields  is  Noop  updates  Detectors  equals  hash  Code  Detector  Update  Detector  Update  get  Detector  Index  get  Description  get  Rules  write  To  to  X  Content  hash  Code  equals  Builder  set  Job  Id  set  Groups  set  Description  set  Detector  Updates  set  Model  Plot  Config  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Job  Version  set  Job  Version  set  Allow  Lazy  Open  set  Clear  Finish  Time  build Job type  anomaly  detector  job  type  id  job  type  job  version  groups  analysis  config  analysis  limits  create  time  custom  settings  data  description  description  finished  time  model  plot  config  renormalization  window  days  background  persist  interval  model  snapshot  retention  days  daily  model  snapshot  retention  after  days  results  retention  days  model  snapshot  id  model  snapshot  min  version  results  index  name  deleting  allow  lazy  open  results  field  lenient  parser  strict  parser  min  background  persist  interval  process  memory  overhead  default  model  snapshot  retention  days  default  daily  model  snapshot  retention  after  days  job  Id  job  Type  job  Version  groups  description  create  Time  finished  Time  analysis  Config  analysis  Limits  data  Description  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open  Builder  id  job  Type  job  Version  groups  description  analysis  Config  analysis  Limits  data  Description  create  Time  finished  Time  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open create  Parser  Job  Job  document  Id  get  Id  get  Job  Type  get  Job  Version  get  Groups  get  Initial  Results  Index  Name  get  Results  Index  Name  No  Prefix  get  Description  get  Create  Time  get  Finished  Time  get  Analysis  Config  get  Analysis  Limits  get  Model  Plot  Config  get  Data  Description  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  is  Deleting  allow  Lazy  Open  all  Input  Fields  earliest  Valid  Timestamp  write  To  to  X  Content  do  X  Content  Body  equals  hash  Code  to  String  check  Value  Not  Less  Than  get  Compatible  Job  Types  job  Created  By  Builder  Builder  Builder  Builder  set  Id  get  Id  set  Job  Version  set  Job  Version  set  Job  Type  set  Groups  get  Groups  set  Custom  Settings  set  Description  set  Analysis  Config  get  Analysis  Config  set  Analysis  Limits  set  Create  Time  set  Finished  Time  set  Data  Description  set  Model  Plot  Config  set  Background  Persist  Interval  set  Renormalization  Window  Days  set  Model  Snapshot  Retention  Days  get  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Results  Index  Name  set  Deleting  set  Allow  Lazy  Open  invalid  Create  Time  Settings  write  To  to  X  Content  equals  hash  Code  validate  Input  Fields  validate  Analysis  Limits  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  validate  Groups  validate  Detectors  Are  Unique  build  build  check  Valid  Background  Persist  Interval  check  Time  Field  Not  In  Analysis  Config,0,0
36,merge  With  Job Job  Byte  Size  Value Job  get  Analysis  Config  set  Groups  set  Description  is  Empty  size  get  Detectors  get  Detector  Index  bad  Request  Exception  get  Detector  Index  get  get  Detectors  get  Detector  Index  get  Description  set  Detector  Description  get  Description  get  Rules  set  Rules  get  Rules  set  Detector  get  Detector  Index  build  set  Model  Plot  Config  validate  And  Set  Defaults  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Job  Version  set  Finished  Time  set  Allow  Lazy  Open  set  Analysis  Config  build Job type  anomaly  detector  job  type  id  job  type  job  version  groups  analysis  config  analysis  limits  create  time  custom  settings  data  description  description  finished  time  model  plot  config  renormalization  window  days  background  persist  interval  model  snapshot  retention  days  daily  model  snapshot  retention  after  days  results  retention  days  model  snapshot  id  model  snapshot  min  version  results  index  name  deleting  allow  lazy  open  results  field  lenient  parser  strict  parser  min  background  persist  interval  process  memory  overhead  default  model  snapshot  retention  days  default  daily  model  snapshot  retention  after  days  job  Id  job  Type  job  Version  groups  description  create  Time  finished  Time  analysis  Config  analysis  Limits  data  Description  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open  Builder  id  job  Type  job  Version  groups  description  analysis  Config  analysis  Limits  data  Description  create  Time  finished  Time  model  Plot  Config  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  results  Index  Name  deleting  allow  Lazy  Open create  Parser  Job  Job  document  Id  get  Id  get  Job  Type  get  Job  Version  get  Groups  get  Initial  Results  Index  Name  get  Results  Index  Name  No  Prefix  get  Description  get  Create  Time  get  Finished  Time  get  Analysis  Config  get  Analysis  Limits  get  Model  Plot  Config  get  Data  Description  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  is  Deleting  allow  Lazy  Open  all  Input  Fields  earliest  Valid  Timestamp  write  To  to  X  Content  do  X  Content  Body  equals  hash  Code  to  String  check  Value  Not  Less  Than  get  Compatible  Job  Types  job  Created  By  Builder  Builder  Builder  Builder  set  Id  get  Id  set  Job  Version  set  Job  Version  set  Job  Type  set  Groups  get  Groups  set  Custom  Settings  set  Description  set  Analysis  Config  get  Analysis  Config  set  Analysis  Limits  set  Create  Time  set  Finished  Time  set  Data  Description  set  Model  Plot  Config  set  Background  Persist  Interval  set  Renormalization  Window  Days  set  Model  Snapshot  Retention  Days  get  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Results  Index  Name  set  Deleting  set  Allow  Lazy  Open  invalid  Create  Time  Settings  write  To  to  X  Content  equals  hash  Code  validate  Input  Fields  validate  Analysis  Limits  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  And  Set  Defaults  validate  Model  Snapshot  Retention  Settings  validate  Groups  validate  Detectors  Are  Unique  build  build  check  Valid  Background  Persist  Interval  check  Time  Field  Not  In  Analysis  Config Job  Update detectors  clear  job  finish  time  internal  parser  external  parser  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open  Detector  Update  parser  detector  Index  description  rules  Builder  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open Job  Update  Job  Update  write  To  get  Job  Id  get  Groups  get  Description  get  Detector  Updates  get  Model  Plot  Config  get  Analysis  Limits  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Categorization  Filters  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  get  Job  Version  get  Clear  Job  Finish  Time  get  Allow  Lazy  Open  is  Autodetect  Process  Update  to  X  Content  get  Update  Fields  is  Noop  updates  Detectors  equals  hash  Code  Detector  Update  Detector  Update  get  Detector  Index  get  Description  get  Rules  write  To  to  X  Content  hash  Code  equals  Builder  set  Job  Id  set  Groups  set  Description  set  Detector  Updates  set  Model  Plot  Config  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Job  Version  set  Job  Version  set  Allow  Lazy  Open  set  Clear  Finish  Time  build,1,0
37,merge  With  Job Job  Byte  Size  Value Job  get  Analysis  Config  set  Groups  set  Description  is  Empty  size  get  Detectors  get  Detector  Index  bad  Request  Exception  get  Detector  Index  get  get  Detectors  get  Detector  Index  get  Description  set  Detector  Description  get  Description  get  Rules  set  Rules  get  Rules  set  Detector  get  Detector  Index  build  set  Model  Plot  Config  validate  And  Set  Defaults  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Job  Version  set  Finished  Time  set  Allow  Lazy  Open  set  Analysis  Config  build Job  Update detectors  clear  job  finish  time  internal  parser  external  parser  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open  Detector  Update  parser  detector  Index  description  rules  Builder  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open Job  Update  Job  Update  write  To  get  Job  Id  get  Groups  get  Description  get  Detector  Updates  get  Model  Plot  Config  get  Analysis  Limits  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Categorization  Filters  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  get  Job  Version  get  Clear  Job  Finish  Time  get  Allow  Lazy  Open  is  Autodetect  Process  Update  to  X  Content  get  Update  Fields  is  Noop  updates  Detectors  equals  hash  Code  Detector  Update  Detector  Update  get  Detector  Index  get  Description  get  Rules  write  To  to  X  Content  hash  Code  equals  Builder  set  Job  Id  set  Groups  set  Description  set  Detector  Updates  set  Model  Plot  Config  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Job  Version  set  Job  Version  set  Allow  Lazy  Open  set  Clear  Finish  Time  build Byte  Size  Value Deprecation  Logger  Holder  deprecation  Logger  zero  size  unit validate  Total  Circuit  Breaker  Limit  Byte  Size  Value  write  To  Byte  Size  Value  Byte  Size  Value  get  Size  get  Unit  bytes  As  Int  get  Bytes  get  Kb  get  Mb  get  Gb  get  Tb  get  Pb  get  Kb  Frac  get  Mb  Frac  get  Gb  Frac  get  Tb  Frac  get  Pb  Frac  get  String  Rep  to  String  parse  Bytes  Size  Value  parse  Bytes  Size  Value  parse  equals  hash  Code  compare  To  to  X  Content,0,0
38,merge  With  Job Job  Byte  Size  Value Job  get  Analysis  Config  set  Groups  set  Description  is  Empty  size  get  Detectors  get  Detector  Index  bad  Request  Exception  get  Detector  Index  get  get  Detectors  get  Detector  Index  get  Description  set  Detector  Description  get  Description  get  Rules  set  Rules  get  Rules  set  Detector  get  Detector  Index  build  set  Model  Plot  Config  validate  And  Set  Defaults  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Job  Version  set  Finished  Time  set  Allow  Lazy  Open  set  Analysis  Config  build Byte  Size  Value Deprecation  Logger  Holder  deprecation  Logger  zero  size  unit validate  Total  Circuit  Breaker  Limit  Byte  Size  Value  write  To  Byte  Size  Value  Byte  Size  Value  get  Size  get  Unit  bytes  As  Int  get  Bytes  get  Kb  get  Mb  get  Gb  get  Tb  get  Pb  get  Kb  Frac  get  Mb  Frac  get  Gb  Frac  get  Tb  Frac  get  Pb  Frac  get  String  Rep  to  String  parse  Bytes  Size  Value  parse  Bytes  Size  Value  parse  equals  hash  Code  compare  To  to  X  Content Job  Update detectors  clear  job  finish  time  internal  parser  external  parser  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open  Detector  Update  parser  detector  Index  description  rules  Builder  job  Id  groups  description  detector  Updates  model  Plot  Config  analysis  Limits  renormalization  Window  Days  background  Persist  Interval  model  Snapshot  Retention  Days  daily  Model  Snapshot  Retention  After  Days  results  Retention  Days  categorization  Filters  custom  Settings  model  Snapshot  Id  model  Snapshot  Min  Version  job  Version  clear  Job  Finish  Time  allow  Lazy  Open Job  Update  Job  Update  write  To  get  Job  Id  get  Groups  get  Description  get  Detector  Updates  get  Model  Plot  Config  get  Analysis  Limits  get  Renormalization  Window  Days  get  Background  Persist  Interval  get  Model  Snapshot  Retention  Days  get  Daily  Model  Snapshot  Retention  After  Days  get  Results  Retention  Days  get  Categorization  Filters  get  Custom  Settings  get  Model  Snapshot  Id  get  Model  Snapshot  Min  Version  get  Job  Version  get  Clear  Job  Finish  Time  get  Allow  Lazy  Open  is  Autodetect  Process  Update  to  X  Content  get  Update  Fields  is  Noop  updates  Detectors  equals  hash  Code  Detector  Update  Detector  Update  get  Detector  Index  get  Description  get  Rules  write  To  to  X  Content  hash  Code  equals  Builder  set  Job  Id  set  Groups  set  Description  set  Detector  Updates  set  Model  Plot  Config  set  Analysis  Limits  set  Renormalization  Window  Days  set  Background  Persist  Interval  set  Model  Snapshot  Retention  Days  set  Daily  Model  Snapshot  Retention  After  Days  set  Results  Retention  Days  set  Categorization  Filters  set  Custom  Settings  set  Model  Snapshot  Id  set  Model  Snapshot  Min  Version  set  Model  Snapshot  Min  Version  set  Job  Version  set  Job  Version  set  Allow  Lazy  Open  set  Clear  Finish  Time  build,1,0
39,as  Map Categorization  Analyzer  Config Map  String  to  String  create  Parser  map  Ordered Categorization  Analyzer  Config categorization  analyzer  tokenizer  token  filters  char  filters  analyzer  char  Filters  tokenizer  token  Filters  Builder  analyzer  char  Filters  tokenizer  token  Filters build  From  X  Content  Object  build  From  X  Content  Fragment  build  Default  Categorization  Analyzer  Categorization  Analyzer  Config  Categorization  Analyzer  Config  write  To  get  Analyzer  get  Char  Filters  get  Tokenizer  get  Token  Filters  to  X  Content  equals  hash  Code  Builder  Builder  set  Analyzer  add  Char  Filter  add  Char  Filter  set  Tokenizer  set  Tokenizer  add  Token  Filter  add  Token  Filter  build Named  X  Content  Registry empty  Entry  category  Class  name  parser  registry Entry  Entry  Named  X  Content  Registry  parse  Named  Object,0,0
40,as  Map Categorization  Analyzer  Config Map  String  to  String  create  Parser  map  Ordered Named  X  Content  Registry empty  Entry  category  Class  name  parser  registry Entry  Entry  Named  X  Content  Registry  parse  Named  Object Categorization  Analyzer  Config categorization  analyzer  tokenizer  token  filters  char  filters  analyzer  char  Filters  tokenizer  token  Filters  Builder  analyzer  char  Filters  tokenizer  token  Filters build  From  X  Content  Object  build  From  X  Content  Fragment  build  Default  Categorization  Analyzer  Categorization  Analyzer  Config  Categorization  Analyzer  Config  write  To  get  Analyzer  get  Char  Filters  get  Tokenizer  get  Token  Filters  to  X  Content  equals  hash  Code  Builder  Builder  set  Analyzer  add  Char  Filter  add  Char  Filter  set  Tokenizer  set  Tokenizer  add  Token  Filter  add  Token  Filter  build,1,1
41,add  Cause Anomaly  Record void  get  Causes  set  Causes  add  get  Causes Anomaly  Record result  type  value  probability  multi  bucket  impact  by  field  name  by  field  value  correlated  by  field  value  partition  field  name  partition  field  value  function  function  description  typical  actual  influencers  bucket  span  geo  results  results  field  field  name  over  field  name  over  field  value  causes  record  score  initial  record  score  strict  parser  lenient  parser  job  Id  detector  Index  probability  multi  Bucket  Impact  by  Field  Name  by  Field  Value  correlated  By  Field  Value  partition  Field  Name  partition  Field  Value  function  function  Description  typical  actual  is  Interim  geo  Results  field  Name  over  Field  Name  over  Field  Value  causes  record  Score  initial  Record  Score  timestamp  bucket  Span  influences create  Parser  Anomaly  Record  Anomaly  Record  write  To  to  X  Content  inner  To  X  Content  input  Field  Map  add  Input  Fields  To  Map  get  Job  Id  get  Id  build  Id  get  Detector  Index  set  Detector  Index  get  Record  Score  set  Record  Score  get  Initial  Record  Score  set  Initial  Record  Score  get  Timestamp  get  Bucket  Span  get  Probability  set  Probability  get  Multi  Bucket  Impact  set  Multi  Bucket  Impact  get  By  Field  Name  set  By  Field  Name  get  By  Field  Value  set  By  Field  Value  get  Correlated  By  Field  Value  set  Correlated  By  Field  Value  get  Partition  Field  Name  set  Partition  Field  Name  get  Partition  Field  Value  set  Partition  Field  Value  get  Function  set  Function  get  Function  Description  set  Function  Description  get  Typical  set  Typical  get  Actual  set  Actual  is  Interim  set  Interim  get  Field  Name  set  Field  Name  get  Over  Field  Name  set  Over  Field  Name  get  Over  Field  Value  set  Over  Field  Value  get  Causes  set  Causes  get  Influencers  set  Influencers  get  Geo  Results  set  Geo  Results  hash  Code  equals  to  String Anomaly  Cause anomaly  cause  probability  over  field  name  over  field  value  by  field  name  by  field  value  correlated  by  field  value  partition  field  name  partition  field  value  function  function  description  typical  actual  influencers  geo  results  field  name  strict  parser  lenient  parser  probability  by  Field  Name  by  Field  Value  correlated  By  Field  Value  partition  Field  Name  partition  Field  Value  function  function  Description  typical  actual  geo  Results  field  Name  over  Field  Name  over  Field  Value  influencers create  Parser  Anomaly  Cause  Anomaly  Cause  write  To  to  X  Content  get  Probability  set  Probability  get  By  Field  Name  set  By  Field  Name  get  By  Field  Value  set  By  Field  Value  get  Correlated  By  Field  Value  set  Correlated  By  Field  Value  get  Partition  Field  Name  set  Partition  Field  Name  get  Partition  Field  Value  set  Partition  Field  Value  get  Function  set  Function  get  Function  Description  set  Function  Description  get  Typical  set  Typical  get  Actual  set  Actual  get  Field  Name  set  Field  Name  get  Over  Field  Name  set  Over  Field  Name  get  Over  Field  Value  set  Over  Field  Value  get  Influencers  set  Influencers  get  Geo  Results  set  Geo  Results  hash  Code  equals  to  String,0,0
42,add  Cause Anomaly  Record void  get  Causes  set  Causes  add  get  Causes Anomaly  Cause anomaly  cause  probability  over  field  name  over  field  value  by  field  name  by  field  value  correlated  by  field  value  partition  field  name  partition  field  value  function  function  description  typical  actual  influencers  geo  results  field  name  strict  parser  lenient  parser  probability  by  Field  Name  by  Field  Value  correlated  By  Field  Value  partition  Field  Name  partition  Field  Value  function  function  Description  typical  actual  geo  Results  field  Name  over  Field  Name  over  Field  Value  influencers create  Parser  Anomaly  Cause  Anomaly  Cause  write  To  to  X  Content  get  Probability  set  Probability  get  By  Field  Name  set  By  Field  Name  get  By  Field  Value  set  By  Field  Value  get  Correlated  By  Field  Value  set  Correlated  By  Field  Value  get  Partition  Field  Name  set  Partition  Field  Name  get  Partition  Field  Value  set  Partition  Field  Value  get  Function  set  Function  get  Function  Description  set  Function  Description  get  Typical  set  Typical  get  Actual  set  Actual  get  Field  Name  set  Field  Name  get  Over  Field  Name  set  Over  Field  Name  get  Over  Field  Value  set  Over  Field  Value  get  Influencers  set  Influencers  get  Geo  Results  set  Geo  Results  hash  Code  equals  to  String Anomaly  Record result  type  value  probability  multi  bucket  impact  by  field  name  by  field  value  correlated  by  field  value  partition  field  name  partition  field  value  function  function  description  typical  actual  influencers  bucket  span  geo  results  results  field  field  name  over  field  name  over  field  value  causes  record  score  initial  record  score  strict  parser  lenient  parser  job  Id  detector  Index  probability  multi  Bucket  Impact  by  Field  Name  by  Field  Value  correlated  By  Field  Value  partition  Field  Name  partition  Field  Value  function  function  Description  typical  actual  is  Interim  geo  Results  field  Name  over  Field  Name  over  Field  Value  causes  record  Score  initial  Record  Score  timestamp  bucket  Span  influences create  Parser  Anomaly  Record  Anomaly  Record  write  To  to  X  Content  inner  To  X  Content  input  Field  Map  add  Input  Fields  To  Map  get  Job  Id  get  Id  build  Id  get  Detector  Index  set  Detector  Index  get  Record  Score  set  Record  Score  get  Initial  Record  Score  set  Initial  Record  Score  get  Timestamp  get  Bucket  Span  get  Probability  set  Probability  get  Multi  Bucket  Impact  set  Multi  Bucket  Impact  get  By  Field  Name  set  By  Field  Name  get  By  Field  Value  set  By  Field  Value  get  Correlated  By  Field  Value  set  Correlated  By  Field  Value  get  Partition  Field  Name  set  Partition  Field  Name  get  Partition  Field  Value  set  Partition  Field  Value  get  Function  set  Function  get  Function  Description  set  Function  Description  get  Typical  set  Typical  get  Actual  set  Actual  is  Interim  set  Interim  get  Field  Name  set  Field  Name  get  Over  Field  Name  set  Over  Field  Name  get  Over  Field  Value  set  Over  Field  Value  get  Causes  set  Causes  get  Influencers  set  Influencers  get  Geo  Results  set  Geo  Results  hash  Code  equals  to  String,1,1
43,parse  Aggregations Named  X  Content  Registry  List  String Aggregator  Factories  Builder  get  Aggs  from  Map  aggregator  Transformer  get  Aggs  get  Cause  get  Cause  bad  Request  Exception Datafeed  Config default  scroll  size  seconds  in  minute  two  mins  seconds  twenty  mins  seconds  half  day  seconds  logger  results  field  type  doc  count  id  config  type  query  delay  frequency  indexes  indices  query  scroll  size  aggregations  aggs  script  fields  chunking  config  headers  delayed  data  check  config  max  empty  searches  indices  options  lenient  parser  strict  parser  id  job  Id  query  Delay  frequency  indices  query  Provider  agg  Provider  script  Fields  scroll  Size  chunking  Config  headers  delayed  Data  Check  Config  max  Empty  Searches  indices  Options  Builder  default  aggregation  chunking  buckets  min  default  query  delay  max  default  query  delay  id  job  Id  query  Delay  frequency  indices  query  Provider  agg  Provider  script  Fields  scroll  Size  chunking  Config  headers  delayed  Data  Check  Config  max  Empty  Searches  indices  Options validate  Aggregations  create  Parser  Datafeed  Config  Datafeed  Config  document  Id  get  Id  get  Job  Id  get  Config  Type  get  Query  Delay  get  Frequency  get  Indices  get  Scroll  Size  get  Parsed  Query  parse  Query  get  Query  Parsing  Exception  get  Query  Deprecations  get  Query  get  Parsed  Aggregations  get  Agg  Parsing  Exception  get  Agg  Deprecations  get  Aggregations  get  Histogram  Interval  Millis  has  Aggregations  aggs  Rewritten  get  Agg  Provider  get  Script  Fields  get  Chunking  Config  get  Headers  get  Delayed  Data  Check  Config  get  Max  Empty  Searches  get  Indices  Options  write  To  to  X  Content  equals  hash  Code  to  String  default  Frequency  default  Frequency  Target  Builder  Builder  Builder  set  Id  get  Id  set  Job  Id  set  Headers  set  Indices  set  Query  Delay  set  Frequency  set  Query  Provider  set  Parsed  Query  set  Parsed  Aggregations  set  Aggregations  Safe  set  Agg  Provider  set  Script  Fields  set  Scroll  Size  set  Chunking  Config  set  Delayed  Data  Check  Config  set  Max  Empty  Searches  set  Indices  Options  get  Indices  Options  build  validate  Script  Fields  check  No  More  Histogram  Aggregations  check  Histogram  Aggregation  Has  Child  Max  Time  Agg  check  Histogram  Interval  Is  Positive  set  Default  Chunking  Config  set  Default  Query  Delay  invalid  Option  Value Named  X  Content  Registry empty  Entry  category  Class  name  parser  registry as  Map  Entry  Entry  Named  X  Content  Registry  parse  Named  Object,0,0
44,parse  Aggregations Named  X  Content  Registry  List  String Aggregator  Factories  Builder  get  Aggs  from  Map  aggregator  Transformer  get  Aggs  get  Cause  get  Cause  bad  Request  Exception Named  X  Content  Registry empty  Entry  category  Class  name  parser  registry as  Map  Entry  Entry  Named  X  Content  Registry  parse  Named  Object Datafeed  Config default  scroll  size  seconds  in  minute  two  mins  seconds  twenty  mins  seconds  half  day  seconds  logger  results  field  type  doc  count  id  config  type  query  delay  frequency  indexes  indices  query  scroll  size  aggregations  aggs  script  fields  chunking  config  headers  delayed  data  check  config  max  empty  searches  indices  options  lenient  parser  strict  parser  id  job  Id  query  Delay  frequency  indices  query  Provider  agg  Provider  script  Fields  scroll  Size  chunking  Config  headers  delayed  Data  Check  Config  max  Empty  Searches  indices  Options  Builder  default  aggregation  chunking  buckets  min  default  query  delay  max  default  query  delay  id  job  Id  query  Delay  frequency  indices  query  Provider  agg  Provider  script  Fields  scroll  Size  chunking  Config  headers  delayed  Data  Check  Config  max  Empty  Searches  indices  Options validate  Aggregations  create  Parser  Datafeed  Config  Datafeed  Config  document  Id  get  Id  get  Job  Id  get  Config  Type  get  Query  Delay  get  Frequency  get  Indices  get  Scroll  Size  get  Parsed  Query  parse  Query  get  Query  Parsing  Exception  get  Query  Deprecations  get  Query  get  Parsed  Aggregations  get  Agg  Parsing  Exception  get  Agg  Deprecations  get  Aggregations  get  Histogram  Interval  Millis  has  Aggregations  aggs  Rewritten  get  Agg  Provider  get  Script  Fields  get  Chunking  Config  get  Headers  get  Delayed  Data  Check  Config  get  Max  Empty  Searches  get  Indices  Options  write  To  to  X  Content  equals  hash  Code  to  String  default  Frequency  default  Frequency  Target  Builder  Builder  Builder  set  Id  get  Id  set  Job  Id  set  Headers  set  Indices  set  Query  Delay  set  Frequency  set  Query  Provider  set  Parsed  Query  set  Parsed  Aggregations  set  Aggregations  Safe  set  Agg  Provider  set  Script  Fields  set  Scroll  Size  set  Chunking  Config  set  Delayed  Data  Check  Config  set  Max  Empty  Searches  set  Indices  Options  get  Indices  Options  build  validate  Script  Fields  check  No  More  Histogram  Aggregations  check  Histogram  Aggregation  Has  Child  Max  Time  Agg  check  Histogram  Interval  Is  Positive  set  Default  Chunking  Config  set  Default  Query  Delay  invalid  Option  Value,1,0
45,add  Optional  Field X  Content  Builder  Object  Datafeed  Update void  field  get  Preferred  Name Datafeed  Update parser  id  query  Delay  frequency  indices  query  aggregations  script  Fields  scroll  Size  chunking  Config  delayed  Data  Check  Config  max  Empty  Searches  indices  Options  Builder  id  query  Delay  frequency  indices  query  aggregations  script  Fields  scroll  Size  chunking  Config  delayed  Data  Check  Config  max  Empty  Searches  indices  Options parse  Bytes  Datafeed  Update  get  Id  to  X  Content  get  Query  Delay  get  Frequency  get  Indices  get  Scroll  Size  get  Query  get  Aggregations  get  Script  Fields  get  Chunking  Config  get  Delayed  Data  Check  Config  get  Max  Empty  Searches  get  Indices  Options  as  Map  equals  hash  Code  builder  Builder  Builder  set  Indices  set  Indices  set  Query  Delay  set  Frequency  set  Query  set  Query  set  Query  set  Aggregations  set  Aggregations  set  Aggregations  set  Script  Fields  set  Scroll  Size  set  Chunking  Config  set  Delayed  Data  Check  Config  set  Max  Empty  Searches  set  Indices  Options  build  x  Content  To  Bytes Parse  Field name  deprecated  Names  all  Replaced  With  all  Names  fully  Deprecated  empty  Common  Fields  field  fields  format  missing  time  zone Parse  Field  get  Preferred  Name  get  All  Names  Included  Deprecated  with  Deprecation  with  All  Deprecated  with  All  Deprecated  match  match  to  String  get  All  Replaced  With  get  Deprecated  Names,0,0
46,add  Optional  Field X  Content  Builder  Object  Datafeed  Update void  field  get  Preferred  Name Parse  Field name  deprecated  Names  all  Replaced  With  all  Names  fully  Deprecated  empty  Common  Fields  field  fields  format  missing  time  zone Parse  Field  get  Preferred  Name  get  All  Names  Included  Deprecated  with  Deprecation  with  All  Deprecated  with  All  Deprecated  match  match  to  String  get  All  Replaced  With  get  Deprecated  Names Datafeed  Update parser  id  query  Delay  frequency  indices  query  aggregations  script  Fields  scroll  Size  chunking  Config  delayed  Data  Check  Config  max  Empty  Searches  indices  Options  Builder  id  query  Delay  frequency  indices  query  aggregations  script  Fields  scroll  Size  chunking  Config  delayed  Data  Check  Config  max  Empty  Searches  indices  Options parse  Bytes  Datafeed  Update  get  Id  to  X  Content  get  Query  Delay  get  Frequency  get  Indices  get  Scroll  Size  get  Query  get  Aggregations  get  Script  Fields  get  Chunking  Config  get  Delayed  Data  Check  Config  get  Max  Empty  Searches  get  Indices  Options  as  Map  equals  hash  Code  builder  Builder  Builder  set  Indices  set  Indices  set  Query  Delay  set  Frequency  set  Query  set  Query  set  Query  set  Aggregations  set  Aggregations  set  Aggregations  set  Script  Fields  set  Scroll  Size  set  Chunking  Config  set  Delayed  Data  Check  Config  set  Max  Empty  Searches  set  Indices  Options  build  x  Content  To  Bytes,1,1
47,to  Detection  Rule Time  Value Detection  Rule  get  Seconds  align  To  Floor  get  Epoch  Second  get  Start  Time  add  create  Time  align  To  Ceil  get  Epoch  Second  get  End  Time  add  create  Time  set  Actions  build Scheduled  Event description  start  time  end  time  type  event  id  results  field  scheduled  event  type  document  id  prefix  strict  parser  lenient  parser  description  start  Time  end  Time  calendar  Id  event  Id  Builder  description  start  Time  end  Time  calendar  Id  event  Id create  Parser  document  Id  Scheduled  Event  Scheduled  Event  get  Description  get  Start  Time  get  End  Time  get  Calendar  Id  get  Event  Id  write  To  to  X  Content  equals  hash  Code  description  start  Time  end  Time  calendar  Id  get  Calendar  Id  event  Id  build Time  Value nsec  per  msec  minus  one  zero  c  c  c  c  c  c  c  duration  time  Unit Time  Value  Time  Value  time  Value  Nanos  time  Value  Millis  time  Value  Seconds  time  Value  Minutes  time  Value  Hours  time  Value  Days  time  Unit  duration  nanos  get  Nanos  micros  get  Micros  millis  get  Millis  seconds  get  Seconds  minutes  get  Minutes  hours  get  Hours  days  get  Days  micros  Frac  get  Micros  Frac  millis  Frac  get  Millis  Frac  seconds  Frac  get  Seconds  Frac  minutes  Frac  get  Minutes  Frac  hours  Frac  get  Hours  Frac  days  Frac  get  Days  Frac  to  String  to  Human  Readable  String  format  Decimal  get  String  Rep  parse  Time  Value  parse  Time  Value  parse  equals  hash  Code  nsec  To  M  Sec  compare  To  add  Max  Index  Age  Condition,0,0
48,to  Detection  Rule Time  Value Detection  Rule  get  Seconds  align  To  Floor  get  Epoch  Second  get  Start  Time  add  create  Time  align  To  Ceil  get  Epoch  Second  get  End  Time  add  create  Time  set  Actions  build Time  Value nsec  per  msec  minus  one  zero  c  c  c  c  c  c  c  duration  time  Unit Time  Value  Time  Value  time  Value  Nanos  time  Value  Millis  time  Value  Seconds  time  Value  Minutes  time  Value  Hours  time  Value  Days  time  Unit  duration  nanos  get  Nanos  micros  get  Micros  millis  get  Millis  seconds  get  Seconds  minutes  get  Minutes  hours  get  Hours  days  get  Days  micros  Frac  get  Micros  Frac  millis  Frac  get  Millis  Frac  seconds  Frac  get  Seconds  Frac  minutes  Frac  get  Minutes  Frac  hours  Frac  get  Hours  Frac  days  Frac  get  Days  Frac  to  String  to  Human  Readable  String  format  Decimal  get  String  Rep  parse  Time  Value  parse  Time  Value  parse  equals  hash  Code  nsec  To  M  Sec  compare  To  add  Max  Index  Age  Condition Scheduled  Event description  start  time  end  time  type  event  id  results  field  scheduled  event  type  document  id  prefix  strict  parser  lenient  parser  description  start  Time  end  Time  calendar  Id  event  Id  Builder  description  start  Time  end  Time  calendar  Id  event  Id create  Parser  document  Id  Scheduled  Event  Scheduled  Event  get  Description  get  Start  Time  get  End  Time  get  Calendar  Id  get  Event  Id  write  To  to  X  Content  equals  hash  Code  description  start  Time  end  Time  calendar  Id  get  Calendar  Id  event  Id  build,1,0
49,is  Noop Classification  Config  Update boolean  get  Results  Field  equals  get  Results  Field  get  Results  Field  get  Num  Top  Feature  Importance  Values  get  Num  Top  Feature  Importance  Values  get  Num  Top  Feature  Importance  Values  get  Top  Classes  Results  Field  equals  get  Top  Classes  Results  Field  get  Top  Classes  Results  Field  get  Num  Top  Classes  get  Num  Top  Classes  get  Num  Top  Classes  get  Prediction  Field  Type  equals  get  Prediction  Field  Type  get  Prediction  Field  Type Classification  Config  Update name  empty  params  num  Top  Classes  top  Classes  Results  Field  results  Field  num  Top  Feature  Importance  Values  prediction  Field  Type  strict  parser  Builder  num  Top  Classes  top  Classes  Results  Field  results  Field  num  Top  Feature  Importance  Values  prediction  Field  Type from  Map  from  Config  create  Parser  from  X  Content  Strict  Classification  Config  Update  Classification  Config  Update  get  Num  Top  Classes  get  Top  Classes  Results  Field  get  Results  Field  get  Num  Top  Feature  Importance  Values  get  Prediction  Field  Type  write  To  equals  hash  Code  to  X  Content  get  Writeable  Name  get  Name  apply  to  Config  is  Supported  set  Num  Top  Classes  set  Top  Classes  Results  Field  set  Results  Field  set  Num  Top  Feature  Importance  Values  set  Prediction  Field  Type  set  Prediction  Field  Type  build Classification  Config name  default  top  classes  results  field  default  results  field  results  field  num  top  classes  top  classes  results  field  num  top  feature  importance  values  prediction  field  type  min  supported  version  empty  params  num  Top  Classes  top  Classes  Results  Field  results  Field  num  Top  Feature  Importance  Values  prediction  Field  Type  lenient  parser  strict  parser  Builder  num  Top  Classes  top  Classes  Results  Field  results  Field  prediction  Field  Type  num  Top  Feature  Importance  Values create  Parser  from  X  Content  Strict  from  X  Content  Lenient  Classification  Config  Classification  Config  Classification  Config  get  Num  Top  Classes  get  Top  Classes  Results  Field  get  Results  Field  get  Num  Top  Feature  Importance  Values  get  Prediction  Field  Type  requesting  Importance  write  To  equals  hash  Code  to  X  Content  get  Writeable  Name  get  Name  is  Target  Type  Supported  get  Minimal  Supported  Version  builder  Builder  Builder  set  Num  Top  Classes  set  Top  Classes  Results  Field  set  Results  Field  set  Num  Top  Feature  Importance  Values  set  Prediction  Field  Type  build,0,0
50,is  Noop Classification  Config  Update boolean  get  Results  Field  equals  get  Results  Field  get  Results  Field  get  Num  Top  Feature  Importance  Values  get  Num  Top  Feature  Importance  Values  get  Num  Top  Feature  Importance  Values  get  Top  Classes  Results  Field  equals  get  Top  Classes  Results  Field  get  Top  Classes  Results  Field  get  Num  Top  Classes  get  Num  Top  Classes  get  Num  Top  Classes  get  Prediction  Field  Type  equals  get  Prediction  Field  Type  get  Prediction  Field  Type Classification  Config name  default  top  classes  results  field  default  results  field  results  field  num  top  classes  top  classes  results  field  num  top  feature  importance  values  prediction  field  type  min  supported  version  empty  params  num  Top  Classes  top  Classes  Results  Field  results  Field  num  Top  Feature  Importance  Values  prediction  Field  Type  lenient  parser  strict  parser  Builder  num  Top  Classes  top  Classes  Results  Field  results  Field  prediction  Field  Type  num  Top  Feature  Importance  Values create  Parser  from  X  Content  Strict  from  X  Content  Lenient  Classification  Config  Classification  Config  Classification  Config  get  Num  Top  Classes  get  Top  Classes  Results  Field  get  Results  Field  get  Num  Top  Feature  Importance  Values  get  Prediction  Field  Type  requesting  Importance  write  To  equals  hash  Code  to  X  Content  get  Writeable  Name  get  Name  is  Target  Type  Supported  get  Minimal  Supported  Version  builder  Builder  Builder  set  Num  Top  Classes  set  Top  Classes  Results  Field  set  Results  Field  set  Num  Top  Feature  Importance  Values  set  Prediction  Field  Type  build Classification  Config  Update name  empty  params  num  Top  Classes  top  Classes  Results  Field  results  Field  num  Top  Feature  Importance  Values  prediction  Field  Type  strict  parser  Builder  num  Top  Classes  top  Classes  Results  Field  results  Field  num  Top  Feature  Importance  Values  prediction  Field  Type from  Map  from  Config  create  Parser  from  X  Content  Strict  Classification  Config  Update  Classification  Config  Update  get  Num  Top  Classes  get  Top  Classes  Results  Field  get  Results  Field  get  Num  Top  Feature  Importance  Values  get  Prediction  Field  Type  write  To  equals  hash  Code  to  X  Content  get  Writeable  Name  get  Name  apply  to  Config  is  Supported  set  Num  Top  Classes  set  Top  Classes  Results  Field  set  Results  Field  set  Num  Top  Feature  Importance  Values  set  Prediction  Field  Type  set  Prediction  Field  Type  build,1,1
51,from  Stream  Input Stream  Input void  read  Optional  V  Int  read  Optional  V  Int  read  Optional  Writeable  read  Optional  V  Int  read  Optional  Writeable  read  Optional  V  Int  read  Optional  V  Int  read  Optional  Writeable  read  Optional  Time  Value  read  Optional  Time  Value Follow  Parameters retry  delay  max  max  read  request  operation  count  max  write  request  operation  count  max  outstanding  read  requests  max  outstanding  write  requests  max  read  request  size  max  write  request  size  max  write  buffer  count  max  write  buffer  size  max  retry  delay  read  poll  timeout  max  Read  Request  Operation  Count  max  Write  Request  Operation  Count  max  Outstanding  Read  Requests  max  Outstanding  Write  Requests  max  Read  Request  Size  max  Write  Request  Size  max  Write  Buffer  Count  max  Write  Buffer  Size  max  Retry  Delay  read  Poll  Timeout Follow  Parameters  Follow  Parameters  get  Max  Read  Request  Operation  Count  set  Max  Read  Request  Operation  Count  get  Max  Read  Request  Size  set  Max  Read  Request  Size  get  Max  Outstanding  Read  Requests  set  Max  Outstanding  Read  Requests  get  Max  Write  Request  Operation  Count  set  Max  Write  Request  Operation  Count  get  Max  Write  Request  Size  set  Max  Write  Request  Size  get  Max  Outstanding  Write  Requests  set  Max  Outstanding  Write  Requests  get  Max  Write  Buffer  Count  set  Max  Write  Buffer  Count  get  Max  Write  Buffer  Size  set  Max  Write  Buffer  Size  get  Max  Retry  Delay  set  Max  Retry  Delay  get  Read  Poll  Timeout  set  Read  Poll  Timeout  validate  Follow  Parameters  write  To  to  X  Content  to  X  Content  Fragment  init  Parser  equals  hash  Code Stream  Input byte  time  unit  map  version  small  string  limit  string  Read  Buffer  small  Spare  large  Spare  empty  object  array  empty  int  array  empty  long  array  empty  float  array  empty  double  array  empty  byte  array get  Version  set  Version  read  Byte  read  Bytes  read  Bytes  Reference  read  Optional  Bytes  Reference  read  Bytes  Reference  read  Bytes  Ref  read  Bytes  Ref  read  Fully  read  Short  read  Int  read  Optional  Int  read  V  Int  read  Long  read  V  Long  read  Optional  V  Long  read  Z  Long  read  Optional  Long  read  Optional  Text  read  Text  read  Optional  String  read  Optional  Secure  String  read  Optional  Float  read  Optional  V  Int  read  String  throw  On  Broken  Char  read  Secure  String  read  Float  read  Double  read  Optional  Double  read  Boolean  read  Boolean  read  Optional  Boolean  close  available  read  String  Array  read  Optional  String  Array  read  Map  read  Map  Of  Lists  read  Map  read  Generic  Value  read  Instant  read  Optional  Instant  read  Array  List  read  Date  Time  read  Zoned  Date  Time  read  Array  read  Linked  Hash  Map  read  Hash  Map  read  Date  read  Geo  Point  read  Time  Zone  read  Optional  Time  Zone  read  Zone  Id  read  Optional  Zone  Id  read  Int  Array  read  V  Int  Array  read  Long  Array  read  V  Long  Array  read  Float  Array  read  Double  Array  read  Byte  Array  read  Array  read  Optional  Array  read  Optional  Writeable  read  Exception  named  Writeable  Registry  read  Named  Writeable  read  Named  Writeable  read  Optional  Named  Writeable  read  List  read  String  List  read  Optional  String  List  read  Set  read  Collection  read  Named  Writeable  List  read  Enum  read  Enum  Set  wrap  wrap  read  Array  Size  ensure  Can  Read  Bytes  read  Time  Value  read  Optional  Time  Value  read  Fields,0,0
52,from  Stream  Input Stream  Input void  read  Optional  V  Int  read  Optional  V  Int  read  Optional  Writeable  read  Optional  V  Int  read  Optional  Writeable  read  Optional  V  Int  read  Optional  V  Int  read  Optional  Writeable  read  Optional  Time  Value  read  Optional  Time  Value Stream  Input byte  time  unit  map  version  small  string  limit  string  Read  Buffer  small  Spare  large  Spare  empty  object  array  empty  int  array  empty  long  array  empty  float  array  empty  double  array  empty  byte  array get  Version  set  Version  read  Byte  read  Bytes  read  Bytes  Reference  read  Optional  Bytes  Reference  read  Bytes  Reference  read  Bytes  Ref  read  Bytes  Ref  read  Fully  read  Short  read  Int  read  Optional  Int  read  V  Int  read  Long  read  V  Long  read  Optional  V  Long  read  Z  Long  read  Optional  Long  read  Optional  Text  read  Text  read  Optional  String  read  Optional  Secure  String  read  Optional  Float  read  Optional  V  Int  read  String  throw  On  Broken  Char  read  Secure  String  read  Float  read  Double  read  Optional  Double  read  Boolean  read  Boolean  read  Optional  Boolean  close  available  read  String  Array  read  Optional  String  Array  read  Map  read  Map  Of  Lists  read  Map  read  Generic  Value  read  Instant  read  Optional  Instant  read  Array  List  read  Date  Time  read  Zoned  Date  Time  read  Array  read  Linked  Hash  Map  read  Hash  Map  read  Date  read  Geo  Point  read  Time  Zone  read  Optional  Time  Zone  read  Zone  Id  read  Optional  Zone  Id  read  Int  Array  read  V  Int  Array  read  Long  Array  read  V  Long  Array  read  Float  Array  read  Double  Array  read  Byte  Array  read  Array  read  Optional  Array  read  Optional  Writeable  read  Exception  named  Writeable  Registry  read  Named  Writeable  read  Named  Writeable  read  Optional  Named  Writeable  read  List  read  String  List  read  Optional  String  List  read  Set  read  Collection  read  Named  Writeable  List  read  Enum  read  Enum  Set  wrap  wrap  read  Array  Size  ensure  Can  Read  Bytes  read  Time  Value  read  Optional  Time  Value  read  Fields Follow  Parameters retry  delay  max  max  read  request  operation  count  max  write  request  operation  count  max  outstanding  read  requests  max  outstanding  write  requests  max  read  request  size  max  write  request  size  max  write  buffer  count  max  write  buffer  size  max  retry  delay  read  poll  timeout  max  Read  Request  Operation  Count  max  Write  Request  Operation  Count  max  Outstanding  Read  Requests  max  Outstanding  Write  Requests  max  Read  Request  Size  max  Write  Request  Size  max  Write  Buffer  Count  max  Write  Buffer  Size  max  Retry  Delay  read  Poll  Timeout Follow  Parameters  Follow  Parameters  get  Max  Read  Request  Operation  Count  set  Max  Read  Request  Operation  Count  get  Max  Read  Request  Size  set  Max  Read  Request  Size  get  Max  Outstanding  Read  Requests  set  Max  Outstanding  Read  Requests  get  Max  Write  Request  Operation  Count  set  Max  Write  Request  Operation  Count  get  Max  Write  Request  Size  set  Max  Write  Request  Size  get  Max  Outstanding  Write  Requests  set  Max  Outstanding  Write  Requests  get  Max  Write  Buffer  Count  set  Max  Write  Buffer  Count  get  Max  Write  Buffer  Size  set  Max  Write  Buffer  Size  get  Max  Retry  Delay  set  Max  Retry  Delay  get  Read  Poll  Timeout  set  Read  Poll  Timeout  validate  Follow  Parameters  write  To  to  X  Content  to  X  Content  Fragment  init  Parser  equals  hash  Code,1,0
53,ssl  I  O  Session  Strategy Settings S  S  L  I  O  Session  Strategy  ssl  Configuration  ssl  I  O  Session  Strategy S  S  L  Service logger  ordered  protocol  algorithm  map  diagnose  trust  exceptions  setting  env  settings  diagnose  Trust  Exceptions  ssl  Configurations  ssl  Contexts  Security  S  S  L  Socket  Factory  delegate  Supplier  supported  Protocols  ciphers  delegate  S  S  L  Context  Holder  context  key  Config  trust  Config  ssl  Configuration  reload  Listeners S  S  L  Service  S  S  L  Service  S  S  L  Service  S  S  L  Service  create  Dynamic  S  S  L  Service  load  S  S  L  Configurations  ssl  Context  Holder  register  Settings  ssl  I  O  Session  Strategy  get  Hostname  Verifier  ssl  Parameters  ssl  I  O  Session  Strategy  verify  Session  ssl  Socket  Factory  create  S  S  L  Engine  is  Configuration  Valid  For  Server  Usage  is  S  S  L  Client  Auth  Enabled  ssl  Context  reload  S  S  L  Context  ssl  Context  Holder  ssl  Configuration  get  Transport  Profile  Context  Names  get  Loaded  S  S  L  Configurations  supported  Ciphers  create  Ssl  Context  create  Ssl  Context  wrap  With  Diagnostics  get  S  S  L  Configurations  get  S  S  L  Settings  Map  load  S  S  L  Configurations  validate  Server  Configuration  get  Loaded  Certificates  Security  S  S  L  Socket  Factory  get  Default  Cipher  Suites  get  Supported  Cipher  Suites  create  Socket  create  Socket  create  Socket  create  Socket  create  Socket  create  Socket  reload  configure  S  S  L  Socket  create  With  Permissions  S  S  L  Context  Holder  ssl  Context  reload  reload  Ssl  Context  add  Reload  Listener  invalidate  Sessions  get  Realms  S  S  L  Settings  get  Transport  Profile  S  S  L  Settings  get  Http  Transport  S  S  L  Settings  get  Http  Transport  S  S  L  Configuration  get  Monitoring  Exporter  Settings  get  S  S  L  Configuration  ssl  Context  Algorithm Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String,0,0
54,ssl  I  O  Session  Strategy Settings S  S  L  I  O  Session  Strategy  ssl  Configuration  ssl  I  O  Session  Strategy Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String S  S  L  Service logger  ordered  protocol  algorithm  map  diagnose  trust  exceptions  setting  env  settings  diagnose  Trust  Exceptions  ssl  Configurations  ssl  Contexts  Security  S  S  L  Socket  Factory  delegate  Supplier  supported  Protocols  ciphers  delegate  S  S  L  Context  Holder  context  key  Config  trust  Config  ssl  Configuration  reload  Listeners S  S  L  Service  S  S  L  Service  S  S  L  Service  S  S  L  Service  create  Dynamic  S  S  L  Service  load  S  S  L  Configurations  ssl  Context  Holder  register  Settings  ssl  I  O  Session  Strategy  get  Hostname  Verifier  ssl  Parameters  ssl  I  O  Session  Strategy  verify  Session  ssl  Socket  Factory  create  S  S  L  Engine  is  Configuration  Valid  For  Server  Usage  is  S  S  L  Client  Auth  Enabled  ssl  Context  reload  S  S  L  Context  ssl  Context  Holder  ssl  Configuration  get  Transport  Profile  Context  Names  get  Loaded  S  S  L  Configurations  supported  Ciphers  create  Ssl  Context  create  Ssl  Context  wrap  With  Diagnostics  get  S  S  L  Configurations  get  S  S  L  Settings  Map  load  S  S  L  Configurations  validate  Server  Configuration  get  Loaded  Certificates  Security  S  S  L  Socket  Factory  get  Default  Cipher  Suites  get  Supported  Cipher  Suites  create  Socket  create  Socket  create  Socket  create  Socket  create  Socket  create  Socket  reload  configure  S  S  L  Socket  create  With  Permissions  S  S  L  Context  Holder  ssl  Context  reload  reload  Ssl  Context  add  Reload  Listener  invalidate  Sessions  get  Realms  S  S  L  Settings  get  Transport  Profile  S  S  L  Settings  get  Http  Transport  S  S  L  Settings  get  Http  Transport  S  S  L  Configuration  get  Monitoring  Exporter  Settings  get  S  S  L  Configuration  ssl  Context  Algorithm,1,0
55,to  Map Action  Wrapper Map  String  put  value  id  put  watch  Id  id  put  to  Instant  execution  Time  put  data  trigger  Event  put  metadata  watch  put  vars  data  payload  put  data  payload  of Action  Wrapper id  condition  transform  throttler  action  path  max  Iterations Action  Wrapper  id  condition  transform  throttler  action  execute  to  X  Content  equals  hash  Code  to  X  Content  parse Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch,0,0
56,to  Map Action  Wrapper Map  String  put  value  id  put  watch  Id  id  put  to  Instant  execution  Time  put  data  trigger  Event  put  metadata  watch  put  vars  data  payload  put  data  payload  of Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch Action  Wrapper id  condition  transform  throttler  action  path  max  Iterations Action  Wrapper  id  condition  transform  throttler  action  execute  to  X  Content  equals  hash  Code  to  X  Content  parse,1,1
57,parser Named  X  Content  Registry  Input  Stream X  Content  Parser  create  Parser  x  Content X  Content  Source bytes  content  Type  data X  Content  Source  X  Content  Source  get  Content  Type  get  Bytes  is  Map  get  As  Map  is  List  get  As  List  get  Value  to  X  Content  read  From  write  To  data  equals  hash  Code  to  String  parse Named  X  Content  Registry empty  Entry  category  Class  name  parser  registry as  Map  Entry  Entry  Named  X  Content  Registry  parse  Named  Object,0,0
58,parser Named  X  Content  Registry  Input  Stream X  Content  Parser  create  Parser  x  Content Named  X  Content  Registry empty  Entry  category  Class  name  parser  registry as  Map  Entry  Entry  Named  X  Content  Registry  parse  Named  Object X  Content  Source bytes  content  Type  data X  Content  Source  X  Content  Source  get  Content  Type  get  Bytes  is  Map  get  As  Map  is  List  get  As  List  get  Value  to  X  Content  read  From  write  To  data  equals  hash  Code  to  String  parse,1,0
59,do  Execute Watch  Execution  Context  Payload  List  Transform  Result Chain  Transform  Result  execute  add  status  format  id  type  payload Executable  Chain  Transform transforms Executable  Chain  Transform  Executable  Chain  Transform  executable  Transforms  execute Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch  to  Map,0,0
60,do  Execute Watch  Execution  Context  Payload  List  Transform  Result Chain  Transform  Result  execute  add  status  format  id  type  payload Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch  to  Map Executable  Chain  Transform transforms Executable  Chain  Transform  Executable  Chain  Transform  executable  Transforms  execute,1,0
61,parse String  Expression  Parser Role  Mapper  Expression  stream  Input  get  Bytes  parse  parser Expression  Parser any  all  except  field read  Expression  write  Expression  read  Expression  List  write  Expression  List  parse  Object  parse  Rules  Object  parse  Expression  parse  Field  Expression  parse  Except  Expression  check  Start  Object  read  Field  Name  parse  Expression  Array  parse  Array  parse  Field  Value X  Content  Source bytes  content  Type  data X  Content  Source  X  Content  Source  get  Content  Type  get  Bytes  is  Map  get  As  Map  is  List  get  As  List  get  Value  to  X  Content  parser  read  From  write  To  data  equals  hash  Code  to  String,0,0
62,parse String  Expression  Parser Role  Mapper  Expression  stream  Input  get  Bytes  parse  parser X  Content  Source bytes  content  Type  data X  Content  Source  X  Content  Source  get  Content  Type  get  Bytes  is  Map  get  As  Map  is  List  get  As  List  get  Value  to  X  Content  parser  read  From  write  To  data  equals  hash  Code  to  String Expression  Parser any  all  except  field read  Expression  write  Expression  read  Expression  List  write  Expression  List  parse  Object  parse  Rules  Object  parse  Expression  parse  Field  Expression  parse  Except  Expression  check  Start  Object  read  Field  Name  parse  Expression  Array  parse  Array  parse  Field  Value,1,1
63,parse  Array Parse  Field  X  Content  Parser  Checked  Function  X  Content  Parser  T  I  O  Exception List  T  current  Token  next  Token  add  apply Expression  Parser any  all  except  field read  Expression  write  Expression  read  Expression  List  write  Expression  List  parse  Object  parse  parse  Rules  Object  parse  Expression  parse  Field  Expression  parse  Except  Expression  check  Start  Object  read  Field  Name  parse  Expression  Array  parse  Field  Value Parse  Field name  deprecated  Names  all  Replaced  With  all  Names  fully  Deprecated  empty  Common  Fields  field  fields  format  missing  time  zone Parse  Field  get  Preferred  Name  get  All  Names  Included  Deprecated  with  Deprecation  with  All  Deprecated  with  All  Deprecated  match  match  to  String  get  All  Replaced  With  get  Deprecated  Names  add  Optional  Field,0,0
64,parse  Array Parse  Field  X  Content  Parser  Checked  Function  X  Content  Parser  T  I  O  Exception List  T  current  Token  next  Token  add  apply Parse  Field name  deprecated  Names  all  Replaced  With  all  Names  fully  Deprecated  empty  Common  Fields  field  fields  format  missing  time  zone Parse  Field  get  Preferred  Name  get  All  Names  Included  Deprecated  with  Deprecation  with  All  Deprecated  with  All  Deprecated  match  match  to  String  get  All  Replaced  With  get  Deprecated  Names  add  Optional  Field Expression  Parser any  all  except  field read  Expression  write  Expression  read  Expression  List  write  Expression  List  parse  Object  parse  parse  Rules  Object  parse  Expression  parse  Field  Expression  parse  Except  Expression  check  Start  Object  read  Field  Name  parse  Expression  Array  parse  Field  Value,1,0
65,parse  Template Map  String  Object  Template  Role  Name String  create  Parser  get  Template  evaluate Template  Role  Name parser  template  format  template  format  Format Template  Role  Name  Template  Role  Name  write  To  get  Template  get  Format  get  Role  Names  validate  convert  Json  To  List  extract  Template  parse  to  String  to  X  Content  is  Fragment  equals  hash  Code  from  X  Content  format  Name Script  Service logger  disable  dynamic  scripting  setting  use  context  rate  value  use  context  rate  key  max  compilation  rate  function  script  general  cache  size  setting  script  general  cache  expire  setting  script  max  size  in  bytes  script  general  max  compilations  rate  setting  context  prefix  script  cache  size  setting  script  cache  expire  setting  unlimited  compilation  rate  key  script  max  compilations  rate  setting  script  compilation  rate  zero  script  disable  max  compilations  rate  setting  allow  none  types  allowed  setting  contexts  allowed  setting  types  Allowed  contexts  Allowed  engines  contexts  cluster  State  max  Size  In  Bytes  cache  Holder  Cache  Holder  general  context  Cache Script  Service  compilation  Limits  Enabled  register  Cluster  Settings  Listeners  validate  Cache  Settings  close  get  Engine  set  Max  Size  In  Bytes  compile  is  Lang  Supported  is  Type  Enabled  is  Context  Enabled  is  Any  Context  Enabled  get  Scripts  From  Cluster  State  get  Script  From  Cluster  State  put  Stored  Script  new  Response  execute  delete  Stored  Script  new  Response  execute  get  Stored  Script  get  Context  Infos  get  Script  Languages  stats  cache  Stats  apply  Cluster  State  set  Cache  Holder  general  Cache  Holder  context  Cache  Holder  context  Cache  Cache  Holder  Cache  Holder  get  stats  cache  Stats  set,0,0
66,parse  Template Map  String  Object  Template  Role  Name String  create  Parser  get  Template  evaluate Script  Service logger  disable  dynamic  scripting  setting  use  context  rate  value  use  context  rate  key  max  compilation  rate  function  script  general  cache  size  setting  script  general  cache  expire  setting  script  max  size  in  bytes  script  general  max  compilations  rate  setting  context  prefix  script  cache  size  setting  script  cache  expire  setting  unlimited  compilation  rate  key  script  max  compilations  rate  setting  script  compilation  rate  zero  script  disable  max  compilations  rate  setting  allow  none  types  allowed  setting  contexts  allowed  setting  types  Allowed  contexts  Allowed  engines  contexts  cluster  State  max  Size  In  Bytes  cache  Holder  Cache  Holder  general  context  Cache Script  Service  compilation  Limits  Enabled  register  Cluster  Settings  Listeners  validate  Cache  Settings  close  get  Engine  set  Max  Size  In  Bytes  compile  is  Lang  Supported  is  Type  Enabled  is  Context  Enabled  is  Any  Context  Enabled  get  Scripts  From  Cluster  State  get  Script  From  Cluster  State  put  Stored  Script  new  Response  execute  delete  Stored  Script  new  Response  execute  get  Stored  Script  get  Context  Infos  get  Script  Languages  stats  cache  Stats  apply  Cluster  State  set  Cache  Holder  general  Cache  Holder  context  Cache  Holder  context  Cache  Cache  Holder  Cache  Holder  get  stats  cache  Stats  set Template  Role  Name parser  template  format  template  format  Format Template  Role  Name  Template  Role  Name  write  To  get  Template  get  Format  get  Role  Names  validate  convert  Json  To  List  extract  Template  parse  to  String  to  X  Content  is  Fragment  equals  hash  Code  from  X  Content  format  Name,1,1
67,write  To  Context Authentication void  write  To  Context Authentication user  authenticated  By  looked  Up  By  version  type  metadata  Realm  Ref  node  Name  name  type  Authentication  Type Authentication  Authentication  Authentication  Authentication  get  User  get  Authenticated  By  get  Looked  Up  By  get  Source  Realm  get  Version  get  Authentication  Type  get  Metadata  encode  write  To  equals  hash  Code  to  X  Content  to  X  Content  Fragment  to  String  Realm  Ref  Realm  Ref  write  To  get  Node  Name  get  Name  get  Type  equals  hash  Code  to  String Thread  Context prefix  default  headers  setting  action  origin  transient  name  logger  default  context  default  Header  thread  Local  max  Warning  Header  Count  max  Warning  Header  Size  Thread  Context  Struct  empty  request  Headers  transient  Headers  response  Headers  is  System  Context  warning  Headers  Size  Context  Preserving  Runnable  in  ctx  Context  Preserving  Abstract  Runnable  in  creators  Context  threads  Original  Context  linked  hash  set  collector  Linked  Hash  Set  Collector  characteristics Thread  Context  stash  Context  stash  With  Origin  stash  And  Merge  Headers  new  Stored  Context  new  Restorable  Context  wrap  Restorable  write  To  read  Headers  set  Headers  read  Headers  From  Stream  get  Header  get  Headers  get  Response  Headers  copy  Headers  put  Header  put  Header  put  Transient  get  Transient  add  Response  Header  add  Response  Header  preserve  Context  unwrap  is  Default  Context  mark  As  System  Context  is  System  Context  close  restore  build  Default  Headers  set  System  Context  Thread  Context  Struct  Thread  Context  Struct  Thread  Context  Struct  put  Request  put  Single  Header  put  Headers  put  Response  Headers  put  Response  put  Transient  copy  Headers  write  To  Context  Preserving  Runnable  run  to  String  unwrap  Context  Preserving  Abstract  Runnable  is  Force  Execution  on  After  on  Failure  on  Rejection  do  Run  to  String  unwrap  supplier  accumulator  combiner  finisher  characteristics,0,0
68,write  To  Context Authentication void  write  To  Context Thread  Context prefix  default  headers  setting  action  origin  transient  name  logger  default  context  default  Header  thread  Local  max  Warning  Header  Count  max  Warning  Header  Size  Thread  Context  Struct  empty  request  Headers  transient  Headers  response  Headers  is  System  Context  warning  Headers  Size  Context  Preserving  Runnable  in  ctx  Context  Preserving  Abstract  Runnable  in  creators  Context  threads  Original  Context  linked  hash  set  collector  Linked  Hash  Set  Collector  characteristics Thread  Context  stash  Context  stash  With  Origin  stash  And  Merge  Headers  new  Stored  Context  new  Restorable  Context  wrap  Restorable  write  To  read  Headers  set  Headers  read  Headers  From  Stream  get  Header  get  Headers  get  Response  Headers  copy  Headers  put  Header  put  Header  put  Transient  get  Transient  add  Response  Header  add  Response  Header  preserve  Context  unwrap  is  Default  Context  mark  As  System  Context  is  System  Context  close  restore  build  Default  Headers  set  System  Context  Thread  Context  Struct  Thread  Context  Struct  Thread  Context  Struct  put  Request  put  Single  Header  put  Headers  put  Response  Headers  put  Response  put  Transient  copy  Headers  write  To  Context  Preserving  Runnable  run  to  String  unwrap  Context  Preserving  Abstract  Runnable  is  Force  Execution  on  After  on  Failure  on  Rejection  do  Run  to  String  unwrap  supplier  accumulator  combiner  finisher  characteristics Authentication user  authenticated  By  looked  Up  By  version  type  metadata  Realm  Ref  node  Name  name  type  Authentication  Type Authentication  Authentication  Authentication  Authentication  get  User  get  Authenticated  By  get  Looked  Up  By  get  Source  Realm  get  Version  get  Authentication  Type  get  Metadata  encode  write  To  equals  hash  Code  to  X  Content  to  X  Content  Fragment  to  String  Realm  Ref  Realm  Ref  write  To  get  Node  Name  get  Name  get  Type  equals  hash  Code  to  String,1,1
69,set  Authentication Authentication void  write  To  Context Security  Context logger  thread  Context  authentication  Serializer  node  Name Security  Context  require  User  get  User  get  Authentication  get  Secondary  Authentication  get  Thread  Context  set  User  execute  With  Authentication  execute  After  Rewriting  Authentication Authentication user  authenticated  By  looked  Up  By  version  type  metadata  Realm  Ref  node  Name  name  type  Authentication  Type Authentication  Authentication  Authentication  Authentication  get  User  get  Authenticated  By  get  Looked  Up  By  get  Source  Realm  get  Version  get  Authentication  Type  get  Metadata  encode  write  To  equals  hash  Code  to  X  Content  to  X  Content  Fragment  to  String  Realm  Ref  Realm  Ref  write  To  get  Node  Name  get  Name  get  Type  equals  hash  Code  to  String,0,0
70,set  Authentication Authentication void  write  To  Context Authentication user  authenticated  By  looked  Up  By  version  type  metadata  Realm  Ref  node  Name  name  type  Authentication  Type Authentication  Authentication  Authentication  Authentication  get  User  get  Authenticated  By  get  Looked  Up  By  get  Source  Realm  get  Version  get  Authentication  Type  get  Metadata  encode  write  To  equals  hash  Code  to  X  Content  to  X  Content  Fragment  to  String  Realm  Ref  Realm  Ref  write  To  get  Node  Name  get  Name  get  Type  equals  hash  Code  to  String Security  Context logger  thread  Context  authentication  Serializer  node  Name Security  Context  require  User  get  User  get  Authentication  get  Secondary  Authentication  get  Thread  Context  set  User  execute  With  Authentication  execute  After  Rewriting  Authentication,1,0
71,execute  As  User Consumer  Thread  Context  Stored  Context  Version  Security  Context void  new  Stored  Context  get  Thread  Context  stash  Context  get  Thread  Context  set  User  accept Security  Context logger  thread  Context  authentication  Serializer  node  Name Security  Context  require  User  get  User  get  Authentication  get  Secondary  Authentication  get  Thread  Context  set  User  set  Authentication  execute  With  Authentication  execute  After  Rewriting  Authentication User username  roles  authenticated  User  metadata  enabled  full  Name  email  username  password  password  hash  roles  full  name  email  metadata  enabled  type  authentication  realm  lookup  realm  realm  type  realm  name User  User  User  User  User  principal  roles  metadata  full  Name  email  enabled  authenticated  User  is  Run  As  with  Roles  to  String  equals  hash  Code  to  X  Content  partial  Read  From  read  From  write  To  is  Internal  write  User,0,0
72,execute  As  User Consumer  Thread  Context  Stored  Context  Version  Security  Context void  new  Stored  Context  get  Thread  Context  stash  Context  get  Thread  Context  set  User  accept User username  roles  authenticated  User  metadata  enabled  full  Name  email  username  password  password  hash  roles  full  name  email  metadata  enabled  type  authentication  realm  lookup  realm  realm  type  realm  name User  User  User  User  User  principal  roles  metadata  full  Name  email  enabled  authenticated  User  is  Run  As  with  Roles  to  String  equals  hash  Code  to  X  Content  partial  Read  From  read  From  write  To  is  Internal  write  User Security  Context logger  thread  Context  authentication  Serializer  node  Name Security  Context  require  User  get  User  get  Authentication  get  Secondary  Authentication  get  Thread  Context  set  User  set  Authentication  execute  With  Authentication  execute  After  Rewriting  Authentication,1,1
73,execute  As  User Consumer  Thread  Context  Stored  Context  Version  Security  Context void  new  Stored  Context  get  Thread  Context  stash  Context  get  Thread  Context  set  User  accept Security  Context logger  thread  Context  authentication  Serializer  node  Name Security  Context  require  User  get  User  get  Authentication  get  Secondary  Authentication  get  Thread  Context  set  User  set  Authentication  execute  With  Authentication  execute  After  Rewriting  Authentication Version v  empty  id  v  empty  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  current  id  To  Version  id  major  minor  revision  build  lucene  Version  Declared  Versions  Holder  declared  versions read  Version  from  Id  index  Created  write  Version  min  max  from  String  Version  after  on  Or  After  before  on  Or  Before  compare  To  to  X  Content  check  Auto  Id  With  Op  Type  Create  Supported  By  Version  minimum  Compatibility  Version  minimum  Index  Compatibility  Version  is  Compatible  main  to  String  equals  hash  Code  get  Declared  Versions,0,0
74,execute  As  User Consumer  Thread  Context  Stored  Context  Version  Security  Context void  new  Stored  Context  get  Thread  Context  stash  Context  get  Thread  Context  set  User  accept Version v  empty  id  v  empty  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  v  current  id  To  Version  id  major  minor  revision  build  lucene  Version  Declared  Versions  Holder  declared  versions read  Version  from  Id  index  Created  write  Version  min  max  from  String  Version  after  on  Or  After  before  on  Or  Before  compare  To  to  X  Content  check  Auto  Id  With  Op  Type  Create  Supported  By  Version  minimum  Compatibility  Version  minimum  Index  Compatibility  Version  is  Compatible  main  to  String  equals  hash  Code  get  Declared  Versions Security  Context logger  thread  Context  authentication  Serializer  node  Name Security  Context  require  User  get  User  get  Authentication  get  Secondary  Authentication  get  Thread  Context  set  User  set  Authentication  execute  With  Authentication  execute  After  Rewriting  Authentication,1,0
75,write  Interval Interval  Stream  Output void  write  get  Interval  Type  Id  write  To  create  Parser  create  Parser Date  Histogram  Group  Source calendar  interval  id  fixed  interval  id  Fixed  Interval  name  interval  Calendar  Interval  name  interval  name  time  zone  strict  parser  lenient  parser  interval  time  Zone  rounding get  Name  get  Interval  get  Interval  Type  Id  Fixed  Interval  Fixed  Interval  get  Name  get  Interval  get  Interval  Type  Id  to  X  Content  write  To  equals  hash  Code  to  String  Calendar  Interval  Calendar  Interval  get  Name  get  Interval  get  Interval  Type  Id  to  X  Content  write  To  equals  hash  Code  to  String  read  Interval  Date  Histogram  Group  Source  Date  Histogram  Group  Source  create  Parser  from  X  Content  get  Type  get  Interval  get  Time  Zone  get  Rounding  write  To  to  X  Content  equals  hash  Code  get  Incremental  Bucket  Update  Filter  Query  supports  Incremental  Bucket  Update Stream  Output time  unit  byte  map  max  nested  exception  level  version  scratch  spare  zero  one  two  writers get  Version  set  Version  position  seek  write  Byte  write  Bytes  write  Bytes  write  Bytes  write  Byte  Array  write  Bytes  Reference  write  Optional  Bytes  Reference  write  Bytes  Ref  write  Short  write  Int  write  V  Int  write  Long  write  V  Long  write  Optional  V  Long  write  V  Long  No  Check  write  Z  Long  write  Optional  Long  write  Optional  String  write  Optional  Secure  String  write  Optional  Int  write  Optional  V  Int  write  Optional  Float  write  Optional  Text  write  Text  write  String  write  Secure  String  write  Float  write  Double  write  Optional  Double  write  Boolean  write  Optional  Boolean  flush  close  reset  write  write  write  String  Array  write  String  Array  Nullable  write  Optional  String  Array  write  Map  write  Map  With  Consistent  Order  write  Map  Of  Lists  write  Map  write  Instant  write  Optional  Instant  get  Generic  Type  write  Generic  Value  check  Writeable  write  Int  Array  write  V  Int  Array  write  Long  Array  write  V  Long  Array  write  Float  Array  write  Double  Array  write  Array  write  Optional  Array  write  Array  write  Optional  Array  write  Optional  Writeable  write  Exception  write  Exception  fail  On  Too  Many  Nested  Exceptions  write  Named  Writeable  write  Optional  Named  Writeable  write  Geo  Point  write  Time  Zone  write  Zone  Id  write  Optional  Time  Zone  write  Optional  Zone  Id  write  Collection  write  List  write  Collection  write  String  Collection  write  Optional  String  Collection  write  Named  Writeable  List  write  Enum  write  Enum  Set  write  Time  Value  write  Optional  Time  Value  write  Segment  Sort,0,0
76,write  Interval Interval  Stream  Output void  write  get  Interval  Type  Id  write  To  create  Parser  create  Parser Stream  Output time  unit  byte  map  max  nested  exception  level  version  scratch  spare  zero  one  two  writers get  Version  set  Version  position  seek  write  Byte  write  Bytes  write  Bytes  write  Bytes  write  Byte  Array  write  Bytes  Reference  write  Optional  Bytes  Reference  write  Bytes  Ref  write  Short  write  Int  write  V  Int  write  Long  write  V  Long  write  Optional  V  Long  write  V  Long  No  Check  write  Z  Long  write  Optional  Long  write  Optional  String  write  Optional  Secure  String  write  Optional  Int  write  Optional  V  Int  write  Optional  Float  write  Optional  Text  write  Text  write  String  write  Secure  String  write  Float  write  Double  write  Optional  Double  write  Boolean  write  Optional  Boolean  flush  close  reset  write  write  write  String  Array  write  String  Array  Nullable  write  Optional  String  Array  write  Map  write  Map  With  Consistent  Order  write  Map  Of  Lists  write  Map  write  Instant  write  Optional  Instant  get  Generic  Type  write  Generic  Value  check  Writeable  write  Int  Array  write  V  Int  Array  write  Long  Array  write  V  Long  Array  write  Float  Array  write  Double  Array  write  Array  write  Optional  Array  write  Array  write  Optional  Array  write  Optional  Writeable  write  Exception  write  Exception  fail  On  Too  Many  Nested  Exceptions  write  Named  Writeable  write  Optional  Named  Writeable  write  Geo  Point  write  Time  Zone  write  Zone  Id  write  Optional  Time  Zone  write  Optional  Zone  Id  write  Collection  write  List  write  Collection  write  String  Collection  write  Optional  String  Collection  write  Named  Writeable  List  write  Enum  write  Enum  Set  write  Time  Value  write  Optional  Time  Value  write  Segment  Sort Date  Histogram  Group  Source calendar  interval  id  fixed  interval  id  Fixed  Interval  name  interval  Calendar  Interval  name  interval  name  time  zone  strict  parser  lenient  parser  interval  time  Zone  rounding get  Name  get  Interval  get  Interval  Type  Id  Fixed  Interval  Fixed  Interval  get  Name  get  Interval  get  Interval  Type  Id  to  X  Content  write  To  equals  hash  Code  to  String  Calendar  Interval  Calendar  Interval  get  Name  get  Interval  get  Interval  Type  Id  to  X  Content  write  To  equals  hash  Code  to  String  read  Interval  Date  Histogram  Group  Source  Date  Histogram  Group  Source  create  Parser  from  X  Content  get  Type  get  Interval  get  Time  Zone  get  Rounding  write  To  to  X  Content  equals  hash  Code  get  Incremental  Bucket  Update  Filter  Query  supports  Incremental  Bucket  Update,1,0
77,write  To Stream  Output void  write  String  write  String  write  Double  write  V  Int  write  V  Long  write  V  Long Vertex field  term  weight  depth  bg  fg  field  term  weight  depth  fg  bg  parser  Vertex  Id  field  term Vertex  read  From  hash  Code  equals  to  X  Content  from  X  Content  get  Id  create  Id  to  String  get  Field  get  Term  get  Weight  set  Weight  get  Bg  get  Fg  set  Fg  get  Hop  Depth  Vertex  Id  equals  hash  Code  to  String Stream  Output time  unit  byte  map  max  nested  exception  level  version  scratch  spare  zero  one  two  writers get  Version  set  Version  position  seek  write  Byte  write  Bytes  write  Bytes  write  Bytes  write  Byte  Array  write  Bytes  Reference  write  Optional  Bytes  Reference  write  Bytes  Ref  write  Short  write  Int  write  V  Int  write  Long  write  V  Long  write  Optional  V  Long  write  V  Long  No  Check  write  Z  Long  write  Optional  Long  write  Optional  String  write  Optional  Secure  String  write  Optional  Int  write  Optional  V  Int  write  Optional  Float  write  Optional  Text  write  Text  write  String  write  Secure  String  write  Float  write  Double  write  Optional  Double  write  Boolean  write  Optional  Boolean  flush  close  reset  write  write  write  String  Array  write  String  Array  Nullable  write  Optional  String  Array  write  Map  write  Map  With  Consistent  Order  write  Map  Of  Lists  write  Map  write  Instant  write  Optional  Instant  get  Generic  Type  write  Generic  Value  check  Writeable  write  Int  Array  write  V  Int  Array  write  Long  Array  write  V  Long  Array  write  Float  Array  write  Double  Array  write  Array  write  Optional  Array  write  Array  write  Optional  Array  write  Optional  Writeable  write  Exception  write  Exception  fail  On  Too  Many  Nested  Exceptions  write  Named  Writeable  write  Optional  Named  Writeable  write  Geo  Point  write  Time  Zone  write  Zone  Id  write  Optional  Time  Zone  write  Optional  Zone  Id  write  Collection  write  List  write  Collection  write  String  Collection  write  Optional  String  Collection  write  Named  Writeable  List  write  Enum  write  Enum  Set  write  Time  Value  write  Optional  Time  Value  write  Segment  Sort,0,0
78,write  To Stream  Output void  write  String  write  String  write  Double  write  V  Int  write  V  Long  write  V  Long Stream  Output time  unit  byte  map  max  nested  exception  level  version  scratch  spare  zero  one  two  writers get  Version  set  Version  position  seek  write  Byte  write  Bytes  write  Bytes  write  Bytes  write  Byte  Array  write  Bytes  Reference  write  Optional  Bytes  Reference  write  Bytes  Ref  write  Short  write  Int  write  V  Int  write  Long  write  V  Long  write  Optional  V  Long  write  V  Long  No  Check  write  Z  Long  write  Optional  Long  write  Optional  String  write  Optional  Secure  String  write  Optional  Int  write  Optional  V  Int  write  Optional  Float  write  Optional  Text  write  Text  write  String  write  Secure  String  write  Float  write  Double  write  Optional  Double  write  Boolean  write  Optional  Boolean  flush  close  reset  write  write  write  String  Array  write  String  Array  Nullable  write  Optional  String  Array  write  Map  write  Map  With  Consistent  Order  write  Map  Of  Lists  write  Map  write  Instant  write  Optional  Instant  get  Generic  Type  write  Generic  Value  check  Writeable  write  Int  Array  write  V  Int  Array  write  Long  Array  write  V  Long  Array  write  Float  Array  write  Double  Array  write  Array  write  Optional  Array  write  Array  write  Optional  Array  write  Optional  Writeable  write  Exception  write  Exception  fail  On  Too  Many  Nested  Exceptions  write  Named  Writeable  write  Optional  Named  Writeable  write  Geo  Point  write  Time  Zone  write  Zone  Id  write  Optional  Time  Zone  write  Optional  Zone  Id  write  Collection  write  List  write  Collection  write  String  Collection  write  Optional  String  Collection  write  Named  Writeable  List  write  Enum  write  Enum  Set  write  Time  Value  write  Optional  Time  Value  write  Segment  Sort Vertex field  term  weight  depth  bg  fg  field  term  weight  depth  fg  bg  parser  Vertex  Id  field  term Vertex  read  From  hash  Code  equals  to  X  Content  from  X  Content  get  Id  create  Id  to  String  get  Field  get  Term  get  Weight  set  Weight  get  Bg  get  Fg  set  Fg  get  Hop  Depth  Vertex  Id  equals  hash  Code  to  String,1,0
79,write  To Stream  Output void  write  String  get  Field  write  String  get  Term  write  String  get  Field  write  String  get  Term  write  Double  write  V  Long Connection from  to  weight  doc  Count  source  target  weight  doc  count  Unresolved  Connection  from  Index  to  Index  weight  doc  Count  parser  Connection  Id  source  target Connection  Connection  Connection  get  Id  get  From  get  To  get  Weight  get  Doc  Count  equals  hash  Code  to  X  Content  Unresolved  Connection  resolve  from  X  Content  Connection  Id  equals  hash  Code  get  Source  get  Target  to  String Stream  Output time  unit  byte  map  max  nested  exception  level  version  scratch  spare  zero  one  two  writers get  Version  set  Version  position  seek  write  Byte  write  Bytes  write  Bytes  write  Bytes  write  Byte  Array  write  Bytes  Reference  write  Optional  Bytes  Reference  write  Bytes  Ref  write  Short  write  Int  write  V  Int  write  Long  write  V  Long  write  Optional  V  Long  write  V  Long  No  Check  write  Z  Long  write  Optional  Long  write  Optional  String  write  Optional  Secure  String  write  Optional  Int  write  Optional  V  Int  write  Optional  Float  write  Optional  Text  write  Text  write  String  write  Secure  String  write  Float  write  Double  write  Optional  Double  write  Boolean  write  Optional  Boolean  flush  close  reset  write  write  write  String  Array  write  String  Array  Nullable  write  Optional  String  Array  write  Map  write  Map  With  Consistent  Order  write  Map  Of  Lists  write  Map  write  Instant  write  Optional  Instant  get  Generic  Type  write  Generic  Value  check  Writeable  write  Int  Array  write  V  Int  Array  write  Long  Array  write  V  Long  Array  write  Float  Array  write  Double  Array  write  Array  write  Optional  Array  write  Array  write  Optional  Array  write  Optional  Writeable  write  Exception  write  Exception  fail  On  Too  Many  Nested  Exceptions  write  Named  Writeable  write  Optional  Named  Writeable  write  Geo  Point  write  Time  Zone  write  Zone  Id  write  Optional  Time  Zone  write  Optional  Zone  Id  write  Collection  write  List  write  Collection  write  String  Collection  write  Optional  String  Collection  write  Named  Writeable  List  write  Enum  write  Enum  Set  write  Time  Value  write  Optional  Time  Value  write  Segment  Sort,0,0
80,write  To Stream  Output void  write  String  get  Field  write  String  get  Term  write  String  get  Field  write  String  get  Term  write  Double  write  V  Long Stream  Output time  unit  byte  map  max  nested  exception  level  version  scratch  spare  zero  one  two  writers get  Version  set  Version  position  seek  write  Byte  write  Bytes  write  Bytes  write  Bytes  write  Byte  Array  write  Bytes  Reference  write  Optional  Bytes  Reference  write  Bytes  Ref  write  Short  write  Int  write  V  Int  write  Long  write  V  Long  write  Optional  V  Long  write  V  Long  No  Check  write  Z  Long  write  Optional  Long  write  Optional  String  write  Optional  Secure  String  write  Optional  Int  write  Optional  V  Int  write  Optional  Float  write  Optional  Text  write  Text  write  String  write  Secure  String  write  Float  write  Double  write  Optional  Double  write  Boolean  write  Optional  Boolean  flush  close  reset  write  write  write  String  Array  write  String  Array  Nullable  write  Optional  String  Array  write  Map  write  Map  With  Consistent  Order  write  Map  Of  Lists  write  Map  write  Instant  write  Optional  Instant  get  Generic  Type  write  Generic  Value  check  Writeable  write  Int  Array  write  V  Int  Array  write  Long  Array  write  V  Long  Array  write  Float  Array  write  Double  Array  write  Array  write  Optional  Array  write  Array  write  Optional  Array  write  Optional  Writeable  write  Exception  write  Exception  fail  On  Too  Many  Nested  Exceptions  write  Named  Writeable  write  Optional  Named  Writeable  write  Geo  Point  write  Time  Zone  write  Zone  Id  write  Optional  Time  Zone  write  Optional  Zone  Id  write  Collection  write  List  write  Collection  write  String  Collection  write  Optional  String  Collection  write  Named  Writeable  List  write  Enum  write  Enum  Set  write  Time  Value  write  Optional  Time  Value  write  Segment  Sort Connection from  to  weight  doc  Count  source  target  weight  doc  count  Unresolved  Connection  from  Index  to  Index  weight  doc  Count  parser  Connection  Id  source  target Connection  Connection  Connection  get  Id  get  From  get  To  get  Weight  get  Doc  Count  equals  hash  Code  to  X  Content  Unresolved  Connection  resolve  from  X  Content  Connection  Id  equals  hash  Code  get  Source  get  Target  to  String,1,0
81,parse  Vertices X  Content  Parser  Rest  Graph  Action void  next  Token  next  Token  current  Name  next  Token  match  get  Deprecation  Handler  get  Preferred  Name  get  Preferred  Name  name  next  Token  next  Token  current  Name  match  get  Deprecation  Handler  text  get  Preferred  Name  match  get  Deprecation  Handler  float  Value  get  Preferred  Name  get  Preferred  Name  name  get  Preferred  Name  put  text  put  get  Preferred  Name  name  match  get  Deprecation  Handler  get  Preferred  Name  get  Preferred  Name  name  next  Token  add  text  name  match  get  Deprecation  Handler  text  match  get  Deprecation  Handler  int  Value  match  get  Deprecation  Handler  int  Value  match  get  Deprecation  Handler  int  Value  name  add  Vertex  Request  values  add  Include  get  Term  get  Boost  add  Exclude  size  min  Doc  Count  shard  Min  Doc  Count Rest  Graph  Action timeout  field  significance  field  return  detailed  info  sample  diversity  field  field  name  field  max  docs  per  value  field  sample  size  field  min  doc  count  field  shard  min  doc  count  field  size  field  include  field  exclude  field  vertices  field  query  field  controls  field  connections  field  boost  field  term  field routes  get  Name  prepare  Request  parse  Hop  parse  Controls Hop parent  Hop  vertices  guiding  Query Hop  validate  get  Parent  Hop  write  To  read  From  guiding  Query  add  Vertex  Request  guiding  Query  get  Effective  Vertex  Requests  get  Number  Vertex  Requests  get  Vertex  Request  to  X  Content,0,0
82,parse  Vertices X  Content  Parser  Rest  Graph  Action void  next  Token  next  Token  current  Name  next  Token  match  get  Deprecation  Handler  get  Preferred  Name  get  Preferred  Name  name  next  Token  next  Token  current  Name  match  get  Deprecation  Handler  text  get  Preferred  Name  match  get  Deprecation  Handler  float  Value  get  Preferred  Name  get  Preferred  Name  name  get  Preferred  Name  put  text  put  get  Preferred  Name  name  match  get  Deprecation  Handler  get  Preferred  Name  get  Preferred  Name  name  next  Token  add  text  name  match  get  Deprecation  Handler  text  match  get  Deprecation  Handler  int  Value  match  get  Deprecation  Handler  int  Value  match  get  Deprecation  Handler  int  Value  name  add  Vertex  Request  values  add  Include  get  Term  get  Boost  add  Exclude  size  min  Doc  Count  shard  Min  Doc  Count Hop parent  Hop  vertices  guiding  Query Hop  validate  get  Parent  Hop  write  To  read  From  guiding  Query  add  Vertex  Request  guiding  Query  get  Effective  Vertex  Requests  get  Number  Vertex  Requests  get  Vertex  Request  to  X  Content Rest  Graph  Action timeout  field  significance  field  return  detailed  info  sample  diversity  field  field  name  field  max  docs  per  value  field  sample  size  field  min  doc  count  field  shard  min  doc  count  field  size  field  include  field  exclude  field  vertices  field  query  field  controls  field  connections  field  boost  field  term  field routes  get  Name  prepare  Request  parse  Hop  parse  Controls,1,1
83,parse  Controls X  Content  Parser  Graph  Explore  Request void  next  Token  current  Name  match  get  Deprecation  Handler  sample  Size  int  Value  match  get  Deprecation  Handler  timeout  time  Value  Millis  long  Value  match  get  Deprecation  Handler  use  Significance  boolean  Value  match  get  Deprecation  Handler  return  Detailed  Info  boolean  Value  match  get  Deprecation  Handler  timeout  parse  Time  Value  text  match  get  Deprecation  Handler  next  Token  current  Name  next  Token  match  get  Deprecation  Handler  sample  Diversity  Field  text  match  get  Deprecation  Handler  max  Docs  Per  Diversity  Value  int  Value Rest  Graph  Action timeout  field  significance  field  return  detailed  info  sample  diversity  field  field  name  field  max  docs  per  value  field  sample  size  field  min  doc  count  field  shard  min  doc  count  field  size  field  include  field  exclude  field  vertices  field  query  field  controls  field  connections  field  boost  field  term  field routes  get  Name  prepare  Request  parse  Hop Graph  Explore  Request no  hops  error  message  no  vertices  error  message  indices  indices  Options  routing  timeout  sample  Size  sample  Diversity  Field  max  Docs  Per  Diversity  Value  use  Significance  return  Detailed  Info  hops  Term  Boost  term  boost Graph  Explore  Request  Graph  Explore  Request  validate  indices  indices  indices  Options  indices  Options  Graph  Explore  Request  routing  routing  routing  timeout  timeout  timeout  write  To  to  String  sample  Size  sample  Size  sample  Diversity  Field  sample  Diversity  Field  max  Docs  Per  Diversity  Value  max  Docs  Per  Diversity  Value  use  Significance  use  Significance  return  Detailed  Info  return  Detailed  Info  create  Next  Hop  get  Hop  Numbers  get  Hop  Term  Boost  Term  Boost  get  Term  get  Boost  read  From  write  To  to  X  Content,0,0
84,parse  Controls X  Content  Parser  Graph  Explore  Request void  next  Token  current  Name  match  get  Deprecation  Handler  sample  Size  int  Value  match  get  Deprecation  Handler  timeout  time  Value  Millis  long  Value  match  get  Deprecation  Handler  use  Significance  boolean  Value  match  get  Deprecation  Handler  return  Detailed  Info  boolean  Value  match  get  Deprecation  Handler  timeout  parse  Time  Value  text  match  get  Deprecation  Handler  next  Token  current  Name  next  Token  match  get  Deprecation  Handler  sample  Diversity  Field  text  match  get  Deprecation  Handler  max  Docs  Per  Diversity  Value  int  Value Graph  Explore  Request no  hops  error  message  no  vertices  error  message  indices  indices  Options  routing  timeout  sample  Size  sample  Diversity  Field  max  Docs  Per  Diversity  Value  use  Significance  return  Detailed  Info  hops  Term  Boost  term  boost Graph  Explore  Request  Graph  Explore  Request  validate  indices  indices  indices  Options  indices  Options  Graph  Explore  Request  routing  routing  routing  timeout  timeout  timeout  write  To  to  String  sample  Size  sample  Size  sample  Diversity  Field  sample  Diversity  Field  max  Docs  Per  Diversity  Value  max  Docs  Per  Diversity  Value  use  Significance  use  Significance  return  Detailed  Info  return  Detailed  Info  create  Next  Hop  get  Hop  Numbers  get  Hop  Term  Boost  Term  Boost  get  Term  get  Boost  read  From  write  To  to  X  Content Rest  Graph  Action timeout  field  significance  field  return  detailed  info  sample  diversity  field  field  name  field  max  docs  per  value  field  sample  size  field  min  doc  count  field  shard  min  doc  count  field  size  field  include  field  exclude  field  vertices  field  query  field  controls  field  connections  field  boost  field  term  field routes  get  Name  prepare  Request  parse  Hop,1,0
85,validate  Is  Shape  Field  Type String  Query  Shard  Context void  field  Mapper  type  Name Shape  Query  Processor Lucene  Geometry  Collector  geometries  name  context process  get  Vector  Query  From  Shape  Lucene  Geometry  Collector  geometries  visit  visit  visit  visit  visit  visit  visit  visit  visit  visit Query  Shard  Context deprecation  Logger  types  deprecation  message  script  Service  index  Settings  big  Arrays  mapper  Service  similarity  Service  bitset  Filter  Cache  index  Field  Data  Service  shard  Id  searcher  cacheable  frozen  fully  Qualified  Index  index  Name  Matcher  allow  Expensive  Queries  named  Queries  allow  Unmapped  Fields  map  Unmapped  Field  As  String  nested  Scope  values  Source  Registry  lookup Query  Shard  Context  Query  Shard  Context  Query  Shard  Context  reset  get  Index  Analyzers  get  Search  Similarity  default  Fields  query  String  Lenient  query  String  Analyze  Wildcard  query  String  Allow  Leading  Wildcard  bitset  Filter  allow  Expensive  Queries  get  For  Field  add  Named  Query  copy  Named  Queries  simple  Match  To  Index  Names  field  Mapper  get  Object  Mapper  get  Search  Quote  Analyzer  get  Values  Source  Registry  set  Allow  Unmapped  Fields  set  Map  Unmapped  Field  As  String  fail  If  Field  Mapping  Not  Found  lookup  nested  Scope  index  Version  Created  index  Matches  index  Sorted  On  Field  to  Query  to  Query  index  compile  freeze  Context  fail  If  Frozen  register  Async  Action  execute  Async  Actions  is  Cacheable  get  Shard  Id  now  In  Millis  get  Client  parse  Inner  Query  Builder  convert  To  Shard  Context  get  Index  Settings  get  Mapper  Service  get  Index  Reader  searcher  get  Fully  Qualified  Index  big  Arrays  get  Similarity  Service  get  Bitset  Filter  Cache  get  Usage  Service,0,0
86,validate  Is  Shape  Field  Type String  Query  Shard  Context void  field  Mapper  type  Name Query  Shard  Context deprecation  Logger  types  deprecation  message  script  Service  index  Settings  big  Arrays  mapper  Service  similarity  Service  bitset  Filter  Cache  index  Field  Data  Service  shard  Id  searcher  cacheable  frozen  fully  Qualified  Index  index  Name  Matcher  allow  Expensive  Queries  named  Queries  allow  Unmapped  Fields  map  Unmapped  Field  As  String  nested  Scope  values  Source  Registry  lookup Query  Shard  Context  Query  Shard  Context  Query  Shard  Context  reset  get  Index  Analyzers  get  Search  Similarity  default  Fields  query  String  Lenient  query  String  Analyze  Wildcard  query  String  Allow  Leading  Wildcard  bitset  Filter  allow  Expensive  Queries  get  For  Field  add  Named  Query  copy  Named  Queries  simple  Match  To  Index  Names  field  Mapper  get  Object  Mapper  get  Search  Quote  Analyzer  get  Values  Source  Registry  set  Allow  Unmapped  Fields  set  Map  Unmapped  Field  As  String  fail  If  Field  Mapping  Not  Found  lookup  nested  Scope  index  Version  Created  index  Matches  index  Sorted  On  Field  to  Query  to  Query  index  compile  freeze  Context  fail  If  Frozen  register  Async  Action  execute  Async  Actions  is  Cacheable  get  Shard  Id  now  In  Millis  get  Client  parse  Inner  Query  Builder  convert  To  Shard  Context  get  Index  Settings  get  Mapper  Service  get  Index  Reader  searcher  get  Fully  Qualified  Index  big  Arrays  get  Similarity  Service  get  Bitset  Filter  Cache  get  Usage  Service Shape  Query  Processor Lucene  Geometry  Collector  geometries  name  context process  get  Vector  Query  From  Shape  Lucene  Geometry  Collector  geometries  visit  visit  visit  visit  visit  visit  visit  visit  visit  visit,1,0
87,validate  Is  Point  Field  Type String  Query  Shard  Context void  field  Mapper  type  Name Shape  Query  Point  Processor Shape  Visitor  context  field  Type  field  Name  relation process  get  Vector  Query  From  Shape  Shape  Visitor  visit  visit  visit  visit  visit  visit  visit  visit  visit  visit  visit Query  Shard  Context deprecation  Logger  types  deprecation  message  script  Service  index  Settings  big  Arrays  mapper  Service  similarity  Service  bitset  Filter  Cache  index  Field  Data  Service  shard  Id  searcher  cacheable  frozen  fully  Qualified  Index  index  Name  Matcher  allow  Expensive  Queries  named  Queries  allow  Unmapped  Fields  map  Unmapped  Field  As  String  nested  Scope  values  Source  Registry  lookup Query  Shard  Context  Query  Shard  Context  Query  Shard  Context  reset  get  Index  Analyzers  get  Search  Similarity  default  Fields  query  String  Lenient  query  String  Analyze  Wildcard  query  String  Allow  Leading  Wildcard  bitset  Filter  allow  Expensive  Queries  get  For  Field  add  Named  Query  copy  Named  Queries  simple  Match  To  Index  Names  field  Mapper  get  Object  Mapper  get  Search  Quote  Analyzer  get  Values  Source  Registry  set  Allow  Unmapped  Fields  set  Map  Unmapped  Field  As  String  fail  If  Field  Mapping  Not  Found  lookup  nested  Scope  index  Version  Created  index  Matches  index  Sorted  On  Field  to  Query  to  Query  index  compile  freeze  Context  fail  If  Frozen  register  Async  Action  execute  Async  Actions  is  Cacheable  get  Shard  Id  now  In  Millis  get  Client  parse  Inner  Query  Builder  convert  To  Shard  Context  get  Index  Settings  get  Mapper  Service  get  Index  Reader  searcher  get  Fully  Qualified  Index  big  Arrays  get  Similarity  Service  get  Bitset  Filter  Cache  get  Usage  Service,0,0
88,validate  Is  Point  Field  Type String  Query  Shard  Context void  field  Mapper  type  Name Query  Shard  Context deprecation  Logger  types  deprecation  message  script  Service  index  Settings  big  Arrays  mapper  Service  similarity  Service  bitset  Filter  Cache  index  Field  Data  Service  shard  Id  searcher  cacheable  frozen  fully  Qualified  Index  index  Name  Matcher  allow  Expensive  Queries  named  Queries  allow  Unmapped  Fields  map  Unmapped  Field  As  String  nested  Scope  values  Source  Registry  lookup Query  Shard  Context  Query  Shard  Context  Query  Shard  Context  reset  get  Index  Analyzers  get  Search  Similarity  default  Fields  query  String  Lenient  query  String  Analyze  Wildcard  query  String  Allow  Leading  Wildcard  bitset  Filter  allow  Expensive  Queries  get  For  Field  add  Named  Query  copy  Named  Queries  simple  Match  To  Index  Names  field  Mapper  get  Object  Mapper  get  Search  Quote  Analyzer  get  Values  Source  Registry  set  Allow  Unmapped  Fields  set  Map  Unmapped  Field  As  String  fail  If  Field  Mapping  Not  Found  lookup  nested  Scope  index  Version  Created  index  Matches  index  Sorted  On  Field  to  Query  to  Query  index  compile  freeze  Context  fail  If  Frozen  register  Async  Action  execute  Async  Actions  is  Cacheable  get  Shard  Id  now  In  Millis  get  Client  parse  Inner  Query  Builder  convert  To  Shard  Context  get  Index  Settings  get  Mapper  Service  get  Index  Reader  searcher  get  Fully  Qualified  Index  big  Arrays  get  Similarity  Service  get  Bitset  Filter  Cache  get  Usage  Service Shape  Query  Point  Processor Shape  Visitor  context  field  Type  field  Name  relation process  get  Vector  Query  From  Shape  Shape  Visitor  visit  visit  visit  visit  visit  visit  visit  visit  visit  visit  visit,1,0
89,trim  Content  Type Text  Template String  get  Template  starts  With  index  Of  length  substring Text  Template  Engine service Text  Template  Engine  render  detect  Content  Type  compile  Params  render  Other Text  Template script  inline  Template  may  Require  Compilation Text  Template  Text  Template  Text  Template  get  Script  get  Template  may  Require  Compilation  get  Content  Type  get  Type  get  Params  equals  hash  Code  to  X  Content  parse,0,0
90,trim  Content  Type Text  Template String  get  Template  starts  With  index  Of  length  substring Text  Template script  inline  Template  may  Require  Compilation Text  Template  Text  Template  Text  Template  get  Script  get  Template  may  Require  Compilation  get  Content  Type  get  Type  get  Params  equals  hash  Code  to  X  Content  parse Text  Template  Engine service Text  Template  Engine  render  detect  Content  Type  compile  Params  render  Other,1,0
91,contains int  Month  Times boolean  binary  Search  days  times  equals Month  Times last  first  default  days  default  times  days  times  Builder  days  times Month  Times  Month  Times  validate  days  times  crons  equals  hash  Code  to  String  intersects  to  X  Content  builder  parse  parse  Day  Value  Builder  on  at  at  Round  Hour  at  Noon  at  Midnight  build Day  Times noon  midnight  hour  minute  time Day  Times  Day  Times  Day  Times  Day  Times  hour  minute  time  parse  validate  valid  Hour  valid  Minute  cron  to  X  Content  to  String  equals  hash  Code  parse  parse  Hour  Value  parse  Minute  Value,0,0
92,contains int  Month  Times boolean  binary  Search  days  times  equals Day  Times noon  midnight  hour  minute  time Day  Times  Day  Times  Day  Times  Day  Times  hour  minute  time  parse  validate  valid  Hour  valid  Minute  cron  to  X  Content  to  String  equals  hash  Code  parse  parse  Hour  Value  parse  Minute  Value Month  Times last  first  default  days  default  times  days  times  Builder  days  times Month  Times  Month  Times  validate  days  times  crons  equals  hash  Code  to  String  intersects  to  X  Content  builder  parse  parse  Day  Value  Builder  on  at  at  Round  Hour  at  Noon  at  Midnight  build,1,1
93,create  Watch  Record Watch  Execution  Context  Exception  Execution  Service Watch  Record  sealed  execution  Phase  abort  Failed  Execution Execution  Service default  throttle  period  setting  logger  total  Executions  Time  action  By  Type  Execution  Time  default  Throttle  Period  max  Stop  Timeout  index  Default  Timeout  history  Store  triggered  Watch  Store  clock  parser  cluster  Service  client  executor  generic  Executor  current  Executions  paused  Watch  Execution  Task  ctx  runnable  Watch  Execution  context  execution  Thread Execution  Service  un  Pause  pause  clear  Executions  And  Queue  default  Throttle  Period  execution  Thread  Pool  Queue  Size  execution  Thread  Pool  Max  Size  get  Current  Executions  current  Executions  queued  Watches  process  Events  Async  process  Events  Sync  create  Triggered  Watches  And  Context  execute  Triggered  Watches  execute  update  Watch  Status  log  Watch  Record  execute  Async  force  Put  History  delete  Trigger  execute  Inner  execute  Triggered  Watches  get  Watch  execution  Times  clear  Executions  Watch  Execution  Task  run  Watch  Execution  create  Snapshot Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch  to  Map,0,0
94,create  Watch  Record Watch  Execution  Context  Exception  Execution  Service Watch  Record  sealed  execution  Phase  abort  Failed  Execution Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch  to  Map Execution  Service default  throttle  period  setting  logger  total  Executions  Time  action  By  Type  Execution  Time  default  Throttle  Period  max  Stop  Timeout  index  Default  Timeout  history  Store  triggered  Watch  Store  clock  parser  cluster  Service  client  executor  generic  Executor  current  Executions  paused  Watch  Execution  Task  ctx  runnable  Watch  Execution  context  execution  Thread Execution  Service  un  Pause  pause  clear  Executions  And  Queue  default  Throttle  Period  execution  Thread  Pool  Queue  Size  execution  Thread  Pool  Max  Size  get  Current  Executions  current  Executions  queued  Watches  process  Events  Async  process  Events  Sync  create  Triggered  Watches  And  Context  execute  Triggered  Watches  execute  update  Watch  Status  log  Watch  Record  execute  Async  force  Put  History  delete  Trigger  execute  Inner  execute  Triggered  Watches  get  Watch  execution  Times  clear  Executions  Watch  Execution  Task  run  Watch  Execution  create  Snapshot,1,0
95,create  Watch  Record Watch  Execution  Context  Exception  Execution  Service Watch  Record  sealed  execution  Phase  abort  Failed  Execution Execution  Service default  throttle  period  setting  logger  total  Executions  Time  action  By  Type  Execution  Time  default  Throttle  Period  max  Stop  Timeout  index  Default  Timeout  history  Store  triggered  Watch  Store  clock  parser  cluster  Service  client  executor  generic  Executor  current  Executions  paused  Watch  Execution  Task  ctx  runnable  Watch  Execution  context  execution  Thread Execution  Service  un  Pause  pause  clear  Executions  And  Queue  default  Throttle  Period  execution  Thread  Pool  Queue  Size  execution  Thread  Pool  Max  Size  get  Current  Executions  current  Executions  queued  Watches  process  Events  Async  process  Events  Sync  create  Triggered  Watches  And  Context  execute  Triggered  Watches  execute  update  Watch  Status  log  Watch  Record  execute  Async  force  Put  History  delete  Trigger  execute  Inner  execute  Triggered  Watches  get  Watch  execution  Times  clear  Executions  Watch  Execution  Task  run  Watch  Execution  create  Snapshot Watch  Record watch  id  state  trigger  event  node  messages  status  vars  metadata  execution  result  exception  user  id  watch  node  Id  trigger  Event  state  user  vars  input  condition  metadata  execution  Result  Message  Watch  Record  messages  Exception  Watch  Record  stack  trace  enabled  params  exception Watch  Record  Watch  Record  Watch  Record  Watch  Record  Watch  Record  get  State  id  trigger  Event  watch  Id  input  state  metadata  result  get  Node  Id  to  X  Content  inner  To  X  Content  equals  hash  Code  to  String  Message  Watch  Record  Message  Watch  Record  Message  Watch  Record  Message  Watch  Record  messages  inner  To  X  Content  Exception  Watch  Record  Exception  Watch  Record  Exception  Watch  Record  get  Exception  inner  To  X  Content,0,0
96,create  Watch  Record Watch  Execution  Context  Exception  Execution  Service Watch  Record  sealed  execution  Phase  abort  Failed  Execution Watch  Record watch  id  state  trigger  event  node  messages  status  vars  metadata  execution  result  exception  user  id  watch  node  Id  trigger  Event  state  user  vars  input  condition  metadata  execution  Result  Message  Watch  Record  messages  Exception  Watch  Record  stack  trace  enabled  params  exception Watch  Record  Watch  Record  Watch  Record  Watch  Record  Watch  Record  get  State  id  trigger  Event  watch  Id  input  state  metadata  result  get  Node  Id  to  X  Content  inner  To  X  Content  equals  hash  Code  to  String  Message  Watch  Record  Message  Watch  Record  Message  Watch  Record  Message  Watch  Record  messages  inner  To  X  Content  Exception  Watch  Record  Exception  Watch  Record  Exception  Watch  Record  get  Exception  inner  To  X  Content Execution  Service default  throttle  period  setting  logger  total  Executions  Time  action  By  Type  Execution  Time  default  Throttle  Period  max  Stop  Timeout  index  Default  Timeout  history  Store  triggered  Watch  Store  clock  parser  cluster  Service  client  executor  generic  Executor  current  Executions  paused  Watch  Execution  Task  ctx  runnable  Watch  Execution  context  execution  Thread Execution  Service  un  Pause  pause  clear  Executions  And  Queue  default  Throttle  Period  execution  Thread  Pool  Queue  Size  execution  Thread  Pool  Max  Size  get  Current  Executions  current  Executions  queued  Watches  process  Events  Async  process  Events  Sync  create  Triggered  Watches  And  Context  execute  Triggered  Watches  execute  update  Watch  Status  log  Watch  Record  execute  Async  force  Put  History  delete  Trigger  execute  Inner  execute  Triggered  Watches  get  Watch  execution  Times  clear  Executions  Watch  Execution  Task  run  Watch  Execution  create  Snapshot,1,1
97,sleep long  Watch  Execution  Context  Reporting  Attachment  Parser void  sleep  interrupt  current  Thread  id  watch  id Reporting  Attachment  Parser type  interval  setting  retries  setting  report  warning  enabled  setting  report  warning  text  parser  payload  parser  warnings  logger  interval  retries  http  Client  template  Engine  warning  Enabled  custom  Warnings  Auth  Parse  Context  Kibana  Reporting  Payload  path  Builder  id  inline  url  interval  retries  auth  proxy get  Dynamic  Settings  get  Static  Settings  get  Settings  Reporting  Attachment  Parser  set  Warning  Enabled  add  Warning  Text  warning  Validator  type  parse  to  Attachment  get  Sleep  Millis  request  Report  Generation  extract  Id  From  Json  parse  Auth  parse  Proxy  get  Path  set  Path  Builder  url  interval  retries  inline  auth  proxy  build Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch  to  Map,0,0
98,sleep long  Watch  Execution  Context  Reporting  Attachment  Parser void  sleep  interrupt  current  Thread  id  watch  id Watch  Execution  Context id  execution  Time  trigger  Event  default  Throttle  Period  phase  relative  Start  Time  watch  payload  vars  input  Result  condition  Result  transform  Result  actions  Results  node  Id  user Watch  Execution  Context  known  Watch  simulate  Action  skip  Throttling  should  Be  Executed  record  Execution  watch  ensure  Watch  Exists  id  execution  Time  default  Throttle  Period  override  Record  On  Conflict  trigger  Event  payload  vars  execution  Phase  set  Node  Id  get  Node  Id  get  User  start  before  Input  on  Input  Result  input  Result  before  Condition  on  Condition  Result  condition  Result  before  Watch  Transform  on  Watch  Transform  Result  transform  Result  before  Actions  on  Action  Result  actions  Results  abort  Before  Execution  abort  Failed  Execution  abort  Failed  Execution  finish  create  Snapshot  get  Username  From  Watch  to  Map Reporting  Attachment  Parser type  interval  setting  retries  setting  report  warning  enabled  setting  report  warning  text  parser  payload  parser  warnings  logger  interval  retries  http  Client  template  Engine  warning  Enabled  custom  Warnings  Auth  Parse  Context  Kibana  Reporting  Payload  path  Builder  id  inline  url  interval  retries  auth  proxy get  Dynamic  Settings  get  Static  Settings  get  Settings  Reporting  Attachment  Parser  set  Warning  Enabled  add  Warning  Text  warning  Validator  type  parse  to  Attachment  get  Sleep  Millis  request  Report  Generation  extract  Id  From  Json  parse  Auth  parse  Proxy  get  Path  set  Path  Builder  url  interval  retries  inline  auth  proxy  build,1,0
99,sleep long  Watch  Execution  Context  Reporting  Attachment  Parser void  sleep  interrupt  current  Thread  id  watch  id Reporting  Attachment  Parser type  interval  setting  retries  setting  report  warning  enabled  setting  report  warning  text  parser  payload  parser  warnings  logger  interval  retries  http  Client  template  Engine  warning  Enabled  custom  Warnings  Auth  Parse  Context  Kibana  Reporting  Payload  path  Builder  id  inline  url  interval  retries  auth  proxy get  Dynamic  Settings  get  Static  Settings  get  Settings  Reporting  Attachment  Parser  set  Warning  Enabled  add  Warning  Text  warning  Validator  type  parse  to  Attachment  get  Sleep  Millis  request  Report  Generation  extract  Id  From  Json  parse  Auth  parse  Proxy  get  Path  set  Path  Builder  url  interval  retries  inline  auth  proxy  build Reporting  Attachment inline  auth  proxy  interval  retries  url  inline  id  auth  url  interval  retries  proxy Reporting  Attachment  type  id  inline  auth  url  interval  retries  proxy  to  X  Content  equals  hash  Code,0,0
100,sleep long  Watch  Execution  Context  Reporting  Attachment  Parser void  sleep  interrupt  current  Thread  id  watch  id Reporting  Attachment inline  auth  proxy  interval  retries  url  inline  id  auth  url  interval  retries  proxy Reporting  Attachment  type  id  inline  auth  url  interval  retries  proxy  to  X  Content  equals  hash  Code Reporting  Attachment  Parser type  interval  setting  retries  setting  report  warning  enabled  setting  report  warning  text  parser  payload  parser  warnings  logger  interval  retries  http  Client  template  Engine  warning  Enabled  custom  Warnings  Auth  Parse  Context  Kibana  Reporting  Payload  path  Builder  id  inline  url  interval  retries  auth  proxy get  Dynamic  Settings  get  Static  Settings  get  Settings  Reporting  Attachment  Parser  set  Warning  Enabled  add  Warning  Text  warning  Validator  type  parse  to  Attachment  get  Sleep  Millis  request  Report  Generation  extract  Id  From  Json  parse  Auth  parse  Proxy  get  Path  set  Path  Builder  url  interval  retries  inline  auth  proxy  build,1,1
101,is  Watcher  Stopped  Manually Cluster  State boolean  custom  get  Metadata  manually  Stopped Watcher  Life  Cycle  Service logger  state  previous  Shard  Routings  shut  Down  watcher  Service  stop  States Watcher  Life  Cycle  Service  before  Stop  shut  Down  cluster  Changed  pause  Execution  clear  Allocation  Ids  shard  Routings  get  State Cluster  State empty  state  custom  value  serializer  unknown  uuid  unknown  version  version  state  U  U  I  D  routing  Table  nodes  metadata  blocks  customs  cluster  Name  was  Read  From  Diff  routing  Nodes  Metric  value  To  Enum  value  Builder  cluster  Name  version  uuid  metadata  routing  Table  nodes  blocks  customs  from  Diff  Cluster  State  Diff  to  Version  from  Uuid  to  Uuid  cluster  Name  routing  Table  nodes  metadata  blocks  customs resolve  Voting  Config  Exclusions  is  Private  Cluster  State  Cluster  State  term  version  get  Version  state  U  U  I  D  nodes  get  Nodes  metadata  get  Metadata  coordination  Metadata  routing  Table  get  Routing  Table  blocks  get  Blocks  customs  get  Customs  custom  get  Cluster  Name  get  Last  Accepted  Configuration  get  Last  Committed  Configuration  get  Voting  Config  Exclusions  get  Routing  Nodes  to  String  supersedes  Metric  parse  String  to  String  to  X  Content  builder  builder  Builder  Builder  nodes  nodes  nodes  routing  Table  metadata  metadata  blocks  blocks  version  increment  Version  state  U  U  I  D  put  Custom  remove  Custom  customs  from  Diff  build  to  Bytes  from  Bytes  diff  read  Diff  From  read  From  write  To  Cluster  State  Diff  Cluster  State  Diff  write  To  apply,0,0
102,is  Watcher  Stopped  Manually Cluster  State boolean  custom  get  Metadata  manually  Stopped Cluster  State empty  state  custom  value  serializer  unknown  uuid  unknown  version  version  state  U  U  I  D  routing  Table  nodes  metadata  blocks  customs  cluster  Name  was  Read  From  Diff  routing  Nodes  Metric  value  To  Enum  value  Builder  cluster  Name  version  uuid  metadata  routing  Table  nodes  blocks  customs  from  Diff  Cluster  State  Diff  to  Version  from  Uuid  to  Uuid  cluster  Name  routing  Table  nodes  metadata  blocks  customs resolve  Voting  Config  Exclusions  is  Private  Cluster  State  Cluster  State  term  version  get  Version  state  U  U  I  D  nodes  get  Nodes  metadata  get  Metadata  coordination  Metadata  routing  Table  get  Routing  Table  blocks  get  Blocks  customs  get  Customs  custom  get  Cluster  Name  get  Last  Accepted  Configuration  get  Last  Committed  Configuration  get  Voting  Config  Exclusions  get  Routing  Nodes  to  String  supersedes  Metric  parse  String  to  String  to  X  Content  builder  builder  Builder  Builder  nodes  nodes  nodes  routing  Table  metadata  metadata  blocks  blocks  version  increment  Version  state  U  U  I  D  put  Custom  remove  Custom  customs  from  Diff  build  to  Bytes  from  Bytes  diff  read  Diff  From  read  From  write  To  Cluster  State  Diff  Cluster  State  Diff  write  To  apply Watcher  Life  Cycle  Service logger  state  previous  Shard  Routings  shut  Down  watcher  Service  stop  States Watcher  Life  Cycle  Service  before  Stop  shut  Down  cluster  Changed  pause  Execution  clear  Allocation  Ids  shard  Routings  get  State,1,0
103,is  Token  For  Realm Open  Id  Connect  Realm boolean  get  Authenticating  Realm  equals  get  Authenticating  Realm  name Open  Id  Connect  Realm context  token  data  op  Configuration  rp  Configuration  open  Id  Connect  Authenticator  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  populate  User  Metadata  role  Mapper  delegated  Realms  Claim  Parser  name  parser Open  Id  Connect  Realm  Open  Id  Connect  Realm  initialize  supports  token  authenticate  lookup  User  build  User  From  Claims  build  Relying  Party  Configuration  build  Open  Id  Connect  Provider  Configuration  require  build  Authentication  Request  Uri  is  Issuer  Valid  build  Logout  Response  close  Claim  Parser  get  Claim  Values  get  Claim  Value  to  String  for  Setting Open  Id  Connect  Token redirect  Url  state  nonce  authenticating  Realm Open  Id  Connect  Token  principal  credentials  clear  Credentials  get  State  get  Nonce  get  Redirect  Url  get  Authenticating  Realm  to  String,0,0
104,is  Token  For  Realm Open  Id  Connect  Realm boolean  get  Authenticating  Realm  equals  get  Authenticating  Realm  name Open  Id  Connect  Token redirect  Url  state  nonce  authenticating  Realm Open  Id  Connect  Token  principal  credentials  clear  Credentials  get  State  get  Nonce  get  Redirect  Url  get  Authenticating  Realm  to  String Open  Id  Connect  Realm context  token  data  op  Configuration  rp  Configuration  open  Id  Connect  Authenticator  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  populate  User  Metadata  role  Mapper  delegated  Realms  Claim  Parser  name  parser Open  Id  Connect  Realm  Open  Id  Connect  Realm  initialize  supports  token  authenticate  lookup  User  build  User  From  Claims  build  Relying  Party  Configuration  build  Open  Id  Connect  Provider  Configuration  require  build  Authentication  Request  Uri  is  Issuer  Valid  build  Logout  Response  close  Claim  Parser  get  Claim  Values  get  Claim  Value  to  String  for  Setting,1,1
105,is  Token  For  Realm Saml  Realm boolean  get  Authenticating  Realm  equals  get  Authenticating  Realm  name Saml  Realm logger  user  metadata  nameid  value  user  metadata  nameid  format  context  token  data  token  metadata  nameid  value  token  metadata  nameid  format  token  metadata  nameid  qualifier  token  metadata  nameid  sp  qualifier  token  metadata  nameid  sp  provided  id  token  metadata  session  token  metadata  realm  releasables  authenticator  logout  Handler  role  Mapper  idp  Descriptor  service  Provider  name  Id  Policy  force  Authn  use  Single  Logout  populate  User  Metadata  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  delegated  Realms  Privileged  H  T  T  P  Metadata  Resolver  File  Listener  logger  on  Change  Attribute  Parser  name  parser create  Saml  Realm  initialize  require  get  Idp  Configuration  get  Sp  Configuration  build  Encryption  Credential  build  Signing  Configuration  build  Credential  find  Saml  Realms  supports  token  authenticate  build  User  create  Token  Metadata  resolve  Single  Value  Attribute  lookup  User  initialize  Resolver  parse  Http  Metadata  Privileged  H  T  T  P  Metadata  Resolver  fetch  Metadata  parse  File  System  Metadata  resolve  Entity  Descriptor  close  initialise  Resolver  service  Provider  Entity  Id  assertion  Consumer  Service  U  R  L  build  Authentication  Request  build  Logout  Request  build  Logout  Response  get  Signing  Configuration  get  Logout  Handler  File  Listener  on  File  Created  on  File  Deleted  on  File  Changed  Attribute  Parser  get  Attribute  to  String  for  Setting Saml  Token content  allowed  Saml  Request  Ids  authenticating  Realm Saml  Token  principal  credentials  clear  Credentials  get  Content  get  Allowed  Saml  Request  Ids  get  Authenticating  Realm  to  String,0,0
106,is  Token  For  Realm Saml  Realm boolean  get  Authenticating  Realm  equals  get  Authenticating  Realm  name Saml  Token content  allowed  Saml  Request  Ids  authenticating  Realm Saml  Token  principal  credentials  clear  Credentials  get  Content  get  Allowed  Saml  Request  Ids  get  Authenticating  Realm  to  String Saml  Realm logger  user  metadata  nameid  value  user  metadata  nameid  format  context  token  data  token  metadata  nameid  value  token  metadata  nameid  format  token  metadata  nameid  qualifier  token  metadata  nameid  sp  qualifier  token  metadata  nameid  sp  provided  id  token  metadata  session  token  metadata  realm  releasables  authenticator  logout  Handler  role  Mapper  idp  Descriptor  service  Provider  name  Id  Policy  force  Authn  use  Single  Logout  populate  User  Metadata  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  delegated  Realms  Privileged  H  T  T  P  Metadata  Resolver  File  Listener  logger  on  Change  Attribute  Parser  name  parser create  Saml  Realm  initialize  require  get  Idp  Configuration  get  Sp  Configuration  build  Encryption  Credential  build  Signing  Configuration  build  Credential  find  Saml  Realms  supports  token  authenticate  build  User  create  Token  Metadata  resolve  Single  Value  Attribute  lookup  User  initialize  Resolver  parse  Http  Metadata  Privileged  H  T  T  P  Metadata  Resolver  fetch  Metadata  parse  File  System  Metadata  resolve  Entity  Descriptor  close  initialise  Resolver  service  Provider  Entity  Id  assertion  Consumer  Service  U  R  L  build  Authentication  Request  build  Logout  Request  build  Logout  Response  get  Signing  Configuration  get  Logout  Handler  File  Listener  on  File  Created  on  File  Deleted  on  File  Changed  Attribute  Parser  get  Attribute  to  String  for  Setting,1,1
107,require  Text Terminal  String String  is  Null  Or  Empty  read  Text Saml  Metadata  Command metadata  schema  output  Path  Spec  batch  Spec  realm  Spec  locale  Spec  service  Name  Spec  attribute  Spec  org  Name  Spec  org  Display  Name  Spec  org  Url  Spec  contacts  Spec  signing  Pkcs  Path  Spec  signing  Cert  Path  Spec  signing  Key  Path  Spec  key  Password  Spec  key  Store  Function  key  Store  Wrapper main  Saml  Metadata  Command  Saml  Metadata  Command  close  execute  build  Entity  Descriptor  possibly  Sign  Descriptor  write  Output  build  Signing  Credential  with  Password  get  Chars  read  Signing  Key  validate  Xml  print  Exceptions  resolve  Path  option  get  Attribute  Names  sorted  find  Realm  option  Name  build  Realm  is  Saml  Realm  find  Locale  get  Parser Terminal error  writer  default  Verbosity  verbosity  line  Separator  Console  Terminal  console  System  Terminal  writer  reader new  Error  Writer  warn  About  Index  Backup  Terminal  set  Verbosity  read  Text  read  Secret  read  Secret  get  Writer  get  Error  Writer  println  println  print  print  error  Print  error  Println  error  Println  is  Printable  prompt  Yes  No  read  Line  To  Char  Array  flush  Console  Terminal  is  Supported  get  Writer  read  Text  read  Secret  System  Terminal  new  Writer  get  Reader  get  Writer  read  Text  read  Secret  read  Secret,0,0
108,require  Text Terminal  String String  is  Null  Or  Empty  read  Text Terminal error  writer  default  Verbosity  verbosity  line  Separator  Console  Terminal  console  System  Terminal  writer  reader new  Error  Writer  warn  About  Index  Backup  Terminal  set  Verbosity  read  Text  read  Secret  read  Secret  get  Writer  get  Error  Writer  println  println  print  print  error  Print  error  Println  error  Println  is  Printable  prompt  Yes  No  read  Line  To  Char  Array  flush  Console  Terminal  is  Supported  get  Writer  read  Text  read  Secret  System  Terminal  new  Writer  get  Reader  get  Writer  read  Text  read  Secret  read  Secret Saml  Metadata  Command metadata  schema  output  Path  Spec  batch  Spec  realm  Spec  locale  Spec  service  Name  Spec  attribute  Spec  org  Name  Spec  org  Display  Name  Spec  org  Url  Spec  contacts  Spec  signing  Pkcs  Path  Spec  signing  Cert  Path  Spec  signing  Key  Path  Spec  key  Password  Spec  key  Store  Function  key  Store  Wrapper main  Saml  Metadata  Command  Saml  Metadata  Command  close  execute  build  Entity  Descriptor  possibly  Sign  Descriptor  write  Output  build  Signing  Credential  with  Password  get  Chars  read  Signing  Key  validate  Xml  print  Exceptions  resolve  Path  option  get  Attribute  Names  sorted  find  Realm  option  Name  build  Realm  is  Saml  Realm  find  Locale  get  Parser,1,0
109,check  For  Realm  Chains Iterable  Realm  Settings void  get  Concrete  Setting  For  Namespace  apply  type  name  exists  get Delegated  Authorization  Support lookup  logger  license  State Delegated  Authorization  Support  Delegated  Authorization  Support  has  Delegation  resolve  resolve  Realms  find  Realm Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String,0,0
110,check  For  Realm  Chains Iterable  Realm  Settings void  get  Concrete  Setting  For  Namespace  apply  type  name  exists  get Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String Delegated  Authorization  Support lookup  logger  license  State Delegated  Authorization  Support  Delegated  Authorization  Support  has  Delegation  resolve  resolve  Realms  find  Realm,1,0
111,ensure  Order  Setting Settings  Realm  Config  Realm  Identifier  int Settings  realm  Setting  Prefix  build  put  put  builder Realms logger  settings  env  factories  license  State  thread  Context  reserved  Realm  realms  standard  Realms  Only  native  Realms  Only Realms  iterator  get  Unlicensed  Realms  stream  as  List  realm  realm  Factory  init  Realms  usage  Stats  add  Native  Realms  check  Unique  Orders  combine  Maps  convert  To  Map  Of  Lists  is  Realm  Type  Available Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String,0,0
112,ensure  Order  Setting Settings  Realm  Config  Realm  Identifier  int Settings  realm  Setting  Prefix  build  put  put  builder Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String Realms logger  settings  env  factories  license  State  thread  Context  reserved  Realm  realms  standard  Realms  Only  native  Realms  Only Realms  iterator  get  Unlicensed  Realms  stream  as  List  realm  realm  Factory  init  Realms  usage  Stats  add  Native  Realms  check  Unique  Orders  combine  Maps  convert  To  Map  Of  Lists  is  Realm  Type  Available,1,0
113,get  From  Header Thread  Context String  get  Header  has  Text  region  Matches  length  length  length  substring  length Token  Service token  service  key  iterations  tokens  encryption  key  iterations  kdf  algorithm  salt  bytes  key  bytes  iv  bytes  version  bytes  encryption  cipher  expired  token  www  auth  value  malformed  token  www  auth  value  default  backoff  thread  pool  name  token  expiration  delete  interval  delete  timeout  token  doc  type  hashed  token  length  token  length  token  doc  id  prefix  legacy  minimum  bytes  minimum  bytes  legacy  minimum  base  bytes  minimum  base  bytes  version  hashed  tokens  version  tokens  index  introduced  version  access  tokens  as  uuids  version  multiple  concurrent  refreshes  logger  secure  Random  settings  cluster  Service  clock  expiration  Delay  delete  Interval  client  security  Main  Index  security  Tokens  Index  expired  Token  Remover  enabled  license  State  security  Context  key  Cache  last  Expiration  Run  Ms  created  Time  Stamps  Key  Computing  Runnable  decoded  Salt  key  And  Cache  listener  Token  Metadata  Publish  Action  token  Metadata  install  Token  Metadata  In  Progress  Key  And  Cache  key  And  Timestamp  key  Cache  salt  key  Hash  Token  Keys  cache  current  Token  Key  Hash  active  Key  Cache  Refresh  Token  Status  invalidated  associated  User  associated  Realm  refreshed  refresh  Instant  superseding  Tokens  iv  salt  version Token  Service  create  O  Auth  Tokens  create  O  Auth  Tokens  create  O  Auth  Tokens  hash  Token  String  get  And  Validate  Token  authenticate  Token  get  Authentication  And  Metadata  get  User  Token  From  Id  decode  Token  invalidate  Access  Token  invalidate  Access  Token  invalidate  Refresh  Token  invalidate  Active  Tokens  For  Realm  And  User  invalidate  All  Tokens  index  Invalidation  index  Invalidation  refresh  Token  find  Token  From  Refresh  Token  find  Token  From  Refresh  Token  inner  Refresh  decrypt  And  Return  Superseding  Tokens  on  Response  on  Failure  encrypt  Superseding  Tokens  get  Token  Doc  Async  get  Token  Version  Compatibility  is  Token  Service  Enabled  check  Token  Document  Expired  check  Token  Document  For  Refresh  check  Client  Can  Refresh  get  Refresh  Token  Source  Map  get  User  Token  Source  Map  check  Multiple  Refreshes  find  Active  Tokens  For  Realm  find  Active  Tokens  For  User  source  Indices  With  Tokens  And  Run  create  Token  Document  is  Of  User  filter  And  Parse  Hit  parse  Tokens  From  Document  get  Token  Document  Id  get  Token  Document  Id  get  Token  Id  From  Document  Id  is  Enabled  ensure  Enabled  get  Tokens  Index  For  Version  check  If  Token  Is  Valid  get  Expiration  Delay  get  Expiration  Time  get  Creation  Time  maybe  Start  Token  Remover  prepend  Version  And  Encode  Access  Token  prepend  Version  And  Encode  Refresh  Token  unpack  Version  And  Payload  ensure  Encryption  Ciphers  Supported  get  Encryption  Cipher  get  Encryption  Cipher  get  Key  Async  decrypt  Token  Id  get  Decryption  Cipher  get  Decryption  Cipher  get  Random  Bytes  compute  Secret  Key  expired  Token  Exception  invalid  Grant  Exception  unable  To  Perform  Action  trace  Log  trace  Log  is  Expired  Token  Exception  is  Expiration  In  Progress  Key  Computing  Runnable  do  Run  on  Failure  generate  Spare  Key  rotate  To  Spare  Key  prune  Keys  get  Token  Metadata  new  Token  Metadata  refresh  Metadata  generate  Token  Key  get  Active  Key  Hash  rotate  Keys  On  Master  Token  Metadata  Publish  Action  ack  Timeout  master  Node  Timeout  execute  new  Response  initialize  install  Token  Metadata  execute  on  Failure  cluster  State  Processed  clear  Active  Key  Cache  get  Active  Key  Cache  Key  And  Cache  get  Key  get  Or  Compute  Key  close  get  Key  Hash  calculate  Key  Hash  get  Salt  Token  Keys  get  Refresh  Token  Status  is  Invalidated  get  Associated  User  get  Associated  Realm  is  Refreshed  get  Refresh  Instant  get  Superseding  Tokens  get  Iv  get  Salt  get  Version  set  Version  from  Source  Map Thread  Context prefix  default  headers  setting  action  origin  transient  name  logger  default  context  default  Header  thread  Local  max  Warning  Header  Count  max  Warning  Header  Size  Thread  Context  Struct  empty  request  Headers  transient  Headers  response  Headers  is  System  Context  warning  Headers  Size  Context  Preserving  Runnable  in  ctx  Context  Preserving  Abstract  Runnable  in  creators  Context  threads  Original  Context  linked  hash  set  collector  Linked  Hash  Set  Collector  characteristics Thread  Context  stash  Context  stash  With  Origin  stash  And  Merge  Headers  new  Stored  Context  new  Restorable  Context  wrap  Restorable  write  To  read  Headers  set  Headers  read  Headers  From  Stream  get  Header  get  Headers  get  Response  Headers  copy  Headers  put  Header  put  Header  put  Transient  get  Transient  add  Response  Header  add  Response  Header  preserve  Context  unwrap  is  Default  Context  mark  As  System  Context  is  System  Context  write  To  Context  close  restore  build  Default  Headers  set  System  Context  Thread  Context  Struct  Thread  Context  Struct  Thread  Context  Struct  put  Request  put  Single  Header  put  Headers  put  Response  Headers  put  Response  put  Transient  copy  Headers  write  To  Context  Preserving  Runnable  run  to  String  unwrap  Context  Preserving  Abstract  Runnable  is  Force  Execution  on  After  on  Failure  on  Rejection  do  Run  to  String  unwrap  supplier  accumulator  combiner  finisher  characteristics,0,0
114,get  From  Header Thread  Context String  get  Header  has  Text  region  Matches  length  length  length  substring  length Thread  Context prefix  default  headers  setting  action  origin  transient  name  logger  default  context  default  Header  thread  Local  max  Warning  Header  Count  max  Warning  Header  Size  Thread  Context  Struct  empty  request  Headers  transient  Headers  response  Headers  is  System  Context  warning  Headers  Size  Context  Preserving  Runnable  in  ctx  Context  Preserving  Abstract  Runnable  in  creators  Context  threads  Original  Context  linked  hash  set  collector  Linked  Hash  Set  Collector  characteristics Thread  Context  stash  Context  stash  With  Origin  stash  And  Merge  Headers  new  Stored  Context  new  Restorable  Context  wrap  Restorable  write  To  read  Headers  set  Headers  read  Headers  From  Stream  get  Header  get  Headers  get  Response  Headers  copy  Headers  put  Header  put  Header  put  Transient  get  Transient  add  Response  Header  add  Response  Header  preserve  Context  unwrap  is  Default  Context  mark  As  System  Context  is  System  Context  write  To  Context  close  restore  build  Default  Headers  set  System  Context  Thread  Context  Struct  Thread  Context  Struct  Thread  Context  Struct  put  Request  put  Single  Header  put  Headers  put  Response  Headers  put  Response  put  Transient  copy  Headers  write  To  Context  Preserving  Runnable  run  to  String  unwrap  Context  Preserving  Abstract  Runnable  is  Force  Execution  on  After  on  Failure  on  Rejection  do  Run  to  String  unwrap  supplier  accumulator  combiner  finisher  characteristics Token  Service token  service  key  iterations  tokens  encryption  key  iterations  kdf  algorithm  salt  bytes  key  bytes  iv  bytes  version  bytes  encryption  cipher  expired  token  www  auth  value  malformed  token  www  auth  value  default  backoff  thread  pool  name  token  expiration  delete  interval  delete  timeout  token  doc  type  hashed  token  length  token  length  token  doc  id  prefix  legacy  minimum  bytes  minimum  bytes  legacy  minimum  base  bytes  minimum  base  bytes  version  hashed  tokens  version  tokens  index  introduced  version  access  tokens  as  uuids  version  multiple  concurrent  refreshes  logger  secure  Random  settings  cluster  Service  clock  expiration  Delay  delete  Interval  client  security  Main  Index  security  Tokens  Index  expired  Token  Remover  enabled  license  State  security  Context  key  Cache  last  Expiration  Run  Ms  created  Time  Stamps  Key  Computing  Runnable  decoded  Salt  key  And  Cache  listener  Token  Metadata  Publish  Action  token  Metadata  install  Token  Metadata  In  Progress  Key  And  Cache  key  And  Timestamp  key  Cache  salt  key  Hash  Token  Keys  cache  current  Token  Key  Hash  active  Key  Cache  Refresh  Token  Status  invalidated  associated  User  associated  Realm  refreshed  refresh  Instant  superseding  Tokens  iv  salt  version Token  Service  create  O  Auth  Tokens  create  O  Auth  Tokens  create  O  Auth  Tokens  hash  Token  String  get  And  Validate  Token  authenticate  Token  get  Authentication  And  Metadata  get  User  Token  From  Id  decode  Token  invalidate  Access  Token  invalidate  Access  Token  invalidate  Refresh  Token  invalidate  Active  Tokens  For  Realm  And  User  invalidate  All  Tokens  index  Invalidation  index  Invalidation  refresh  Token  find  Token  From  Refresh  Token  find  Token  From  Refresh  Token  inner  Refresh  decrypt  And  Return  Superseding  Tokens  on  Response  on  Failure  encrypt  Superseding  Tokens  get  Token  Doc  Async  get  Token  Version  Compatibility  is  Token  Service  Enabled  check  Token  Document  Expired  check  Token  Document  For  Refresh  check  Client  Can  Refresh  get  Refresh  Token  Source  Map  get  User  Token  Source  Map  check  Multiple  Refreshes  find  Active  Tokens  For  Realm  find  Active  Tokens  For  User  source  Indices  With  Tokens  And  Run  create  Token  Document  is  Of  User  filter  And  Parse  Hit  parse  Tokens  From  Document  get  Token  Document  Id  get  Token  Document  Id  get  Token  Id  From  Document  Id  is  Enabled  ensure  Enabled  get  Tokens  Index  For  Version  check  If  Token  Is  Valid  get  Expiration  Delay  get  Expiration  Time  get  Creation  Time  maybe  Start  Token  Remover  prepend  Version  And  Encode  Access  Token  prepend  Version  And  Encode  Refresh  Token  unpack  Version  And  Payload  ensure  Encryption  Ciphers  Supported  get  Encryption  Cipher  get  Encryption  Cipher  get  Key  Async  decrypt  Token  Id  get  Decryption  Cipher  get  Decryption  Cipher  get  Random  Bytes  compute  Secret  Key  expired  Token  Exception  invalid  Grant  Exception  unable  To  Perform  Action  trace  Log  trace  Log  is  Expired  Token  Exception  is  Expiration  In  Progress  Key  Computing  Runnable  do  Run  on  Failure  generate  Spare  Key  rotate  To  Spare  Key  prune  Keys  get  Token  Metadata  new  Token  Metadata  refresh  Metadata  generate  Token  Key  get  Active  Key  Hash  rotate  Keys  On  Master  Token  Metadata  Publish  Action  ack  Timeout  master  Node  Timeout  execute  new  Response  initialize  install  Token  Metadata  execute  on  Failure  cluster  State  Processed  clear  Active  Key  Cache  get  Active  Key  Cache  Key  And  Cache  get  Key  get  Or  Compute  Key  close  get  Key  Hash  calculate  Key  Hash  get  Salt  Token  Keys  get  Refresh  Token  Status  is  Invalidated  get  Associated  User  get  Associated  Realm  is  Refreshed  get  Refresh  Instant  get  Superseding  Tokens  get  Iv  get  Salt  get  Version  set  Version  from  Source  Map,1,0
115,get  Api  Key  Expiration Instant  Api  Key  Service Instant  get  Expiration  plus  Seconds  get  Seconds  get  Expiration Api  Key  Service logger  deprecation  Logger  api  key  id  key  api  key  name  key  api  key  realm  name  api  key  realm  type  api  key  creator  realm  name  api  key  creator  realm  type  api  key  role  descriptors  key  api  key  limited  role  descriptors  key  password  hashing  algorithm  delete  timeout  delete  interval  cache  hash  algo  setting  cache  ttl  setting  cache  max  keys  setting  clock  client  license  State  security  Index  cluster  Service  hasher  enabled  settings  expired  Api  Keys  Remover  delete  Interval  api  Key  Auth  Cache  cache  Hasher  thread  Pool  last  Expiration  Run  Ms  Api  Key  Role  Descriptors  api  Key  Id  role  Descriptors  limited  By  Role  Descriptors  Api  Key  Credentials  id  key  Api  Key  Logging  Deprecation  Handler  deprecation  Logger  api  Key  Id  Cached  Api  Key  Hash  Result  success  hash Api  Key  Service  create  Api  Key  create  Api  Key  And  Index  It  new  Document  authenticate  With  Api  Key  If  Present  load  Api  Key  And  Validate  Credentials  get  Role  For  Api  Key  Api  Key  Role  Descriptors  get  Api  Key  Id  get  Role  Descriptors  get  Limited  By  Role  Descriptors  parse  Role  Descriptors  validate  Api  Key  Credentials  get  From  Cache  validate  Api  Key  Expiration  get  Credentials  From  Header  verify  Key  Against  Hash  is  Enabled  ensure  Enabled  Api  Key  Credentials  get  Id  get  Key  close  Api  Key  Logging  Deprecation  Handler  used  Deprecated  Name  used  Deprecated  Field  used  Deprecated  Field  invalidate  Api  Keys  invalidate  All  Api  Keys  find  Api  Keys  find  Api  Keys  For  User  Realm  Api  Key  Id  And  Name  Combination  index  Invalidation  trace  Log  trace  Log  is  Expiration  In  Progress  last  Time  When  Api  Keys  Remover  Was  Triggered  maybe  Start  Api  Key  Remover  get  Api  Keys  get  Creator  Realm  Name  get  Creator  Realm  Type  Cached  Api  Key  Hash  Result  verify Create  Api  Key  Request default  refresh  policy  name  expiration  role  Descriptors  refresh  Policy Create  Api  Key  Request  Create  Api  Key  Request  Create  Api  Key  Request  get  Name  set  Name  get  Expiration  set  Expiration  get  Role  Descriptors  set  Role  Descriptors  get  Refresh  Policy  set  Refresh  Policy  validate  write  To,0,0
116,get  Api  Key  Expiration Instant  Api  Key  Service Instant  get  Expiration  plus  Seconds  get  Seconds  get  Expiration Create  Api  Key  Request default  refresh  policy  name  expiration  role  Descriptors  refresh  Policy Create  Api  Key  Request  Create  Api  Key  Request  Create  Api  Key  Request  get  Name  set  Name  get  Expiration  set  Expiration  get  Role  Descriptors  set  Role  Descriptors  get  Refresh  Policy  set  Refresh  Policy  validate  write  To Api  Key  Service logger  deprecation  Logger  api  key  id  key  api  key  name  key  api  key  realm  name  api  key  realm  type  api  key  creator  realm  name  api  key  creator  realm  type  api  key  role  descriptors  key  api  key  limited  role  descriptors  key  password  hashing  algorithm  delete  timeout  delete  interval  cache  hash  algo  setting  cache  ttl  setting  cache  max  keys  setting  clock  client  license  State  security  Index  cluster  Service  hasher  enabled  settings  expired  Api  Keys  Remover  delete  Interval  api  Key  Auth  Cache  cache  Hasher  thread  Pool  last  Expiration  Run  Ms  Api  Key  Role  Descriptors  api  Key  Id  role  Descriptors  limited  By  Role  Descriptors  Api  Key  Credentials  id  key  Api  Key  Logging  Deprecation  Handler  deprecation  Logger  api  Key  Id  Cached  Api  Key  Hash  Result  success  hash Api  Key  Service  create  Api  Key  create  Api  Key  And  Index  It  new  Document  authenticate  With  Api  Key  If  Present  load  Api  Key  And  Validate  Credentials  get  Role  For  Api  Key  Api  Key  Role  Descriptors  get  Api  Key  Id  get  Role  Descriptors  get  Limited  By  Role  Descriptors  parse  Role  Descriptors  validate  Api  Key  Credentials  get  From  Cache  validate  Api  Key  Expiration  get  Credentials  From  Header  verify  Key  Against  Hash  is  Enabled  ensure  Enabled  Api  Key  Credentials  get  Id  get  Key  close  Api  Key  Logging  Deprecation  Handler  used  Deprecated  Name  used  Deprecated  Field  used  Deprecated  Field  invalidate  Api  Keys  invalidate  All  Api  Keys  find  Api  Keys  find  Api  Keys  For  User  Realm  Api  Key  Id  And  Name  Combination  index  Invalidation  trace  Log  trace  Log  is  Expiration  In  Progress  last  Time  When  Api  Keys  Remover  Was  Triggered  maybe  Start  Api  Key  Remover  get  Api  Keys  get  Creator  Realm  Name  get  Creator  Realm  Type  Cached  Api  Key  Hash  Result  verify,1,1
117,prepare  Authentication  Response Open  Id  Connect  Realm  String  String  String  Action  Listener  Open  Id  Connect  Prepare  Authentication  Response void  build  Authentication  Request  Uri  on  Response  on  Failure Transport  Open  Id  Connect  Prepare  Authentication  Action realms Transport  Open  Id  Connect  Prepare  Authentication  Action  do  Execute Open  Id  Connect  Realm context  token  data  op  Configuration  rp  Configuration  open  Id  Connect  Authenticator  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  populate  User  Metadata  role  Mapper  delegated  Realms  Claim  Parser  name  parser Open  Id  Connect  Realm  Open  Id  Connect  Realm  initialize  supports  token  authenticate  lookup  User  build  User  From  Claims  build  Relying  Party  Configuration  build  Open  Id  Connect  Provider  Configuration  require  build  Authentication  Request  Uri  is  Issuer  Valid  build  Logout  Response  close  Claim  Parser  get  Claim  Values  get  Claim  Value  to  String  for  Setting,0,0
118,prepare  Authentication  Response Open  Id  Connect  Realm  String  String  String  Action  Listener  Open  Id  Connect  Prepare  Authentication  Response void  build  Authentication  Request  Uri  on  Response  on  Failure Open  Id  Connect  Realm context  token  data  op  Configuration  rp  Configuration  open  Id  Connect  Authenticator  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  populate  User  Metadata  role  Mapper  delegated  Realms  Claim  Parser  name  parser Open  Id  Connect  Realm  Open  Id  Connect  Realm  initialize  supports  token  authenticate  lookup  User  build  User  From  Claims  build  Relying  Party  Configuration  build  Open  Id  Connect  Provider  Configuration  require  build  Authentication  Request  Uri  is  Issuer  Valid  build  Logout  Response  close  Claim  Parser  get  Claim  Values  get  Claim  Value  to  String  for  Setting Transport  Open  Id  Connect  Prepare  Authentication  Action realms Transport  Open  Id  Connect  Prepare  Authentication  Action  do  Execute,1,0
119,build  Logout  Response  Url Saml  Realm  Saml  Logout  Request  Handler  Result String  build  Logout  Response  get  Request  Id  get  Redirect  Url  get  Signing  Configuration  get  Relay  State Transport  Saml  Invalidate  Session  Action token  Service  realms Transport  Saml  Invalidate  Session  Action  do  Execute  invalidate  Session  find  And  Invalidate  Tokens  invalidate  Token  Pair  contains  Metadata Saml  Realm logger  user  metadata  nameid  value  user  metadata  nameid  format  context  token  data  token  metadata  nameid  value  token  metadata  nameid  format  token  metadata  nameid  qualifier  token  metadata  nameid  sp  qualifier  token  metadata  nameid  sp  provided  id  token  metadata  session  token  metadata  realm  releasables  authenticator  logout  Handler  role  Mapper  idp  Descriptor  service  Provider  name  Id  Policy  force  Authn  use  Single  Logout  populate  User  Metadata  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  delegated  Realms  Privileged  H  T  T  P  Metadata  Resolver  File  Listener  logger  on  Change  Attribute  Parser  name  parser create  Saml  Realm  initialize  require  get  Idp  Configuration  get  Sp  Configuration  build  Encryption  Credential  build  Signing  Configuration  build  Credential  find  Saml  Realms  supports  token  authenticate  build  User  create  Token  Metadata  resolve  Single  Value  Attribute  lookup  User  initialize  Resolver  parse  Http  Metadata  Privileged  H  T  T  P  Metadata  Resolver  fetch  Metadata  parse  File  System  Metadata  resolve  Entity  Descriptor  close  initialise  Resolver  service  Provider  Entity  Id  assertion  Consumer  Service  U  R  L  build  Authentication  Request  build  Logout  Request  build  Logout  Response  get  Signing  Configuration  get  Logout  Handler  File  Listener  on  File  Created  on  File  Deleted  on  File  Changed  Attribute  Parser  get  Attribute  to  String  for  Setting,0,0
120,build  Logout  Response  Url Saml  Realm  Saml  Logout  Request  Handler  Result String  build  Logout  Response  get  Request  Id  get  Redirect  Url  get  Signing  Configuration  get  Relay  State Saml  Realm logger  user  metadata  nameid  value  user  metadata  nameid  format  context  token  data  token  metadata  nameid  value  token  metadata  nameid  format  token  metadata  nameid  qualifier  token  metadata  nameid  sp  qualifier  token  metadata  nameid  sp  provided  id  token  metadata  session  token  metadata  realm  releasables  authenticator  logout  Handler  role  Mapper  idp  Descriptor  service  Provider  name  Id  Policy  force  Authn  use  Single  Logout  populate  User  Metadata  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  delegated  Realms  Privileged  H  T  T  P  Metadata  Resolver  File  Listener  logger  on  Change  Attribute  Parser  name  parser create  Saml  Realm  initialize  require  get  Idp  Configuration  get  Sp  Configuration  build  Encryption  Credential  build  Signing  Configuration  build  Credential  find  Saml  Realms  supports  token  authenticate  build  User  create  Token  Metadata  resolve  Single  Value  Attribute  lookup  User  initialize  Resolver  parse  Http  Metadata  Privileged  H  T  T  P  Metadata  Resolver  fetch  Metadata  parse  File  System  Metadata  resolve  Entity  Descriptor  close  initialise  Resolver  service  Provider  Entity  Id  assertion  Consumer  Service  U  R  L  build  Authentication  Request  build  Logout  Request  build  Logout  Response  get  Signing  Configuration  get  Logout  Handler  File  Listener  on  File  Created  on  File  Deleted  on  File  Changed  Attribute  Parser  get  Attribute  to  String  for  Setting Transport  Saml  Invalidate  Session  Action token  Service  realms Transport  Saml  Invalidate  Session  Action  do  Execute  invalidate  Session  find  And  Invalidate  Tokens  invalidate  Token  Pair  contains  Metadata,1,0
121,prepare  Authentication Saml  Realm  String  Action  Listener  Saml  Prepare  Authentication  Response void  build  Authentication  Request  get  Redirect  Url  get  Signing  Configuration  on  Response  name  get  I  D  on  Failure Transport  Saml  Prepare  Authentication  Action realms Transport  Saml  Prepare  Authentication  Action  do  Execute Saml  Realm logger  user  metadata  nameid  value  user  metadata  nameid  format  context  token  data  token  metadata  nameid  value  token  metadata  nameid  format  token  metadata  nameid  qualifier  token  metadata  nameid  sp  qualifier  token  metadata  nameid  sp  provided  id  token  metadata  session  token  metadata  realm  releasables  authenticator  logout  Handler  role  Mapper  idp  Descriptor  service  Provider  name  Id  Policy  force  Authn  use  Single  Logout  populate  User  Metadata  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  delegated  Realms  Privileged  H  T  T  P  Metadata  Resolver  File  Listener  logger  on  Change  Attribute  Parser  name  parser create  Saml  Realm  initialize  require  get  Idp  Configuration  get  Sp  Configuration  build  Encryption  Credential  build  Signing  Configuration  build  Credential  find  Saml  Realms  supports  token  authenticate  build  User  create  Token  Metadata  resolve  Single  Value  Attribute  lookup  User  initialize  Resolver  parse  Http  Metadata  Privileged  H  T  T  P  Metadata  Resolver  fetch  Metadata  parse  File  System  Metadata  resolve  Entity  Descriptor  close  initialise  Resolver  service  Provider  Entity  Id  assertion  Consumer  Service  U  R  L  build  Authentication  Request  build  Logout  Request  build  Logout  Response  get  Signing  Configuration  get  Logout  Handler  File  Listener  on  File  Created  on  File  Deleted  on  File  Changed  Attribute  Parser  get  Attribute  to  String  for  Setting,0,0
122,prepare  Authentication Saml  Realm  String  Action  Listener  Saml  Prepare  Authentication  Response void  build  Authentication  Request  get  Redirect  Url  get  Signing  Configuration  on  Response  name  get  I  D  on  Failure Saml  Realm logger  user  metadata  nameid  value  user  metadata  nameid  format  context  token  data  token  metadata  nameid  value  token  metadata  nameid  format  token  metadata  nameid  qualifier  token  metadata  nameid  sp  qualifier  token  metadata  nameid  sp  provided  id  token  metadata  session  token  metadata  realm  releasables  authenticator  logout  Handler  role  Mapper  idp  Descriptor  service  Provider  name  Id  Policy  force  Authn  use  Single  Logout  populate  User  Metadata  principal  Attribute  groups  Attribute  dn  Attribute  name  Attribute  mail  Attribute  delegated  Realms  Privileged  H  T  T  P  Metadata  Resolver  File  Listener  logger  on  Change  Attribute  Parser  name  parser create  Saml  Realm  initialize  require  get  Idp  Configuration  get  Sp  Configuration  build  Encryption  Credential  build  Signing  Configuration  build  Credential  find  Saml  Realms  supports  token  authenticate  build  User  create  Token  Metadata  resolve  Single  Value  Attribute  lookup  User  initialize  Resolver  parse  Http  Metadata  Privileged  H  T  T  P  Metadata  Resolver  fetch  Metadata  parse  File  System  Metadata  resolve  Entity  Descriptor  close  initialise  Resolver  service  Provider  Entity  Id  assertion  Consumer  Service  U  R  L  build  Authentication  Request  build  Logout  Request  build  Logout  Response  get  Signing  Configuration  get  Logout  Handler  File  Listener  on  File  Created  on  File  Deleted  on  File  Changed  Attribute  Parser  get  Attribute  to  String  for  Setting Transport  Saml  Prepare  Authentication  Action realms Transport  Saml  Prepare  Authentication  Action  do  Execute,1,0
123,clear  Cache String  Transport  Clear  Realm  Cache  Action void  expire  expire  All Transport  Clear  Realm  Cache  Action realms  authentication  Service Transport  Clear  Realm  Cache  Action  new  Response  new  Node  Request  new  Node  Response  node  Operation  clear  Authentication  Service  Cache Realm logger  config Realm  type  name  order  get  Authentication  Failure  Headers  compare  To  supports  token  authenticate  lookup  User  usage  Stats  to  String  initialize  create,0,0
124,clear  Cache String  Transport  Clear  Realm  Cache  Action void  expire  expire  All Realm logger  config Realm  type  name  order  get  Authentication  Failure  Headers  compare  To  supports  token  authenticate  lookup  User  usage  Stats  to  String  initialize  create Transport  Clear  Realm  Cache  Action realms  authentication  Service Transport  Clear  Realm  Cache  Action  new  Response  new  Node  Request  new  Node  Response  node  Operation  clear  Authentication  Service  Cache,1,1
125,extract  Authentication  Token Grant  Type  Action  Listener  Create  Token  Response  Transport  Create  Token  Action Authentication  Token  get  Username  get  Password  get  Kerberos  Ticket  to  String  decode  get  Decoder  on  Failure Transport  Create  Token  Action default  scope  thread  Pool  token  Service  authentication  Service  security  Context Transport  Create  Token  Action  do  Execute  authenticate  And  Create  Token  clear  Credentials  From  Request  create  Token  extract  Out  Token  get  Response  Scope  Value Create  Token  Request Grant  Type  value  supported  grant  types  grant  Type  username  password  kerberos  Ticket  scope  refresh  Token Grant  Type  get  Value  from  String  Create  Token  Request  Create  Token  Request  Create  Token  Request  validate  validate  Required  Field  validate  Required  Field  validate  Unsupported  Field  set  Grant  Type  set  Username  set  Password  set  Kerberos  Ticket  set  Scope  set  Refresh  Token  get  Grant  Type  get  Username  get  Password  get  Kerberos  Ticket  get  Scope  get  Refresh  Token  write  To,0,0
126,extract  Authentication  Token Grant  Type  Action  Listener  Create  Token  Response  Transport  Create  Token  Action Authentication  Token  get  Username  get  Password  get  Kerberos  Ticket  to  String  decode  get  Decoder  on  Failure Create  Token  Request Grant  Type  value  supported  grant  types  grant  Type  username  password  kerberos  Ticket  scope  refresh  Token Grant  Type  get  Value  from  String  Create  Token  Request  Create  Token  Request  Create  Token  Request  validate  validate  Required  Field  validate  Required  Field  validate  Unsupported  Field  set  Grant  Type  set  Username  set  Password  set  Kerberos  Ticket  set  Scope  set  Refresh  Token  get  Grant  Type  get  Username  get  Password  get  Kerberos  Ticket  get  Scope  get  Refresh  Token  write  To Transport  Create  Token  Action default  scope  thread  Pool  token  Service  authentication  Service  security  Context Transport  Create  Token  Action  do  Execute  authenticate  And  Create  Token  clear  Credentials  From  Request  create  Token  extract  Out  Token  get  Response  Scope  Value,1,1
127,clear  Credentials  From  Request Grant  Type  Create  Token  Request void  close  get  Password  close  get  Kerberos  Ticket Transport  Create  Token  Action default  scope  thread  Pool  token  Service  authentication  Service  security  Context Transport  Create  Token  Action  do  Execute  authenticate  And  Create  Token  create  Token  extract  Out  Token  get  Response  Scope  Value Create  Token  Request Grant  Type  value  supported  grant  types  grant  Type  username  password  kerberos  Ticket  scope  refresh  Token extract  Authentication  Token  Grant  Type  get  Value  from  String  Create  Token  Request  Create  Token  Request  Create  Token  Request  validate  validate  Required  Field  validate  Required  Field  validate  Unsupported  Field  set  Grant  Type  set  Username  set  Password  set  Kerberos  Ticket  set  Scope  set  Refresh  Token  get  Grant  Type  get  Username  get  Password  get  Kerberos  Ticket  get  Scope  get  Refresh  Token  write  To,0,0
128,clear  Credentials  From  Request Grant  Type  Create  Token  Request void  close  get  Password  close  get  Kerberos  Ticket Create  Token  Request Grant  Type  value  supported  grant  types  grant  Type  username  password  kerberos  Ticket  scope  refresh  Token extract  Authentication  Token  Grant  Type  get  Value  from  String  Create  Token  Request  Create  Token  Request  Create  Token  Request  validate  validate  Required  Field  validate  Required  Field  validate  Unsupported  Field  set  Grant  Type  set  Username  set  Password  set  Kerberos  Ticket  set  Scope  set  Refresh  Token  get  Grant  Type  get  Username  get  Password  get  Kerberos  Ticket  get  Scope  get  Refresh  Token  write  To Transport  Create  Token  Action default  scope  thread  Pool  token  Service  authentication  Service  security  Context Transport  Create  Token  Action  do  Execute  authenticate  And  Create  Token  create  Token  extract  Out  Token  get  Response  Scope  Value,1,0
129,grants  Any  Privileges Create  Api  Key  Request boolean  get  Role  Descriptors  is  Empty  get  Role  Descriptors  all  Match  stream  get  Role  Descriptors Transport  Create  Api  Key  Action generator  security  Context Transport  Create  Api  Key  Action  do  Execute Create  Api  Key  Request default  refresh  policy  name  expiration  role  Descriptors  refresh  Policy Create  Api  Key  Request  Create  Api  Key  Request  Create  Api  Key  Request  get  Name  set  Name  get  Expiration  set  Expiration  get  Role  Descriptors  set  Role  Descriptors  get  Refresh  Policy  set  Refresh  Policy  validate  write  To  get  Api  Key  Expiration,0,0
130,grants  Any  Privileges Create  Api  Key  Request boolean  get  Role  Descriptors  is  Empty  get  Role  Descriptors  all  Match  stream  get  Role  Descriptors Create  Api  Key  Request default  refresh  policy  name  expiration  role  Descriptors  refresh  Policy Create  Api  Key  Request  Create  Api  Key  Request  Create  Api  Key  Request  get  Name  set  Name  get  Expiration  set  Expiration  get  Role  Descriptors  set  Role  Descriptors  get  Refresh  Policy  set  Refresh  Policy  validate  write  To  get  Api  Key  Expiration Transport  Create  Api  Key  Action generator  security  Context Transport  Create  Api  Key  Action  do  Execute,1,0
131,ensure  Application  Buffer  Size S  S  L  Driver void  get  Application  Buffer  Size  get  Session  get  S  S  L  Engine  get  Remaining  ensure  Capacity  get  Index  get  Application  Buffer  Size  get  Session  get  S  S  L  Engine S  S  L  Driver empty  buffers  empty  flush  operation  engine  page  Allocator  outbound  Buffer  network  Read  Page  is  Client  Mode  current  Mode  packet  Size  Regular  Mode  handshake  Status  is  Handshaking  Close  Mode  need  To  Send  Close  need  To  Receive  Close S  S  L  Driver  init  renegotiate  get  S  S  L  Engine  get  Outbound  Buffer  read  ready  For  Application  Data  write  initiate  Close  is  Closed  close  unwrap  wrap  wrap  internal  Close  read  write  is  Close  ready  For  Application  Data  mode  Name  start  Handshake  handshake  read  write  is  Close  ready  For  Application  Data  mode  Name  run  Tasks  Close  Mode  Close  Mode  read  write  is  Close  ready  For  Application  Data  mode  Name  is  Close  Done  close  Inbound  And  Swallow  Peer  Did  Not  Close  Exception Inbound  Channel  Buffer page  size  page  mask  page  shift  empty  byte  buffer  array  empty  byte  page  array  page  Allocator  pages  is  Closed  capacity  internal  Index  offset Inbound  Channel  Buffer  allocating  Instance  close  ensure  Capacity  release  slice  Buffers  To  slice  And  Retain  Pages  To  slice  Buffers  From  increment  Index  get  Index  get  Capacity  get  Remaining  num  Pages  page  Index  index  In  Page,0,0
132,ensure  Application  Buffer  Size S  S  L  Driver void  get  Application  Buffer  Size  get  Session  get  S  S  L  Engine  get  Remaining  ensure  Capacity  get  Index  get  Application  Buffer  Size  get  Session  get  S  S  L  Engine Inbound  Channel  Buffer page  size  page  mask  page  shift  empty  byte  buffer  array  empty  byte  page  array  page  Allocator  pages  is  Closed  capacity  internal  Index  offset Inbound  Channel  Buffer  allocating  Instance  close  ensure  Capacity  release  slice  Buffers  To  slice  And  Retain  Pages  To  slice  Buffers  From  increment  Index  get  Index  get  Capacity  get  Remaining  num  Pages  page  Index  index  In  Page S  S  L  Driver empty  buffers  empty  flush  operation  engine  page  Allocator  outbound  Buffer  network  Read  Page  is  Client  Mode  current  Mode  packet  Size  Regular  Mode  handshake  Status  is  Handshaking  Close  Mode  need  To  Send  Close  need  To  Receive  Close S  S  L  Driver  init  renegotiate  get  S  S  L  Engine  get  Outbound  Buffer  read  ready  For  Application  Data  write  initiate  Close  is  Closed  close  unwrap  wrap  wrap  internal  Close  read  write  is  Close  ready  For  Application  Data  mode  Name  start  Handshake  handshake  read  write  is  Close  ready  For  Application  Data  mode  Name  run  Tasks  Close  Mode  Close  Mode  read  write  is  Close  ready  For  Application  Data  mode  Name  is  Close  Done  close  Inbound  And  Swallow  Peer  Did  Not  Close  Exception,1,1
133,validate  Query Client  Action  Listener  Boolean  Pivot void  build  Search  Request  execute  wrap  on  Failure  status  on  Failure  status  status  on  Response  unwrap  Cause  status  on  Failure Pivot default  initial  page  size  test  query  page  size  composite  aggregation  name  logger  config  supports  Incremental  Bucket  Update  cached  Composite  Aggregation Pivot  validate  Config  deduce  Mappings  get  Initial  Page  Size  build  Search  Request  build  Aggregation  build  Incremental  Bucket  Update  Aggregation  initial  Incremental  Bucket  Update  Map  supports  Incremental  Bucket  Update  extract  Results  filter  Buckets  create  Composite  Aggregation  create  Composite  Aggregation  Sources Source  Config query  index  strict  parser  lenient  parser  index  query  Config create  Parser  Source  Config  Source  Config  Source  Config  get  Index  get  Query  Config  is  Valid  requires  Remote  Cluster  write  To  to  X  Content  equals  hash  Code  from  X  Content,0,0
134,validate  Query Client  Action  Listener  Boolean  Pivot void  build  Search  Request  execute  wrap  on  Failure  status  on  Failure  status  status  on  Response  unwrap  Cause  status  on  Failure Source  Config query  index  strict  parser  lenient  parser  index  query  Config create  Parser  Source  Config  Source  Config  Source  Config  get  Index  get  Query  Config  is  Valid  requires  Remote  Cluster  write  To  to  X  Content  equals  hash  Code  from  X  Content Pivot default  initial  page  size  test  query  page  size  composite  aggregation  name  logger  config  supports  Incremental  Bucket  Update  cached  Composite  Aggregation Pivot  validate  Config  deduce  Mappings  get  Initial  Page  Size  build  Search  Request  build  Aggregation  build  Incremental  Bucket  Update  Aggregation  initial  Incremental  Bucket  Update  Map  supports  Incremental  Bucket  Update  extract  Results  filter  Buckets  create  Composite  Aggregation  create  Composite  Aggregation  Sources,1,1
135,should  Replace  Resource X  Content  String  int  Publishable  Http  Resource boolean  convert  To  Map  get  Content  get  Entity  is  Empty  get  get  int  Value Publishable  Http  Resource filter  path  none  filter  path  resource  version  no  body  parameters  resource  version  parameters  get  exists  get  does  not  exist  default  Parameters Publishable  Http  Resource  Publishable  Http  Resource  get  Default  Parameters  do  Check  And  Publish  do  Check  version  Check  For  Resource  check  For  Resource  on  Success  on  Failure  do  Publish  put  Resource  on  Success  on  Failure  delete  Resource  on  Success  on  Failure  always  Replace  Resource  add  Default  Parameters  add  Parameters Response request  Line  host  response  warning  header  pattern  warning  header  date  pattern  warning  header  date  length Response  get  Request  Line  get  Host  get  Status  Line  get  Headers  get  Header  get  Entity  match  Warning  Header  Pattern  By  Prefix  extract  Warning  Value  From  Warning  Header  assert  Warning  Value  get  Warnings  has  Warnings  get  Http  Response  to  String,0,0
136,should  Replace  Resource X  Content  String  int  Publishable  Http  Resource boolean  convert  To  Map  get  Content  get  Entity  is  Empty  get  get  int  Value Response request  Line  host  response  warning  header  pattern  warning  header  date  pattern  warning  header  date  length Response  get  Request  Line  get  Host  get  Status  Line  get  Headers  get  Header  get  Entity  match  Warning  Header  Pattern  By  Prefix  extract  Warning  Value  From  Warning  Header  assert  Warning  Value  get  Warnings  has  Warnings  get  Http  Response  to  String Publishable  Http  Resource filter  path  none  filter  path  resource  version  no  body  parameters  resource  version  parameters  get  exists  get  does  not  exist  default  Parameters Publishable  Http  Resource  Publishable  Http  Resource  get  Default  Parameters  do  Check  And  Publish  do  Check  version  Check  For  Resource  check  For  Resource  on  Success  on  Failure  do  Publish  put  Resource  on  Success  on  Failure  delete  Resource  on  Success  on  Failure  always  Replace  Resource  add  Default  Parameters  add  Parameters,1,1
137,add  Parameters Request  final  final  Map  Stringfinal  String  Stringparameters  String void  entry  Set  add  Parameter  get  Key  get  Value Publishable  Http  Resource filter  path  none  filter  path  resource  version  no  body  parameters  resource  version  parameters  get  exists  get  does  not  exist  default  Parameters Publishable  Http  Resource  Publishable  Http  Resource  get  Default  Parameters  do  Check  And  Publish  do  Check  version  Check  For  Resource  check  For  Resource  on  Success  on  Failure  do  Publish  put  Resource  on  Success  on  Failure  delete  Resource  on  Success  on  Failure  always  Replace  Resource  add  Default  Parameters Request method  endpoint  parameters  entity  options Request  get  Method  get  Endpoint  add  Parameter  get  Parameters  set  Entity  set  Json  Entity  get  Entity  set  Options  set  Options  get  Options  to  String  equals  hash  Code,0,0
138,add  Parameters Request  final  final  Map  Stringfinal  String  Stringparameters  String void  entry  Set  add  Parameter  get  Key  get  Value Request method  endpoint  parameters  entity  options Request  get  Method  get  Endpoint  add  Parameter  get  Parameters  set  Entity  set  Json  Entity  get  Entity  set  Options  set  Options  get  Options  to  String  equals  hash  Code Publishable  Http  Resource filter  path  none  filter  path  resource  version  no  body  parameters  resource  version  parameters  get  exists  get  does  not  exist  default  Parameters Publishable  Http  Resource  Publishable  Http  Resource  get  Default  Parameters  do  Check  And  Publish  do  Check  version  Check  For  Resource  check  For  Resource  on  Success  on  Failure  do  Publish  put  Resource  on  Success  on  Failure  delete  Resource  on  Success  on  Failure  always  Replace  Resource  add  Default  Parameters,1,0
139,should  Replace  Cluster  Alert Response  X  Content  int boolean  convert  To  Map  get  Content  get  Entity  is  Empty  get  get  get  int  Value Cluster  Alert  Http  Resource logger  cluster  alert  version  parameters  license  State  watch  Id  watch Cluster  Alert  Http  Resource  do  Check  do  Publish  is  Watch  Defined  watch  To  Http  Entity Response request  Line  host  response  warning  header  pattern  warning  header  date  pattern  warning  header  date  length Response  get  Request  Line  get  Host  get  Status  Line  get  Headers  get  Header  get  Entity  match  Warning  Header  Pattern  By  Prefix  extract  Warning  Value  From  Warning  Header  assert  Warning  Value  get  Warnings  has  Warnings  get  Http  Response  to  String  should  Replace  Resource,0,0
140,should  Replace  Cluster  Alert Response  X  Content  int boolean  convert  To  Map  get  Content  get  Entity  is  Empty  get  get  get  int  Value Response request  Line  host  response  warning  header  pattern  warning  header  date  pattern  warning  header  date  length Response  get  Request  Line  get  Host  get  Status  Line  get  Headers  get  Header  get  Entity  match  Warning  Header  Pattern  By  Prefix  extract  Warning  Value  From  Warning  Header  assert  Warning  Value  get  Warnings  has  Warnings  get  Http  Response  to  String  should  Replace  Resource Cluster  Alert  Http  Resource logger  cluster  alert  version  parameters  license  State  watch  Id  watch Cluster  Alert  Http  Resource  do  Check  do  Publish  is  Watch  Defined  watch  To  Http  Entity,1,0
141,can  Use  Watcher Response  X  Content boolean  convert  To  Map  get  Content  get  Entity  is  Empty  get  get  get  get Watcher  Exists  Http  Resource logger  watcher  check  parameters  xpack  does  not  exist  cluster  Service  watches Watcher  Exists  Http  Resource  get  Watches  do  Check  check  X  Pack  For  Watcher  do  Publish Response request  Line  host  response  warning  header  pattern  warning  header  date  pattern  warning  header  date  length Response  get  Request  Line  get  Host  get  Status  Line  get  Headers  get  Header  get  Entity  match  Warning  Header  Pattern  By  Prefix  extract  Warning  Value  From  Warning  Header  assert  Warning  Value  get  Warnings  has  Warnings  get  Http  Response  to  String  should  Replace  Resource,0,0
142,can  Use  Watcher Response  X  Content boolean  convert  To  Map  get  Content  get  Entity  is  Empty  get  get  get  get Response request  Line  host  response  warning  header  pattern  warning  header  date  pattern  warning  header  date  length Response  get  Request  Line  get  Host  get  Status  Line  get  Headers  get  Header  get  Entity  match  Warning  Header  Pattern  By  Prefix  extract  Warning  Value  From  Warning  Header  assert  Warning  Value  get  Warnings  has  Warnings  get  Http  Response  to  String  should  Replace  Resource Watcher  Exists  Http  Resource logger  watcher  check  parameters  xpack  does  not  exist  cluster  Service  watches Watcher  Exists  Http  Resource  get  Watches  do  Check  check  X  Pack  For  Watcher  do  Publish,1,0
143,do  Export Collection  Monitoring  Doc  Action  Listener  Void  Exporters void  add  set  flush  wrap  get  on  Response  on  Failure  get  get  add  Suppressed  get  on  Failure Exporters logger  settings  factories  exporters  cluster  Service  license  State  thread  Context  Accumulating  Export  Bulk  Action  Listener  name  index  Position  accumulated  Bulks  count  Down  delegate  thread  Context Exporters  set  Exporters  Setting  do  Start  do  Stop  do  Close  get  Exporter  get  Enabled  Exporters  close  Exporters  init  Exporters  wrap  Export  Bulk  export  get  Settings  Accumulating  Export  Bulk  Action  Listener  on  Response  on  Failure  delegate  If  Complete Export  Bulk name  thread  Context  closed  Compound  bulks Export  Bulk  get  Name  add  do  Add  flush  do  Flush  Compound  do  Add  do  Flush  new  Exception  Handling  Listener,0,0
144,do  Export Collection  Monitoring  Doc  Action  Listener  Void  Exporters void  add  set  flush  wrap  get  on  Response  on  Failure  get  get  add  Suppressed  get  on  Failure Export  Bulk name  thread  Context  closed  Compound  bulks Export  Bulk  get  Name  add  do  Add  flush  do  Flush  Compound  do  Add  do  Flush  new  Exception  Handling  Listener Exporters logger  settings  factories  exporters  cluster  Service  license  State  thread  Context  Accumulating  Export  Bulk  Action  Listener  name  index  Position  accumulated  Bulks  count  Down  delegate  thread  Context Exporters  set  Exporters  Setting  do  Start  do  Stop  do  Close  get  Exporter  get  Enabled  Exporters  close  Exporters  init  Exporters  wrap  Export  Bulk  export  get  Settings  Accumulating  Export  Bulk  Action  Listener  on  Response  on  Failure  delegate  If  Complete,1,1
145,handle  Get Rest  Request  Rest  Deprecation  Info  Action Base  Rest  Handler  Rest  Channel  Consumer  split  String  By  Comma  To  Array  param  execute Rest  Deprecation  Info  Action  routes  get  Name  prepare  Request Node  Client actions  task  Manager  local  Node  Id  remote  Cluster  Service Node  Client  initialize  close  do  Execute  execute  Locally  execute  Locally  get  Local  Node  Id  transport  Action  get  Remote  Cluster  Client,0,0
146,handle  Get Rest  Request  Rest  Deprecation  Info  Action Base  Rest  Handler  Rest  Channel  Consumer  split  String  By  Comma  To  Array  param  execute Node  Client actions  task  Manager  local  Node  Id  remote  Cluster  Service Node  Client  initialize  close  do  Execute  execute  Locally  execute  Locally  get  Local  Node  Id  transport  Action  get  Remote  Cluster  Client Rest  Deprecation  Info  Action  routes  get  Name  prepare  Request,1,1
147,handle  Get Rest  Request  Rest  Deprecation  Info  Action Base  Rest  Handler  Rest  Channel  Consumer  split  String  By  Comma  To  Array  param  execute Rest  Deprecation  Info  Action  routes  get  Name  prepare  Request Rest  Request tchar  pattern  request  Id  Generator  x  Content  Registry  params  headers  raw  Path  consumed  Params  x  Content  Type  http  Channel  http  Request  content  Consumed  request  Id  Method  Content  Type  Header  Exception  Bad  Parameter  Exception is  Content  Consumed  Rest  Request  Rest  Request  Rest  Request  ensure  Safe  Buffers  request  params  path  request  Without  Parameters  unrecognized  method  uri  raw  Path  path  has  Content  content  Length  content  required  Content  header  get  All  Header  Values  get  Headers  get  Request  Id  get  X  Content  Type  get  Http  Channel  get  Http  Request  has  Param  param  param  params  consumed  Params  unconsumed  Params  param  As  Float  param  As  Int  param  As  Long  param  As  Boolean  param  As  Boolean  param  As  Time  param  As  Size  param  As  String  Array  param  As  String  Array  Or  Empty  If  All  get  X  Content  Registry  content  Parser  apply  Content  Parser  has  Content  Or  Source  Param  content  Or  Source  Param  Parser  with  Content  Or  Source  Param  Parser  Or  Null  content  Or  Source  Param  parse  Content  Type  Content  Type  Header  Exception  Bad  Parameter  Exception,0,0
148,handle  Get Rest  Request  Rest  Deprecation  Info  Action Base  Rest  Handler  Rest  Channel  Consumer  split  String  By  Comma  To  Array  param  execute Rest  Request tchar  pattern  request  Id  Generator  x  Content  Registry  params  headers  raw  Path  consumed  Params  x  Content  Type  http  Channel  http  Request  content  Consumed  request  Id  Method  Content  Type  Header  Exception  Bad  Parameter  Exception is  Content  Consumed  Rest  Request  Rest  Request  Rest  Request  ensure  Safe  Buffers  request  params  path  request  Without  Parameters  unrecognized  method  uri  raw  Path  path  has  Content  content  Length  content  required  Content  header  get  All  Header  Values  get  Headers  get  Request  Id  get  X  Content  Type  get  Http  Channel  get  Http  Request  has  Param  param  param  params  consumed  Params  unconsumed  Params  param  As  Float  param  As  Int  param  As  Long  param  As  Boolean  param  As  Boolean  param  As  Time  param  As  Size  param  As  String  Array  param  As  String  Array  Or  Empty  If  All  get  X  Content  Registry  content  Parser  apply  Content  Parser  has  Content  Or  Source  Param  content  Or  Source  Param  Parser  with  Content  Or  Source  Param  Parser  Or  Null  content  Or  Source  Param  parse  Content  Type  Content  Type  Header  Exception  Bad  Parameter  Exception Rest  Deprecation  Info  Action  routes  get  Name  prepare  Request,1,0
149,send  Final  Response Get  Async  Search  Action  Request  long  Action  Listener  Async  Search  Response  Transport  Get  Async  Search  Action void  get  Expiration  Time  on  Failure  get  Id  on  Response Transport  Get  Async  Search  Action logger  cluster  Service  transport  Service  store Transport  Get  Async  Search  Action  do  Execute  get  Search  Response  From  Task  on  Response  on  Failure  get  Search  Response  From  Index  on  Response  on  Failure Async  Search  Response id  search  Response  error  is  Running  is  Partial  start  Time  Millis  expiration  Time  Millis Async  Search  Response  Async  Search  Response  Async  Search  Response  write  To  clone  get  Id  get  Search  Response  get  Failure  is  Partial  is  Running  get  Start  Time  get  Expiration  Time  with  Expiration  Time  status  to  X  Content,0,0
150,send  Final  Response Get  Async  Search  Action  Request  long  Action  Listener  Async  Search  Response  Transport  Get  Async  Search  Action void  get  Expiration  Time  on  Failure  get  Id  on  Response Async  Search  Response id  search  Response  error  is  Running  is  Partial  start  Time  Millis  expiration  Time  Millis Async  Search  Response  Async  Search  Response  Async  Search  Response  write  To  clone  get  Id  get  Search  Response  get  Failure  is  Partial  is  Running  get  Start  Time  get  Expiration  Time  with  Expiration  Time  status  to  X  Content Transport  Get  Async  Search  Action logger  cluster  Service  transport  Service  store Transport  Get  Async  Search  Action  do  Execute  get  Search  Response  From  Task  on  Response  on  Failure  get  Search  Response  From  Index  on  Response  on  Failure,1,1
151,parse  Url Saml  Service  Provider  Factory url acs  acs set  Entity  Id Saml  Service  Provider  Factory defaults Saml  Service  Provider  Factory  build  Service  Provider  build  Privileges Saml  Service  Provider  Document sign  authn  sign  logout  allowed  sign  messages  Privileges  resource  role  Patterns  Attribute  Names  principal  email  name  roles  Certificates  service  Provider  Signing  identity  Provider  Signing  identity  Provider  Metadata  Signing  doc  Id  name  entity  Id  acs  name  Id  Format  enabled  created  last  Modified  sign  Messages  authentication  Expiry  Millis  privileges  attribute  Names  certificates  doc  parser  privileges  parser  attributes  parser  certificates  parser  null  consumer  name  entity  id  acs  enabled  name  id  sign  msgs  authn  expiry  created  date  last  modified  privileges  attributes  certificates  resource  roles  principal  email  name  roles  sp  signing  idp  signing  idp  metadata set  Resource  set  Role  Patterns  equals  hash  Code  set  Principal  set  Email  set  Name  set  Roles  equals  hash  Code  set  Service  Provider  Signing  set  Identity  Provider  Signing  set  Identity  Provider  Metadata  Signing  set  Service  Provider  X  Signing  Certificates  get  Service  Provider  X  Signing  Certificates  set  Identity  Provider  X  Signing  Certificates  get  Identity  Provider  X  Signing  Certificates  set  Identity  Provider  X  Metadata  Signing  Certificates  get  Identity  Provider  X  Metadata  Signing  Certificates  encode  Certificates  decode  Certificates  decode  Certificate  equals  hash  Code  Saml  Service  Provider  Document  Saml  Service  Provider  Document  write  To  get  Doc  Id  set  Doc  Id  set  Name  set  Entity  Id  set  Acs  set  Enabled  set  Created  set  Last  Modified  set  Created  Millis  set  Last  Modified  Millis  set  Name  Id  Format  set  Sign  Messages  set  Authentication  Expiry  Millis  set  Authentication  Expiry  get  Authentication  Expiry  equals  hash  Code  from  X  Content  validate  to  X  Content  to  String,0,0
152,parse  Url Saml  Service  Provider  Factory url acs  acs set  Entity  Id Saml  Service  Provider  Document sign  authn  sign  logout  allowed  sign  messages  Privileges  resource  role  Patterns  Attribute  Names  principal  email  name  roles  Certificates  service  Provider  Signing  identity  Provider  Signing  identity  Provider  Metadata  Signing  doc  Id  name  entity  Id  acs  name  Id  Format  enabled  created  last  Modified  sign  Messages  authentication  Expiry  Millis  privileges  attribute  Names  certificates  doc  parser  privileges  parser  attributes  parser  certificates  parser  null  consumer  name  entity  id  acs  enabled  name  id  sign  msgs  authn  expiry  created  date  last  modified  privileges  attributes  certificates  resource  roles  principal  email  name  roles  sp  signing  idp  signing  idp  metadata set  Resource  set  Role  Patterns  equals  hash  Code  set  Principal  set  Email  set  Name  set  Roles  equals  hash  Code  set  Service  Provider  Signing  set  Identity  Provider  Signing  set  Identity  Provider  Metadata  Signing  set  Service  Provider  X  Signing  Certificates  get  Service  Provider  X  Signing  Certificates  set  Identity  Provider  X  Signing  Certificates  get  Identity  Provider  X  Signing  Certificates  set  Identity  Provider  X  Metadata  Signing  Certificates  get  Identity  Provider  X  Metadata  Signing  Certificates  encode  Certificates  decode  Certificates  decode  Certificate  equals  hash  Code  Saml  Service  Provider  Document  Saml  Service  Provider  Document  write  To  get  Doc  Id  set  Doc  Id  set  Name  set  Entity  Id  set  Acs  set  Enabled  set  Created  set  Last  Modified  set  Created  Millis  set  Last  Modified  Millis  set  Name  Id  Format  set  Sign  Messages  set  Authentication  Expiry  Millis  set  Authentication  Expiry  get  Authentication  Expiry  equals  hash  Code  from  X  Content  validate  to  X  Content  to  String Saml  Service  Provider  Factory defaults Saml  Service  Provider  Factory  build  Service  Provider  build  Privileges,1,1
153,derive  Document  Id Saml  Service  Provider  Document String  digest  sha  get  Bytes  encode  To  String  without  Padding  get  Url  Encoder Transport  Put  Saml  Service  Provider  Action logger  index  identity  Provider  clock Transport  Put  Saml  Service  Provider  Action  Transport  Put  Saml  Service  Provider  Action  do  Execute  write  Document Saml  Service  Provider  Document sign  authn  sign  logout  allowed  sign  messages  Privileges  resource  role  Patterns  Attribute  Names  principal  email  name  roles  Certificates  service  Provider  Signing  identity  Provider  Signing  identity  Provider  Metadata  Signing  doc  Id  name  entity  Id  acs  name  Id  Format  enabled  created  last  Modified  sign  Messages  authentication  Expiry  Millis  privileges  attribute  Names  certificates  doc  parser  privileges  parser  attributes  parser  certificates  parser  null  consumer  name  entity  id  acs  enabled  name  id  sign  msgs  authn  expiry  created  date  last  modified  privileges  attributes  certificates  resource  roles  principal  email  name  roles  sp  signing  idp  signing  idp  metadata parse  Url  set  Resource  set  Role  Patterns  equals  hash  Code  set  Principal  set  Email  set  Name  set  Roles  equals  hash  Code  set  Service  Provider  Signing  set  Identity  Provider  Signing  set  Identity  Provider  Metadata  Signing  set  Service  Provider  X  Signing  Certificates  get  Service  Provider  X  Signing  Certificates  set  Identity  Provider  X  Signing  Certificates  get  Identity  Provider  X  Signing  Certificates  set  Identity  Provider  X  Metadata  Signing  Certificates  get  Identity  Provider  X  Metadata  Signing  Certificates  encode  Certificates  decode  Certificates  decode  Certificate  equals  hash  Code  Saml  Service  Provider  Document  Saml  Service  Provider  Document  write  To  get  Doc  Id  set  Doc  Id  set  Name  set  Entity  Id  set  Acs  set  Enabled  set  Created  set  Last  Modified  set  Created  Millis  set  Last  Modified  Millis  set  Name  Id  Format  set  Sign  Messages  set  Authentication  Expiry  Millis  set  Authentication  Expiry  get  Authentication  Expiry  equals  hash  Code  from  X  Content  validate  to  X  Content  to  String,0,0
154,derive  Document  Id Saml  Service  Provider  Document String  digest  sha  get  Bytes  encode  To  String  without  Padding  get  Url  Encoder Saml  Service  Provider  Document sign  authn  sign  logout  allowed  sign  messages  Privileges  resource  role  Patterns  Attribute  Names  principal  email  name  roles  Certificates  service  Provider  Signing  identity  Provider  Signing  identity  Provider  Metadata  Signing  doc  Id  name  entity  Id  acs  name  Id  Format  enabled  created  last  Modified  sign  Messages  authentication  Expiry  Millis  privileges  attribute  Names  certificates  doc  parser  privileges  parser  attributes  parser  certificates  parser  null  consumer  name  entity  id  acs  enabled  name  id  sign  msgs  authn  expiry  created  date  last  modified  privileges  attributes  certificates  resource  roles  principal  email  name  roles  sp  signing  idp  signing  idp  metadata parse  Url  set  Resource  set  Role  Patterns  equals  hash  Code  set  Principal  set  Email  set  Name  set  Roles  equals  hash  Code  set  Service  Provider  Signing  set  Identity  Provider  Signing  set  Identity  Provider  Metadata  Signing  set  Service  Provider  X  Signing  Certificates  get  Service  Provider  X  Signing  Certificates  set  Identity  Provider  X  Signing  Certificates  get  Identity  Provider  X  Signing  Certificates  set  Identity  Provider  X  Metadata  Signing  Certificates  get  Identity  Provider  X  Metadata  Signing  Certificates  encode  Certificates  decode  Certificates  decode  Certificate  equals  hash  Code  Saml  Service  Provider  Document  Saml  Service  Provider  Document  write  To  get  Doc  Id  set  Doc  Id  set  Name  set  Entity  Id  set  Acs  set  Enabled  set  Created  set  Last  Modified  set  Created  Millis  set  Last  Modified  Millis  set  Name  Id  Format  set  Sign  Messages  set  Authentication  Expiry  Millis  set  Authentication  Expiry  get  Authentication  Expiry  equals  hash  Code  from  X  Content  validate  to  X  Content  to  String Transport  Put  Saml  Service  Provider  Action logger  index  identity  Provider  clock Transport  Put  Saml  Service  Provider  Action  Transport  Put  Saml  Service  Provider  Action  do  Execute  write  Document,1,0
155,build  Result Service  Provider  Privileges  User  Privilege  Resolver User  Privilege  Resolver  User  Privileges  get  get  Application  Privileges  get  Application  Name  is  Empty  no  Access  get  Username  collect  flat  Map  filter  map  map  filter  flat  Map  map  filter  stream  equals  get  Resource  get  Resource  entry  Set  get  Privileges  get  Role  Mapping  to  Unmodifiable  Set  is  Empty  get  Username User  Privilege  Resolver User  Privileges  principal  has  Access  roles  logger  client  security  Context  actions  Resolver User  Privileges  to  String  no  Access  User  Privilege  Resolver  resolve  build  Resource  Privilege Has  Privileges  Response username  complete  Match  cluster  index  application Has  Privileges  Response  Has  Privileges  Response  Has  Privileges  Response  sorted  get  Username  is  Complete  Match  get  Cluster  Privileges  get  Index  Privileges  get  Application  Privileges  equals  hash  Code  read  Resource  Privileges  write  To  write  Resource  Privileges  to  String  to  X  Content  append  Resources,0,0
156,build  Result Service  Provider  Privileges  User  Privilege  Resolver User  Privilege  Resolver  User  Privileges  get  get  Application  Privileges  get  Application  Name  is  Empty  no  Access  get  Username  collect  flat  Map  filter  map  map  filter  flat  Map  map  filter  stream  equals  get  Resource  get  Resource  entry  Set  get  Privileges  get  Role  Mapping  to  Unmodifiable  Set  is  Empty  get  Username Has  Privileges  Response username  complete  Match  cluster  index  application Has  Privileges  Response  Has  Privileges  Response  Has  Privileges  Response  sorted  get  Username  is  Complete  Match  get  Cluster  Privileges  get  Index  Privileges  get  Application  Privileges  equals  hash  Code  read  Resource  Privileges  write  To  write  Resource  Privileges  to  String  to  X  Content  append  Resources User  Privilege  Resolver User  Privileges  principal  has  Access  roles  logger  client  security  Context  actions  Resolver User  Privileges  to  String  no  Access  User  Privilege  Resolver  resolve  build  Resource  Privilege,1,1
157,build  Result Service  Provider  Privileges  User  Privilege  Resolver User  Privilege  Resolver  User  Privileges  get  get  Application  Privileges  get  Application  Name  is  Empty  no  Access  get  Username  collect  flat  Map  filter  map  map  filter  flat  Map  map  filter  stream  equals  get  Resource  get  Resource  entry  Set  get  Privileges  get  Role  Mapping  to  Unmodifiable  Set  is  Empty  get  Username User  Privilege  Resolver User  Privileges  principal  has  Access  roles  logger  client  security  Context  actions  Resolver User  Privileges  to  String  no  Access  User  Privilege  Resolver  resolve  build  Resource  Privilege Service  Provider  Privileges application  Name  resource  role  Mapping Service  Provider  Privileges  get  Application  Name  get  Resource  get  Role  Mapping,0,0
158,build  Result Service  Provider  Privileges  User  Privilege  Resolver User  Privilege  Resolver  User  Privileges  get  get  Application  Privileges  get  Application  Name  is  Empty  no  Access  get  Username  collect  flat  Map  filter  map  map  filter  flat  Map  map  filter  stream  equals  get  Resource  get  Resource  entry  Set  get  Privileges  get  Role  Mapping  to  Unmodifiable  Set  is  Empty  get  Username Service  Provider  Privileges application  Name  resource  role  Mapping Service  Provider  Privileges  get  Application  Name  get  Resource  get  Role  Mapping User  Privilege  Resolver User  Privileges  principal  has  Access  roles  logger  client  security  Context  actions  Resolver User  Privileges  to  String  no  Access  User  Privilege  Resolver  resolve  build  Resource  Privilege,1,0
159,add  Argument  Node Expression  Node  Map  Initialization  Node void  add  get  Key  Nodes  add  get  Value  Nodes Map  Initialization  Node key  Nodes  value  Nodes  constructor  method get  Key  Node  get  Value  Node  get  Arguments  Size  get  Key  Nodes  get  Value  Nodes  set  Constructor  get  Constructor  set  Method  get  Method  write Expression  Node expression  Type set  Expression  Type  get  Expression  Type  get  Expression  Canonical  Type  Name,0,0
160,add  Argument  Node Expression  Node  Map  Initialization  Node void  add  get  Key  Nodes  add  get  Value  Nodes Expression  Node expression  Type set  Expression  Type  get  Expression  Type  get  Expression  Canonical  Type  Name Map  Initialization  Node key  Nodes  value  Nodes  constructor  method get  Key  Node  get  Value  Node  get  Arguments  Size  get  Key  Nodes  get  Value  Nodes  set  Constructor  get  Constructor  set  Method  get  Method  write,1,1
161,build  Postfix  Chain Painless  Parser  Postdot  Context  List  Painless  Parser  Postfix  Context  Walker A  Expression  visit  Postdot  visit  Postfix Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node A  Expression  get  Child  If  analyze  analyze  cast,0,0
162,build  Postfix  Chain Painless  Parser  Postdot  Context  List  Painless  Parser  Postfix  Context  Walker A  Expression  visit  Postdot  visit  Postfix A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node A  Expression  get  Child  If  analyze  analyze  cast Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref,1,1
163,visit  Postfix Postfix  Context A  Node  create  Error  location Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast,0,0
164,visit  Postfix Postfix  Context A  Node  create  Error  location A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref,1,0
165,visit  Postdot Postdot  Context A  Node  create  Error  location Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast,0,0
166,visit  Postdot Postdot  Context A  Node  create  Error  location A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref,1,0
167,visit  Fieldaccess Fieldaccess  Context A  Node  create  Error  location Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast,0,0
168,visit  Fieldaccess Fieldaccess  Context A  Node  create  Error  location A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Braceaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref,1,0
169,visit  Braceaccess Braceaccess  Context A  Node  create  Error  location Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast,0,0
170,visit  Braceaccess Braceaccess  Context A  Node  create  Error  location A  Expression Input  read  write  expected  explicit  internal  Output  actual  is  Static  Type  partial  Canonical  Type  Name  is  Def  Optimized  expression  Node build  Postfix  Chain  A  Expression  get  Child  If  analyze  analyze  cast Walker script  Class  Info  source  settings  source  Name build  Painless  Tree  Walker  build  Antlr  Tree  setup  Picky  syntax  Error  location  location  visit  Source  visit  Function  visit  Parameters  visit  Statement  visit  If  visit  While  visit  Do  visit  For  visit  Each  visit  Ineach  visit  Decl  visit  Continue  visit  Break  visit  Return  visit  Try  visit  Throw  visit  Expr  visit  Trailer  visit  Block  visit  Empty  visit  Initializer  visit  Afterthought  visit  Declaration  visit  Decltype  visit  Type  visit  Declvar  visit  Trap  visit  Single  visit  Binary  visit  Comp  visit  Instanceof  visit  Bool  visit  Elvis  visit  Nonconditional  visit  Conditional  visit  Assignment  visit  Pre  visit  Addsub  visit  Notaddsub  visit  Read  visit  Post  visit  Not  visit  Cast  visit  Primordefcast  visit  Refcast  visit  Primordefcasttype  visit  Refcasttype  visit  Dynamic  visit  Newarray  visit  Precedence  visit  Numeric  visit  True  visit  False  visit  Null  visit  String  visit  Regex  visit  Listinit  visit  Mapinit  visit  Variable  visit  Calllocal  visit  Newobject  visit  Postfix  visit  Postfix  visit  Postdot  visit  Postdot  visit  Callinvoke  visit  Callinvoke  visit  Fieldaccess  visit  Fieldaccess  visit  Braceaccess  visit  Newstandardarray  visit  Newinitializedarray  visit  Listinitializer  visit  Mapinitializer  visit  Maptoken  visit  Arguments  collect  Arguments  visit  Argument  visit  Lambda  visit  Lamtype  visit  Classfuncref  visit  Constructorfuncref  visit  Localfuncref,1,0
171,write  Debug  Info Method  Writer void  visit  Label  visit  Line  Number  get  Offset Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name,0,0
172,write  Debug  Info Method  Writer void  visit  Label  visit  Line  Number  get  Offset Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call,1,1
173,write  Loop  Counter int  int  Location void   Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name  write  Debug  Info,0,0
174,write  Loop  Counter int  int  Location void   Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name  write  Debug  Info Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call,1,0
175,write  Dynamic  Binary  Instruction Location  Class  Class  Class  Operation  int void  get  Method  Type  get  Type  get  Type  get  Type  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  is  Primitive  is  Primitive  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  create  Error Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name  write  Debug  Info,0,0
176,write  Dynamic  Binary  Instruction Location  Class  Class  Class  Operation  int void  get  Method  Type  get  Type  get  Type  get  Type  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  is  Primitive  is  Primitive  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  invoke  Def  Call  create  Error Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name  write  Debug  Info Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call,1,0
177,write  Binary  Instruction Location  Class  Operation void  create  Error  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  create  Error Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name  write  Debug  Info,0,0
178,write  Binary  Instruction Location  Class  Operation void  create  Error  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  math  get  Type  create  Error Location source  Name  offset  max  name  length Location  get  Source  Name  get  Offset  create  Error  compute  Source  Name  write  Debug  Info Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Method  Call  invoke  Lambda  Call,1,0
179,invoke  Method  Call Painless  Method void  get  Type  get  Declaring  Class  get  Method  is  Static  get  Modifiers  is  Interface  get  Declaring  Class  visit  Method  Insn  get  Internal  Name  get  Name  get  Descriptor  invoke  Static  is  Interface  get  Declaring  Class  invoke  Interface  invoke  Virtual Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Lambda  Call Painless  Method java  Method  target  Class  return  Type  type  Parameters  method  Handle  method  Type  annotations Painless  Method  equals  hash  Code,0,0
180,invoke  Method  Call Painless  Method void  get  Type  get  Declaring  Class  get  Method  is  Static  get  Modifiers  is  Interface  get  Declaring  Class  visit  Method  Insn  get  Internal  Name  get  Name  get  Descriptor  invoke  Static  is  Interface  get  Declaring  Class  invoke  Interface  invoke  Virtual Painless  Method java  Method  target  Class  return  Type  type  Parameters  method  Handle  method  Type  annotations Painless  Method  equals  hash  Code Method  Writer statements  settings  string  Concat  Args Method  Writer  write  Statement  Offset  write  Loop  Counter  write  Cast  write  Cast  box  get  Type  write  New  Strings  write  Append  Strings  write  To  Strings  write  Dynamic  Binary  Instruction  write  Binary  Instruction  write  Dup  write  Pop  end  Method  visit  End  invoke  Def  Call  invoke  Lambda  Call,1,0
181,write  Needs  Methods Class  Set  String  Painless  Script  Engine void length get  Methods  starts  With  get  Name  equals  get  Return  Type  get  Parameter  Types  get  Name  substring  to  Lower  Case  char  At  substring  get  Name  to  Method  Descriptor  String  method  Type  visit  Method  get  Name  get  Descriptor  visit  Code  push  contains  return  Value  end  Method Painless  Script  Engine name  compilation  context  default  Compiler  Settings  contexts  To  Compilers  contexts  To  Lookups Painless  Script  Engine  get  Contexts  To  Lookups  get  Type  compile  run  get  Supported  Contexts  generate  Stateful  Factory  generate  Factory  compile  run  build  Compiler  Settings  convert  To  Script  Exception  get  Previous  Statement  get  Next  Statement Class  Writer compiler  Settings  statements  class  Writer  class  Visitor build  Access  Class  Writer  get  Class  Visitor  new  Method  Writer  close  get  Class  Bytes,0,0
182,write  Needs  Methods Class  Set  String  Painless  Script  Engine void length get  Methods  starts  With  get  Name  equals  get  Return  Type  get  Parameter  Types  get  Name  substring  to  Lower  Case  char  At  substring  get  Name  to  Method  Descriptor  String  method  Type  visit  Method  get  Name  get  Descriptor  visit  Code  push  contains  return  Value  end  Method Class  Writer compiler  Settings  statements  class  Writer  class  Visitor build  Access  Class  Writer  get  Class  Visitor  new  Method  Writer  close  get  Class  Bytes Painless  Script  Engine name  compilation  context  default  Compiler  Settings  contexts  To  Compilers  contexts  To  Lookups Painless  Script  Engine  get  Contexts  To  Lookups  get  Type  compile  run  get  Supported  Contexts  generate  Stateful  Factory  generate  Factory  compile  run  build  Compiler  Settings  convert  To  Script  Exception  get  Previous  Statement  get  Next  Statement,1,1
183,build  Path Blob  Path url path to  Array  path U  R  L  Blob  Store path  buffer  Size  In  Bytes U  R  L  Blob  Store  to  String  path  buffer  Size  In  Bytes  blob  Container  close Blob  Path separator  paths Blob  Path  clean  Path  Blob  Path  iterator  to  Array  add  build  As  String  parent  to  String,0,0
184,build  Path Blob  Path url path to  Array  path Blob  Path separator  paths Blob  Path  clean  Path  Blob  Path  iterator  to  Array  add  build  As  String  parent  to  String U  R  L  Blob  Store path  buffer  Size  In  Bytes U  R  L  Blob  Store  to  String  path  buffer  Size  In  Bytes  blob  Container  close,1,0
185,convert  Settings Settings Map  String  put  get  put  get  put  get  put  get Min  Hash  Token  Filter  Factory min  Hash  Filter  Factory Min  Hash  Token  Filter  Factory  create Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String,0,0
186,convert  Settings Settings Map  String  put  get  put  get  put  get  put  get Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String Min  Hash  Token  Filter  Factory min  Hash  Filter  Factory Min  Hash  Token  Filter  Factory  create,1,0
187,get  Flag int  Settings  String  boolean int  get  As  Boolean  compile Word  Delimiter  Token  Filter  Factory char  Type  Table  flags  proto  Words  type  Pattern Word  Delimiter  Token  Filter  Factory  create  get  Synonym  Filter  parse  Types  parse  Type  parse  String  breaks  Fast  Vector  Highlighter Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String,0,0
188,get  Flag int  Settings  String  boolean int  get  As  Boolean  compile Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String Word  Delimiter  Token  Filter  Factory char  Type  Table  flags  proto  Words  type  Pattern Word  Delimiter  Token  Filter  Factory  create  get  Synonym  Filter  parse  Types  parse  Type  parse  String  breaks  Fast  Vector  Highlighter,1,0
189,get  Flag int  Settings  String  boolean int  get  As  Boolean Word  Delimiter  Graph  Token  Filter  Factory char  Type  Table  flags  proto  Words  adjust  Offsets Word  Delimiter  Graph  Token  Filter  Factory  create  get  Synonym  Filter Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String,0,0
190,get  Flag int  Settings  String  boolean int  get  As  Boolean Settings empty  settings  secure  Settings  first  Level  Names  keys  Deprecation  Logger  Holder  deprecation  Logger  format  params  Builder  empty  settings  map  secure  Settings  Filtered  Map  delegate  filter  prefix  size  Prefixed  Secure  Settings  delegate  add  Prefix  remove  Prefix  key  Predicate  setting  Names Settings  get  Secure  Settings  get  As  Structured  Map  process  Setting  convert  Maps  To  Arrays  get  By  Prefix  filter  get  As  Settings  get  get  get  As  Float  get  As  Double  get  As  Int  get  As  Long  has  Value  setup  Highlighters  get  As  Boolean  get  As  Time  get  As  Bytes  Size  get  As  Memory  get  As  List  get  As  List  get  As  List  get  Groups  get  Groups  get  Groups  Internal  get  As  Groups  get  As  Version  names  to  Delimited  String  equals  hash  Code  read  Settings  From  Stream  write  Settings  To  Stream  builder  to  X  Content  from  X  Content  from  X  Content  from  X  Content  validate  Value  is  Empty  size  key  Set  Builder  keys  remove  get  get  Secure  Settings  set  Secure  Settings  put  put  put  put  put  put  put  copy  copy  put  Null  put  put  put  put  put  put  put  put  put  List  put  List  put  put  process  Legacy  Lists  load  From  Source  load  From  Path  load  From  Stream  put  Properties  replace  Property  Placeholders  replace  Property  Placeholders  resolve  Placeholder  should  Ignore  Missing  should  Remove  Missing  Placeholder  normalize  Prefix  build  entry  Set  Filtered  Map  get  contains  Key  size  Prefixed  Secure  Settings  is  Loaded  get  Setting  Names  get  String  get  File  get  S  H  A  Digest  close  to  String  to  String Word  Delimiter  Graph  Token  Filter  Factory char  Type  Table  flags  proto  Words  adjust  Offsets Word  Delimiter  Graph  Token  Filter  Factory  create  get  Synonym  Filter,1,0
191,get  Has  Privileges  Response Authentication  boolean  Custom  Authorization  Engine Has  Privileges  Response  cluster  Privileges  put  index  Privileges  get  Indices  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  collect  map  stream  application  Privileges  to  Set  application  Privileges  equals  get  Application  get  Resources  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  put  values  principal  get  User  values Custom  Authorization  Engine Custom  Authorization  Info  roles  authenticated  Authz  Info resolve  Authorization  Info  authorize  Run  As  authorize  Cluster  Action  authorize  Index  Action  load  Authorized  Indices  validate  Index  Permissions  Are  Subset  check  Privileges  get  User  Privileges  get  User  Privileges  Response  Custom  Authorization  Info  as  Map  get  Authenticated  User  Authorization  Info  is  Superuser Authentication user  authenticated  By  looked  Up  By  version  type  metadata  Realm  Ref  node  Name  name  type  Authentication  Type Authentication  Authentication  Authentication  Authentication  get  User  get  Authenticated  By  get  Looked  Up  By  get  Source  Realm  get  Version  get  Authentication  Type  get  Metadata  encode  write  To  equals  hash  Code  to  X  Content  to  X  Content  Fragment  to  String  Realm  Ref  Realm  Ref  write  To  get  Node  Name  get  Name  get  Type  equals  hash  Code  to  String,0,0
192,get  Has  Privileges  Response Authentication  boolean  Custom  Authorization  Engine Has  Privileges  Response  cluster  Privileges  put  index  Privileges  get  Indices  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  collect  map  stream  application  Privileges  to  Set  application  Privileges  equals  get  Application  get  Resources  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  put  values  principal  get  User  values Authentication user  authenticated  By  looked  Up  By  version  type  metadata  Realm  Ref  node  Name  name  type  Authentication  Type Authentication  Authentication  Authentication  Authentication  get  User  get  Authenticated  By  get  Looked  Up  By  get  Source  Realm  get  Version  get  Authentication  Type  get  Metadata  encode  write  To  equals  hash  Code  to  X  Content  to  X  Content  Fragment  to  String  Realm  Ref  Realm  Ref  write  To  get  Node  Name  get  Name  get  Type  equals  hash  Code  to  String Custom  Authorization  Engine Custom  Authorization  Info  roles  authenticated  Authz  Info resolve  Authorization  Info  authorize  Run  As  authorize  Cluster  Action  authorize  Index  Action  load  Authorized  Indices  validate  Index  Permissions  Are  Subset  check  Privileges  get  User  Privileges  get  User  Privileges  Response  Custom  Authorization  Info  as  Map  get  Authenticated  User  Authorization  Info  is  Superuser,1,0
193,get  Has  Privileges  Response Authentication  boolean  Custom  Authorization  Engine Has  Privileges  Response  cluster  Privileges  put  index  Privileges  get  Indices  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  collect  map  stream  application  Privileges  to  Set  application  Privileges  equals  get  Application  get  Resources  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  put  values  principal  get  User  values Custom  Authorization  Engine Custom  Authorization  Info  roles  authenticated  Authz  Info resolve  Authorization  Info  authorize  Run  As  authorize  Cluster  Action  authorize  Index  Action  load  Authorized  Indices  validate  Index  Permissions  Are  Subset  check  Privileges  get  User  Privileges  get  User  Privileges  Response  Custom  Authorization  Info  as  Map  get  Authenticated  User  Authorization  Info  is  Superuser Has  Privileges  Request username  cluster  Privileges  index  Privileges  application  Privileges Has  Privileges  Request  Has  Privileges  Request  validate  username  username  usernames  index  Privileges  cluster  Privileges  application  Privileges  index  Privileges  cluster  Privileges  application  Privileges  write  To,0,0
194,get  Has  Privileges  Response Authentication  boolean  Custom  Authorization  Engine Has  Privileges  Response  cluster  Privileges  put  index  Privileges  get  Indices  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  collect  map  stream  application  Privileges  to  Set  application  Privileges  equals  get  Application  get  Resources  get  put  All  get  Privileges  get  Privileges  put  put  build  add  Privileges  builder  put  values  principal  get  User  values Has  Privileges  Request username  cluster  Privileges  index  Privileges  application  Privileges Has  Privileges  Request  Has  Privileges  Request  validate  username  username  usernames  index  Privileges  cluster  Privileges  application  Privileges  index  Privileges  cluster  Privileges  application  Privileges  write  To Custom  Authorization  Engine Custom  Authorization  Info  roles  authenticated  Authz  Info resolve  Authorization  Info  authorize  Run  As  authorize  Cluster  Action  authorize  Index  Action  load  Authorized  Indices  validate  Index  Permissions  Are  Subset  check  Privileges  get  User  Privileges  get  User  Privileges  Response  Custom  Authorization  Info  as  Map  get  Authenticated  User  Authorization  Info  is  Superuser,1,1
195,is  Superuser User boolean  contains  as  List  roles Custom  Authorization  Engine Custom  Authorization  Info  roles  authenticated  Authz  Info resolve  Authorization  Info  authorize  Run  As  authorize  Cluster  Action  authorize  Index  Action  load  Authorized  Indices  validate  Index  Permissions  Are  Subset  check  Privileges  get  User  Privileges  get  User  Privileges  Response  Custom  Authorization  Info  as  Map  get  Authenticated  User  Authorization  Info User username  roles  authenticated  User  metadata  enabled  full  Name  email  username  password  password  hash  roles  full  name  email  metadata  enabled  type  authentication  realm  lookup  realm  realm  type  realm  name User  User  User  User  User  principal  roles  metadata  full  Name  email  enabled  authenticated  User  is  Run  As  with  Roles  to  String  equals  hash  Code  to  X  Content  partial  Read  From  read  From  write  To  is  Internal  write  User  execute  As  User,0,0
196,is  Superuser User boolean  contains  as  List  roles User username  roles  authenticated  User  metadata  enabled  full  Name  email  username  password  password  hash  roles  full  name  email  metadata  enabled  type  authentication  realm  lookup  realm  realm  type  realm  name User  User  User  User  User  principal  roles  metadata  full  Name  email  enabled  authenticated  User  is  Run  As  with  Roles  to  String  equals  hash  Code  to  X  Content  partial  Read  From  read  From  write  To  is  Internal  write  User  execute  As  User Custom  Authorization  Engine Custom  Authorization  Info  roles  authenticated  Authz  Info resolve  Authorization  Info  authorize  Run  As  authorize  Cluster  Action  authorize  Index  Action  load  Authorized  Indices  validate  Index  Permissions  Are  Subset  check  Privileges  get  User  Privileges  get  User  Privileges  Response  Custom  Authorization  Info  as  Map  get  Authenticated  User  Authorization  Info,1,0
197,parse  Rules String  Environment Break  Iterator  resolve  config  File  collect  filter  stream  read  All  Lines  starts  With  joining  to  String Icu  Tokenizer  Factory config  rule  files Icu  Tokenizer  Factory  create  get  Icu  Config  get  Break  Iterator Environment empty  path  array  path  home  setting  path  data  setting  path  logs  setting  path  repo  setting  path  shared  data  setting  node  pidfile  setting  settings  data  Files  repo  Files  config  File  plugins  File  modules  File  shared  Data  File  bin  File  lib  File  logs  File  pid  File  tmp  File Environment  Environment  settings  data  Files  shared  Data  File  repo  Files  resolve  Repo  File  resolve  Repo  U  R  L  config  File  plugins  File  bin  File  lib  File  modules  File  logs  File  pid  File  tmp  File  validate  Tmp  File  get  File  Store  assert  Equivalent  assert  Equals  load  Cluster  State,0,0
198,parse  Rules String  Environment Break  Iterator  resolve  config  File  collect  filter  stream  read  All  Lines  starts  With  joining  to  String Environment empty  path  array  path  home  setting  path  data  setting  path  logs  setting  path  repo  setting  path  shared  data  setting  node  pidfile  setting  settings  data  Files  repo  Files  config  File  plugins  File  modules  File  shared  Data  File  bin  File  lib  File  logs  File  pid  File  tmp  File Environment  Environment  settings  data  Files  shared  Data  File  repo  Files  resolve  Repo  File  resolve  Repo  U  R  L  config  File  plugins  File  bin  File  lib  File  modules  File  logs  File  pid  File  tmp  File  validate  Tmp  File  get  File  Store  assert  Equivalent  assert  Equals  load  Cluster  State Icu  Tokenizer  Factory config  rule  files Icu  Tokenizer  Factory  create  get  Icu  Config  get  Break  Iterator,1,0
199,set  Distribution  Type Test  Distribution  Elasticsearch  Node void  set  Type  set  Flavor  set  Platform  set  Bundled  Jdk  set  Type  set  Flavor  set  Flavor Elasticsearch  Node logger  es  destroy  timeout  es  destroy  timeout  unit  node  up  timeout  node  up  timeout  unit  additional  config  timeout  additional  config  timeout  unit  overridable  settings  tail  log  messages  count  messages  we  dont  care  about  hostname  override  computername  override  path  name  project  reaper  configuration  Frozen  working  Dir  wait  Conditions  plugins  modules  settings  keystore  Settings  keystore  Files  cli  Setup  system  Properties  environment  jvm  Args  extra  Config  Files  extra  Jar  Files  credentials  default  Config  conf  Path  Repo  config  File  conf  Path  Logs  transport  Port  File  http  Ports  File  es  Stdout  File  es  Stderr  File  es  Stdin  File  tmp  Dir  current  Distro  test  Distribution  distributions  es  Process  name  Customization  is  Working  Dir  Configured  http  Port  transport  Port  conf  Path  Data  keystore  Password  File  Entry  name  file  Cli  Entry  executable  args Elasticsearch  Node  get  Name  get  Version  get  Distro  Dir  set  Version  set  Versions  do  Set  Version  get  Test  Distribution  get  Distributions  set  Test  Distribution  plugin  plugin  plugin  plugin  module  module  keystore  keystore  keystore  keystore  keystore  keystore  Password  cli  Setup  setting  setting  setting  setting  system  Property  system  Property  system  Property  environment  environment  environment  jvm  Args  get  Config  Dir  freeze  log  Lines  start  log  To  Process  Stdout  restart  go  To  Next  Version  is  Setting  True  copy  Extra  Config  Files  copy  Extra  Jars  install  Modules  extra  Config  File  extra  Config  File  extra  Jar  File  user  run  Elasticsearch  Bin  Script  With  Input  run  Keystore  Command  With  Password  run  Elasticsearch  Bin  Script  get  E  S  Environment  start  Elasticsearch  Process  get  Http  Socket  U  R  I  get  Transport  Port  U  R  I  get  All  Http  Socket  U  R  I  get  All  Transport  Port  U  R  I  get  Server  Log  get  Audit  Log  stop  set  Name  Customization  stop  Handle  log  Process  Info  log  File  Contents  normalize  Log  Line  wait  For  Process  To  Exit  create  Working  Dir  sync  With  Links  create  Configuration  check  Frozen  get  Transport  Port  Internal  get  Http  Port  Internal  read  Ports  File  get  Extracted  Distribution  Dir  get  Installed  File  Set  get  Remote  Plugins  get  Installed  Classpath  get  Installed  Files  get  Distribution  Classpath  get  Distribution  Files  get  Distribution  Files  get  Keystore  Settings  get  Keystore  Files  get  Cli  Setup  get  Settings  get  System  Properties  get  Environment  get  Jvm  Args  get  Extra  Config  Files  is  Process  Alive  wait  For  All  Conditions  equals  hash  Code  to  String  get  Credentials  check  Ports  Files  Exist  With  Delay  is  Http  Ssl  Enabled  configure  Http  Wait  set  Http  Port  set  Transport  Port  set  Data  Path  get  Es  Stdout  File  get  Es  Stderr  File  File  Entry  get  Name  get  File  Cli  Entry  get  Executable  get  Args Elasticsearch  Distribution Platform  Type  Flavor  current  platform  Extracted  configuration  name  docker  Support  configuration  extracted  architecture  version  type  platform  flavor  bundled  Jdk  fail  If  Unavailable to  String  to  String  should  Extract  to  String  Extracted  iterator  get  Build  Dependencies  to  String  Elasticsearch  Distribution  get  Name  get  Version  set  Version  get  Platform  set  Platform  get  Type  set  Type  get  Flavor  set  Flavor  get  Bundled  Jdk  set  Bundled  Jdk  get  Fail  If  Unavailable  set  Fail  If  Unavailable  set  Architecture  get  Architecture  to  String  get  Extracted  get  Build  Dependencies  iterator  get  Configuration  finalize  Values,0,0
200,set  Distribution  Type Test  Distribution  Elasticsearch  Node void  set  Type  set  Flavor  set  Platform  set  Bundled  Jdk  set  Type  set  Flavor  set  Flavor Elasticsearch  Distribution Platform  Type  Flavor  current  platform  Extracted  configuration  name  docker  Support  configuration  extracted  architecture  version  type  platform  flavor  bundled  Jdk  fail  If  Unavailable to  String  to  String  should  Extract  to  String  Extracted  iterator  get  Build  Dependencies  to  String  Elasticsearch  Distribution  get  Name  get  Version  set  Version  get  Platform  set  Platform  get  Type  set  Type  get  Flavor  set  Flavor  get  Bundled  Jdk  set  Bundled  Jdk  get  Fail  If  Unavailable  set  Fail  If  Unavailable  set  Architecture  get  Architecture  to  String  get  Extracted  get  Build  Dependencies  iterator  get  Configuration  finalize  Values Elasticsearch  Node logger  es  destroy  timeout  es  destroy  timeout  unit  node  up  timeout  node  up  timeout  unit  additional  config  timeout  additional  config  timeout  unit  overridable  settings  tail  log  messages  count  messages  we  dont  care  about  hostname  override  computername  override  path  name  project  reaper  configuration  Frozen  working  Dir  wait  Conditions  plugins  modules  settings  keystore  Settings  keystore  Files  cli  Setup  system  Properties  environment  jvm  Args  extra  Config  Files  extra  Jar  Files  credentials  default  Config  conf  Path  Repo  config  File  conf  Path  Logs  transport  Port  File  http  Ports  File  es  Stdout  File  es  Stderr  File  es  Stdin  File  tmp  Dir  current  Distro  test  Distribution  distributions  es  Process  name  Customization  is  Working  Dir  Configured  http  Port  transport  Port  conf  Path  Data  keystore  Password  File  Entry  name  file  Cli  Entry  executable  args Elasticsearch  Node  get  Name  get  Version  get  Distro  Dir  set  Version  set  Versions  do  Set  Version  get  Test  Distribution  get  Distributions  set  Test  Distribution  plugin  plugin  plugin  plugin  module  module  keystore  keystore  keystore  keystore  keystore  keystore  Password  cli  Setup  setting  setting  setting  setting  system  Property  system  Property  system  Property  environment  environment  environment  jvm  Args  get  Config  Dir  freeze  log  Lines  start  log  To  Process  Stdout  restart  go  To  Next  Version  is  Setting  True  copy  Extra  Config  Files  copy  Extra  Jars  install  Modules  extra  Config  File  extra  Config  File  extra  Jar  File  user  run  Elasticsearch  Bin  Script  With  Input  run  Keystore  Command  With  Password  run  Elasticsearch  Bin  Script  get  E  S  Environment  start  Elasticsearch  Process  get  Http  Socket  U  R  I  get  Transport  Port  U  R  I  get  All  Http  Socket  U  R  I  get  All  Transport  Port  U  R  I  get  Server  Log  get  Audit  Log  stop  set  Name  Customization  stop  Handle  log  Process  Info  log  File  Contents  normalize  Log  Line  wait  For  Process  To  Exit  create  Working  Dir  sync  With  Links  create  Configuration  check  Frozen  get  Transport  Port  Internal  get  Http  Port  Internal  read  Ports  File  get  Extracted  Distribution  Dir  get  Installed  File  Set  get  Remote  Plugins  get  Installed  Classpath  get  Installed  Files  get  Distribution  Classpath  get  Distribution  Files  get  Distribution  Files  get  Keystore  Settings  get  Keystore  Files  get  Cli  Setup  get  Settings  get  System  Properties  get  Environment  get  Jvm  Args  get  Extra  Config  Files  is  Process  Alive  wait  For  All  Conditions  equals  hash  Code  to  String  get  Credentials  check  Ports  Files  Exist  With  Delay  is  Http  Ssl  Enabled  configure  Http  Wait  set  Http  Port  set  Transport  Port  set  Data  Path  get  Es  Stdout  File  get  Es  Stderr  File  File  Entry  get  Name  get  File  Cli  Entry  get  Executable  get  Args,1,1
201,create  Test  Clusters  Container  Extension Project  Test  Clusters  Plugin Named  Domain  Object  Container  Elasticsearch  Cluster  container  get  Path  get  Build  Dir  add  get  Extensions Test  Clusters  Plugin extension  name  throttle  service  name  list  task  name  registry  service  name  logger  Test  Clusters  Hook  Plugin apply  create  List  Clusters  Task  apply  configure  Claim  Clusters  Hook  configure  Start  Clusters  Hook  before  Actions  after  Actions  configure  Stop  Clusters  Hook  after  Execute  before  Execute Reaper  Service reaper  class  reaper  jar  path  pattern  logger  is  Internal  build  Dir  input  Dir  log  File  reaper  Process Reaper  Service  register  Pid  register  Command  get  Cmd  File  unregister  shutdown  ensure  Reaper  Started  locate  Reaper  Jar  ensure  Reaper  Alive,0,0
202,create  Test  Clusters  Container  Extension Project  Test  Clusters  Plugin Named  Domain  Object  Container  Elasticsearch  Cluster  container  get  Path  get  Build  Dir  add  get  Extensions Reaper  Service reaper  class  reaper  jar  path  pattern  logger  is  Internal  build  Dir  input  Dir  log  File  reaper  Process Reaper  Service  register  Pid  register  Command  get  Cmd  File  unregister  shutdown  ensure  Reaper  Started  locate  Reaper  Jar  ensure  Reaper  Alive Test  Clusters  Plugin extension  name  throttle  service  name  list  task  name  registry  service  name  logger  Test  Clusters  Hook  Plugin apply  create  List  Clusters  Task  apply  configure  Claim  Clusters  Hook  configure  Start  Clusters  Hook  before  Actions  after  Actions  configure  Stop  Clusters  Hook  after  Execute  before  Execute,1,1
203,check  Avatar Hash  Set  Long  Js  Binding  Module boolean  get  Small  Image  contains  get  File  Id  get  File  Reference  get  Small  Image  get  Full  Image  contains  get  File  Id  get  File  Reference  get  Full  Image  get  Large  Image  contains  get  File  Id  get  File  Reference  get  Large  Image Js  Binding  Module messenger  users  groups  users  Onlines  users  Bloked  group  Onlines  typing  online  State  dialogs  List  contacts  List  search  List  message  Lists  global  Counter  temp  Global  Counter  dialogs  Grouped  List  calls  event  Bus  Callbacks  stickers Js  Binding  Module  broadcast  Event  subscribe  Event  Bus  unsubscribe  Event  Bus  get  Dialogs  Grouped  List  on  Changed  get  Stickers  on  Changed  get  Online  Status  on  Changed  on  Changed  get  User  on  Changed  on  Changed  on  Changed  get  User  Online  on  Changed  get  User  Blocked  on  Changed  get  Group  on  Changed  get  Group  Online  on  Changed  get  Call  on  Changed  on  Changed  on  Changed  on  Changed  get  Typing  get  Shared  Search  List  get  Shared  Contact  List  get  Shared  Dialog  List  get  Shared  Message  List  get  Global  Counter  on  Changed  get  Temp  Global  Counter  on  Changed  on  File  Loaded Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance,0,0
204,check  Avatar Hash  Set  Long  Js  Binding  Module boolean  get  Small  Image  contains  get  File  Id  get  File  Reference  get  Small  Image  get  Full  Image  contains  get  File  Id  get  File  Reference  get  Full  Image  get  Large  Image  contains  get  File  Id  get  File  Reference  get  Large  Image Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance Js  Binding  Module messenger  users  groups  users  Onlines  users  Bloked  group  Onlines  typing  online  State  dialogs  List  contacts  List  search  List  message  Lists  global  Counter  temp  Global  Counter  dialogs  Grouped  List  calls  event  Bus  Callbacks  stickers Js  Binding  Module  broadcast  Event  subscribe  Event  Bus  unsubscribe  Event  Bus  get  Dialogs  Grouped  List  on  Changed  get  Stickers  on  Changed  get  Online  Status  on  Changed  on  Changed  get  User  on  Changed  on  Changed  on  Changed  get  User  Online  on  Changed  get  User  Blocked  on  Changed  get  Group  on  Changed  get  Group  Online  on  Changed  get  Call  on  Changed  on  Changed  on  Changed  on  Changed  get  Typing  get  Shared  Search  List  get  Shared  Contact  List  get  Shared  Dialog  List  get  Shared  Message  List  get  Global  Counter  on  Changed  get  Temp  Global  Counter  on  Changed  on  File  Loaded,1,1
205,get  Small  Avatar  Url Avatar String  get  Small  Image  get  File  Url  get  File  Reference  get  Small  Image Js  Messenger tag  instance  js  Idle  Module  js  Binding  Module  files  Module  file  System  Provider  is  Electron Js  Messenger  on  Event  on  Changed  get  Instance  get  Js  Idle  Module  is  Electron  send  Photo  on  Resized  send  Photo  send  Animation  on  Resized  send  Clipboard  Photo  load  More  Dialogs  load  Archived  Dialogs  load  More  History  get  Js  User  get  Js  User  Online  get  Js  User  Blocked  get  Js  Group  get  Js  Group  Online  get  Js  Call  get  Typing  get  Online  Status  get  Global  Counter  get  Temp  Global  Counter  build  Peer  Info  get  Shared  Dialog  List  get  Shared  Contact  List  get  Shared  Search  List  get  Shared  Chat  List  get  Dialogs  Grouped  List  get  Stickers  broadcast  Event  subscribe  Event  Bus  unsubscribe  Event  Bus  get  File  Url Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance  check  Avatar,0,0
206,get  Small  Avatar  Url Avatar String  get  Small  Image  get  File  Url  get  File  Reference  get  Small  Image Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance  check  Avatar Js  Messenger tag  instance  js  Idle  Module  js  Binding  Module  files  Module  file  System  Provider  is  Electron Js  Messenger  on  Event  on  Changed  get  Instance  get  Js  Idle  Module  is  Electron  send  Photo  on  Resized  send  Photo  send  Animation  on  Resized  send  Clipboard  Photo  load  More  Dialogs  load  Archived  Dialogs  load  More  History  get  Js  User  get  Js  User  Online  get  Js  User  Blocked  get  Js  Group  get  Js  Group  Online  get  Js  Call  get  Typing  get  Online  Status  get  Global  Counter  get  Temp  Global  Counter  build  Peer  Info  get  Shared  Dialog  List  get  Shared  Contact  List  get  Shared  Search  List  get  Shared  Chat  List  get  Dialogs  Grouped  List  get  Stickers  broadcast  Event  subscribe  Event  Bus  unsubscribe  Event  Bus  get  File  Url,1,0
207,format  Dialog  Text In  Engine String  get  Sender  Id  format  Content  Text  get  Sender  Id  get  Message  Type  get  Text  get  Related  Uid  is  Channel  get  Peer  Type  get  Peer  is  Channel  is  Large  Dialog  Message  get  Message  Type  format  Performer  Name  get  Sender  Id In  Engine tag  supported  locales  female  male  default  you  modules In  Engine  create  get  App  Name  format  Typing  format  Typing  format  Typing  format  Typing  format  Presence  format  Group  Online  format  Group  Members  is  Large  Dialog  Message  format  Notification  Text  format  Content  Text  format  Full  Service  Message  format  Error  Text  format  Error  Text  format  Messages  Export  compare  compare  get  Template  Named  get  Template  format  Performer  Name  get  Subject  Name  get  User Dialog entity  name  max  length  creator  peer  dialog  Title  dialog  Avatar  is  Bot  is  Channel  unread  Count  rid  sort  Date  sender  Id  date  known  Read  Date  known  Receive  Date  message  Type  text  related  Uid create  Instance  Dialog  Dialog  from  Bytes  get  Peer  get  Dialog  Title  get  Dialog  Avatar  is  Bot  is  Channel  get  Unread  Count  get  Rid  get  Sort  Date  get  Sender  Id  get  Date  get  Message  Type  get  Text  get  Related  Uid  get  Known  Read  Date  get  Known  Receive  Date  is  Read  is  Received  edit  Peer  Info  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search,0,0
208,format  Dialog  Text In  Engine String  get  Sender  Id  format  Content  Text  get  Sender  Id  get  Message  Type  get  Text  get  Related  Uid  is  Channel  get  Peer  Type  get  Peer  is  Channel  is  Large  Dialog  Message  get  Message  Type  format  Performer  Name  get  Sender  Id Dialog entity  name  max  length  creator  peer  dialog  Title  dialog  Avatar  is  Bot  is  Channel  unread  Count  rid  sort  Date  sender  Id  date  known  Read  Date  known  Receive  Date  message  Type  text  related  Uid create  Instance  Dialog  Dialog  from  Bytes  get  Peer  get  Dialog  Title  get  Dialog  Avatar  is  Bot  is  Channel  get  Unread  Count  get  Rid  get  Sort  Date  get  Sender  Id  get  Date  get  Message  Type  get  Text  get  Related  Uid  get  Known  Read  Date  get  Known  Receive  Date  is  Read  is  Received  edit  Peer  Info  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search In  Engine tag  supported  locales  female  male  default  you  modules In  Engine  create  get  App  Name  format  Typing  format  Typing  format  Typing  format  Typing  format  Presence  format  Group  Online  format  Group  Members  is  Large  Dialog  Message  format  Notification  Text  format  Content  Text  format  Full  Service  Message  format  Error  Text  format  Error  Text  format  Messages  Export  compare  compare  get  Template  Named  get  Template  format  Performer  Name  get  Subject  Name  get  User,1,1
209,change  Endpoints Api  Module void  put  Bytes  get  Preferences  context  to  Byte  Array  change  Endpoints  get  Actor  Api Api  Module actor  Api  persistent  Requests  auth  Key  Storage  Actor  Api  Callback  Impl Api  Module  get  Actor  Api  get  Auth  Key  Storage  perform  Persist  Request  perform  Persist  Cursor  Request  change  Endpoint  reset  To  Default  Endpoints  check  Is  Current  Auth  Id  on  Bus  Event  on  Auth  Id  Invalidated  on  New  Session  Created  on  Update  Received  on  Connections  Changed Endpoints round  Robin  endpoints  trusted  Keys Endpoints  Endpoints  from  Bytes  get  Trusted  Keys  fetch  Endpoint  equals  parse  serialize,0,0
210,change  Endpoints Api  Module void  put  Bytes  get  Preferences  context  to  Byte  Array  change  Endpoints  get  Actor  Api Endpoints round  Robin  endpoints  trusted  Keys Endpoints  Endpoints  from  Bytes  get  Trusted  Keys  fetch  Endpoint  equals  parse  serialize Api  Module actor  Api  persistent  Requests  auth  Key  Storage  Actor  Api  Callback  Impl Api  Module  get  Actor  Api  get  Auth  Key  Storage  perform  Persist  Request  perform  Persist  Cursor  Request  change  Endpoint  reset  To  Default  Endpoints  check  Is  Current  Auth  Id  on  Bus  Event  on  Auth  Id  Invalidated  on  New  Session  Created  on  Update  Received  on  Connections  Changed,1,1
211,send  Signal long  Call  Bus  Actor void  d  send  Message  build  Container  print  Stack  Trace Call  Bus  Actor timeout  stash  self  Settings  peer  Callback  call  Bus  Callback  is  Master  Ready  master  Device  Id  peer  Call  is  Connected  is  Enabled  Join  Bus  bus  Id  Join  Master  Bus  bus  Id  device  Id  Audio  Enabled  enabled  Video  Enabled  enabled  On  Answered  Callback  Wrapper  call  Callback Call  Bus  Actor  pre  Start  on  Bus  Started  on  Offer  on  Answer  on  Candidate  on  Negotiation  Successful  on  Negotiation  Needed  on  Media  Streams  Changed  on  Peer  State  Changed  on  Track  Added  on  Track  Removed  on  Own  Track  Added  on  Own  Track  Removed  on  Change  Audio  Enabled  on  Change  Video  Enabled  on  Own  Answered  on  Device  Connected  on  Device  Disconnected  on  Message  Received  post  Stop  on  Receive  Join  Bus  get  Bus  Id  Join  Master  Bus  get  Bus  Id  get  Device  Id  Audio  Enabled  is  Enabled  Video  Enabled  is  Enabled  Callback  Wrapper  on  Offer  on  Answer  on  Candidate  on  Negotiation  Successful  on  Negotiation  Needed  on  Media  Streams  Changed  on  Peer  State  Changed  on  Track  Added  on  Track  Removed  on  Own  Track  Added  on  Own  Track  Removed Api  Web  R  T  C  Signaling  from  Bytes  get  Header  build  Container,0,0
212,send  Signal long  Call  Bus  Actor void  d  send  Message  build  Container  print  Stack  Trace Api  Web  R  T  C  Signaling  from  Bytes  get  Header  build  Container Call  Bus  Actor timeout  stash  self  Settings  peer  Callback  call  Bus  Callback  is  Master  Ready  master  Device  Id  peer  Call  is  Connected  is  Enabled  Join  Bus  bus  Id  Join  Master  Bus  bus  Id  device  Id  Audio  Enabled  enabled  Video  Enabled  enabled  On  Answered  Callback  Wrapper  call  Callback Call  Bus  Actor  pre  Start  on  Bus  Started  on  Offer  on  Answer  on  Candidate  on  Negotiation  Successful  on  Negotiation  Needed  on  Media  Streams  Changed  on  Peer  State  Changed  on  Track  Added  on  Track  Removed  on  Own  Track  Added  on  Own  Track  Removed  on  Change  Audio  Enabled  on  Change  Video  Enabled  on  Own  Answered  on  Device  Connected  on  Device  Disconnected  on  Message  Received  post  Stop  on  Receive  Join  Bus  get  Bus  Id  Join  Master  Bus  get  Bus  Id  get  Device  Id  Audio  Enabled  is  Enabled  Video  Enabled  is  Enabled  Callback  Wrapper  on  Offer  on  Answer  on  Candidate  on  Negotiation  Successful  on  Negotiation  Needed  on  Media  Streams  Changed  on  Peer  State  Changed  on  Track  Added  on  Track  Removed  on  Own  Track  Added  on  Own  Track  Removed,1,1
213,make  Call boolean  Calls  Module Command  Long  send  get  Call  Manager Calls  Module tag  call  Manager  call  View  Models Calls  Module  run  get  Call  View  Models  get  Call  get  Call  Manager  check  Call  probably  End  Call  mute  Call  unmute  Call  disable  Video  enable  Video  end  Call  answer  Call Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String,0,0
214,make  Call boolean  Calls  Module Command  Long  send  get  Call  Manager Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String Calls  Module tag  call  Manager  call  View  Models Calls  Module  run  get  Call  View  Models  get  Call  get  Call  Manager  check  Call  probably  End  Call  mute  Call  unmute  Call  disable  Video  enable  Video  end  Call  answer  Call,1,1
215,on  User  Desc  Changed User  Router Promise  Void  send  get  Contact  Sync  Actor  get  Contacts  Module  context  on  User  Changed  get  Router  get  Messages  Module  context User  Router dumb  phone  Book  Provider  contacts  requested  Full  Users  is  Freezed User  Router  on  User  Name  Changed  on  User  Local  Name  Changed  on  User  Avatar  Changed  on  User  Nick  Changed  on  User  Ext  Changed  on  User  About  Changed  on  User  Preferred  Languages  Changed  on  User  Time  Zone  Changed  on  User  Contacts  Changed  on  User  Commands  Changed  on  User  Blocked  Changed  on  User  Full  Ext  Changed  on  User  Registered  on  Load  Full  User  apply  fetch  Missing  Users  apply  apply  Users  apply  get  Phone  Book  check  Is  In  Phone  Book  apply  freeze  unfreeze  on  Update  on  Ask  on  Receive User record  id  record  full  id  creator  uid  access  Hash  name  local  Name  username  about  avatar  sex  is  Bot  records  is  Blocked  time  Zone  is  Verified  commands  have  Extension User  User  User  peer  get  Uid  get  Access  Hash  get  Server  Name  get  Local  Name  get  Name  get  Nick  get  About  get  Avatar  get  Sex  is  Have  Extension  get  Records  is  Bot  get  Commands  is  Blocked  get  Time  Zone  is  Verified  edit  Name  edit  Local  Name  edit  Nick  edit  Ext  edit  Avatar  update  Ext  edit  About  edit  Preferred  Languages  edit  Time  Zone  edit  Contacts  edit  Bot  Commands  edit  Full  Ext  edit  Blocked  apply  Wrapped  parse  serialize  get  Engine  Id  create  Instance  create  Ext  Instance,0,0
216,on  User  Desc  Changed User  Router Promise  Void  send  get  Contact  Sync  Actor  get  Contacts  Module  context  on  User  Changed  get  Router  get  Messages  Module  context User record  id  record  full  id  creator  uid  access  Hash  name  local  Name  username  about  avatar  sex  is  Bot  records  is  Blocked  time  Zone  is  Verified  commands  have  Extension User  User  User  peer  get  Uid  get  Access  Hash  get  Server  Name  get  Local  Name  get  Name  get  Nick  get  About  get  Avatar  get  Sex  is  Have  Extension  get  Records  is  Bot  get  Commands  is  Blocked  get  Time  Zone  is  Verified  edit  Name  edit  Local  Name  edit  Nick  edit  Ext  edit  Avatar  update  Ext  edit  About  edit  Preferred  Languages  edit  Time  Zone  edit  Contacts  edit  Bot  Commands  edit  Full  Ext  edit  Blocked  apply  Wrapped  parse  serialize  get  Engine  Id  create  Instance  create  Ext  Instance User  Router dumb  phone  Book  Provider  contacts  requested  Full  Users  is  Freezed User  Router  on  User  Name  Changed  on  User  Local  Name  Changed  on  User  Avatar  Changed  on  User  Nick  Changed  on  User  Ext  Changed  on  User  About  Changed  on  User  Preferred  Languages  Changed  on  User  Time  Zone  Changed  on  User  Contacts  Changed  on  User  Commands  Changed  on  User  Blocked  Changed  on  User  Full  Ext  Changed  on  User  Registered  on  Load  Full  User  apply  fetch  Missing  Users  apply  apply  Users  apply  get  Phone  Book  check  Is  In  Phone  Book  apply  freeze  unfreeze  on  Update  on  Ask  on  Receive,1,1
217,save  Admin  Settings int  Group  Permissions Promise  Void  map  flat  Map  get  Value  Async  get  Groups  api  get  Group  Id  get  Access  Hash  get  Api  Settings Groups  Module dumb  dumb  groups  collection  avatar  V  Ms  avatar  Change  Actor  group  Router  Int Groups  Module  run  get  Groups  get  Avatar  V  M  get  Groups  Collection  get  Router  create  Group  create  Channel  add  Member  kick  Member  leave  Group  leave  And  Delete  Group  delete  Group  share  History  make  Admin  revoke  Admin  transfer  Ownership  edit  Title  edit  Theme  edit  About  edit  Short  Name  load  Admin  Settings  load  Members  change  Avatar  remove  Avatar  request  Invite  Link  request  Revoke  Link  join  Group  By  Token  join  Group  request  Integration  Token  revoke  Integration  Token  reset  Module  on  Bus  Event Group  Permissions settings Group  Permissions  is  Show  Admins  To  Members  set  Show  Admins  To  Members  is  Members  Can  Invite  set  Members  Can  Invite  is  Members  Can  Edit  Info  set  Members  Can  Edit  Info  is  Admins  Can  Edit  Group  Info  set  Admins  Can  Edit  Group  Info  is  Show  Join  Leave  Messages  set  Show  Join  Leave  Messages  get  Api  Settings,0,0
218,save  Admin  Settings int  Group  Permissions Promise  Void  map  flat  Map  get  Value  Async  get  Groups  api  get  Group  Id  get  Access  Hash  get  Api  Settings Group  Permissions settings Group  Permissions  is  Show  Admins  To  Members  set  Show  Admins  To  Members  is  Members  Can  Invite  set  Members  Can  Invite  is  Members  Can  Edit  Info  set  Members  Can  Edit  Info  is  Admins  Can  Edit  Group  Info  set  Admins  Can  Edit  Group  Info  is  Show  Join  Leave  Messages  set  Show  Join  Leave  Messages  get  Api  Settings Groups  Module dumb  dumb  groups  collection  avatar  V  Ms  avatar  Change  Actor  group  Router  Int Groups  Module  run  get  Groups  get  Avatar  V  M  get  Groups  Collection  get  Router  create  Group  create  Channel  add  Member  kick  Member  leave  Group  leave  And  Delete  Group  delete  Group  share  History  make  Admin  revoke  Admin  transfer  Ownership  edit  Title  edit  Theme  edit  About  edit  Short  Name  load  Admin  Settings  load  Members  change  Avatar  remove  Avatar  request  Invite  Link  request  Revoke  Link  join  Group  By  Token  join  Group  request  Integration  Token  revoke  Integration  Token  reset  Module  on  Bus  Event,1,0
219,find  Messages Search  Module Promise  List  Message  Search  Entity  map  chain  api  apply  Related  Data  updates  get  Users  get  Groups  map  of  get  Search  Results  convert  get  Peer  get  Result  get  Rid  get  Result  get  Date  get  Result  get  Sender  Id  get  Result  from  Message  get  Content  get  Result Search  Module dumb  search  List  actor  Ref Search  Module  run  get  Search  List  find  Text  Messages  find  All  Docs  find  All  Links  find  All  Photos  find  All  Content  find  Peers  find  Peers  find  Peers  find  Public  Group  By  Id  build  Search  Model  on  Dialogs  Changed  on  Contacts  Changed  reset  Module Api  Search  Condition  from  Bytes  get  Header  build  Container,0,0
220,find  Messages Search  Module Promise  List  Message  Search  Entity  map  chain  api  apply  Related  Data  updates  get  Users  get  Groups  map  of  get  Search  Results  convert  get  Peer  get  Result  get  Rid  get  Result  get  Date  get  Result  get  Sender  Id  get  Result  from  Message  get  Content  get  Result Api  Search  Condition  from  Bytes  get  Header  build  Container Search  Module dumb  search  List  actor  Ref Search  Module  run  get  Search  List  find  Text  Messages  find  All  Docs  find  All  Links  find  All  Photos  find  All  Content  find  Peers  find  Peers  find  Peers  find  Public  Group  By  Id  build  Search  Model  on  Dialogs  Changed  on  Contacts  Changed  reset  Module,1,1
221,raw  Request  Command String  String  External  Module Command  Response  Raw  Request  request External  Module  External  Module  external  Method  on  Result  on  Error  start  Web  Action  on  Result  on  Error  complete  Web  Action  on  Result  on  Error  raw  Persistent  Request  raw  Request Api  Raw  Value  from  Bytes  get  Header  build  Container  on  Result  on  Error,0,0
222,raw  Request  Command String  String  External  Module Command  Response  Raw  Request  request Api  Raw  Value  from  Bytes  get  Header  build  Container  on  Result  on  Error External  Module  External  Module  external  Method  on  Result  on  Error  start  Web  Action  on  Result  on  Error  complete  Web  Action  on  Result  on  Error  raw  Persistent  Request  raw  Request,1,1
223,raw  Persistent  Request String  String  Api  Raw  Value void  perform  Persist  Request  get  Api  Module  context External  Module  External  Module  external  Method  on  Result  on  Error  start  Web  Action  on  Result  on  Error  complete  Web  Action  on  Result  on  Error  raw  Request Api  Raw  Value  from  Bytes  get  Header  build  Container  raw  Request  Command  on  Result  on  Error,0,0
224,raw  Persistent  Request String  String  Api  Raw  Value void  perform  Persist  Request  get  Api  Module  context Api  Raw  Value  from  Bytes  get  Header  build  Container  raw  Request  Command  on  Result  on  Error External  Module  External  Module  external  Method  on  Result  on  Error  start  Web  Action  on  Result  on  Error  complete  Web  Action  on  Result  on  Error  raw  Request,1,0
225,put  Message Combined  Difference void  convert  get  Peer  contains  Key  get  Messages  add  get  get  Messages  add  put  get  Messages Combined  Difference read  By  Me  read  received  messages  other  Updates  Read  By  Me  Value  date  counter get  Read  By  Me  get  Read  get  Received  get  Messages  get  Other  Updates  put  Read  By  Me  put  Read  put  Received  put  Read  By  Me  Value  get  Date  get  Counter Update  Message header  peer  sender  Uid  date  rid  message  attributes  quoted  Message Update  Message  Update  Message  from  Bytes  get  Peer  get  Sender  Uid  get  Date  get  Rid  get  Message  get  Attributes  get  Quoted  Message  parse  serialize  to  String  get  Header  Key,0,0
226,put  Message Combined  Difference void  convert  get  Peer  contains  Key  get  Messages  add  get  get  Messages  add  put  get  Messages Update  Message header  peer  sender  Uid  date  rid  message  attributes  quoted  Message Update  Message  Update  Message  from  Bytes  get  Peer  get  Sender  Uid  get  Date  get  Rid  get  Message  get  Attributes  get  Quoted  Message  parse  serialize  to  String  get  Header  Key Combined  Difference read  By  Me  read  received  messages  other  Updates  Read  By  Me  Value  date  counter get  Read  By  Me  get  Read  get  Received  get  Messages  get  Other  Updates  put  Read  By  Me  put  Read  put  Received  put  Read  By  Me  Value  get  Date  get  Counter,1,1
227,put Hash  Map  Peer  Long  Peer  long void  contains  Key  get  put  put Combined  Difference read  By  Me  read  received  messages  other  Updates  Read  By  Me  Value  date  counter get  Read  By  Me  get  Read  get  Received  get  Messages  get  Other  Updates  put  Read  By  Me  put  Read  put  Received  Read  By  Me  Value  get  Date  get  Counter Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
228,put Hash  Map  Peer  Long  Peer  long void  contains  Key  get  put  put Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Combined  Difference read  By  Me  read  received  messages  other  Updates  Read  By  Me  Value  date  counter get  Read  By  Me  get  Read  get  Received  get  Messages  get  Other  Updates  put  Read  By  Me  put  Read  put  Received  Read  By  Me  Value  get  Date  get  Counter,1,0
229,apply  Update int  byte  Update  List  Api  User  Updates Promise  Void  add  apply  Update Updates dumb  update  Actor  update  Handler  update  Handler  Int Updates  run  get  Update  Handler  on  Push  Received  apply  Update  wait  For  Update  apply  Related  Data  apply  Related  Data  apply  Related  Data  load  Required  Peers  on  Update  Received  execute  After  reset  Module  on  Bus  Event Api  Group id  access  Hash  title  avatar  members  Count  is  Member  is  Hidden  group  Type  permissions  is  Deleted  ext Api  Group  Api  Group  get  Id  get  Access  Hash  get  Title  get  Avatar  get  Members  Count  is  Member  is  Hidden  get  Group  Type  get  Permissions  is  Deleted  get  Ext  parse  serialize  to  String,0,0
230,apply  Update int  byte  Update  List  Api  User  Updates Promise  Void  add  apply  Update Api  Group id  access  Hash  title  avatar  members  Count  is  Member  is  Hidden  group  Type  permissions  is  Deleted  ext Api  Group  Api  Group  get  Id  get  Access  Hash  get  Title  get  Avatar  get  Members  Count  is  Member  is  Hidden  get  Group  Type  get  Permissions  is  Deleted  get  Ext  parse  serialize  to  String Updates dumb  update  Actor  update  Handler  update  Handler  Int Updates  run  get  Update  Handler  on  Push  Received  apply  Update  wait  For  Update  apply  Related  Data  apply  Related  Data  apply  Related  Data  load  Required  Peers  on  Update  Received  execute  After  reset  Module  on  Bus  Event,1,1
231,apply  Related  Data List  Api  User Promise  Void  apply  Related  Data Updates dumb  update  Actor  update  Handler  update  Handler  Int Updates  run  get  Update  Handler  on  Push  Received  apply  Update  apply  Update  wait  For  Update  apply  Related  Data  apply  Related  Data  load  Required  Peers  on  Update  Received  execute  After  reset  Module  on  Bus  Event Api  Group id  access  Hash  title  avatar  members  Count  is  Member  is  Hidden  group  Type  permissions  is  Deleted  ext Api  Group  Api  Group  get  Id  get  Access  Hash  get  Title  get  Avatar  get  Members  Count  is  Member  is  Hidden  get  Group  Type  get  Permissions  is  Deleted  get  Ext  parse  serialize  to  String  apply  Update,0,0
232,apply  Related  Data List  Api  User Promise  Void  apply  Related  Data Api  Group id  access  Hash  title  avatar  members  Count  is  Member  is  Hidden  group  Type  permissions  is  Deleted  ext Api  Group  Api  Group  get  Id  get  Access  Hash  get  Title  get  Avatar  get  Members  Count  is  Member  is  Hidden  get  Group  Type  get  Permissions  is  Deleted  get  Ext  parse  serialize  to  String  apply  Update Updates dumb  update  Actor  update  Handler  update  Handler  Int Updates  run  get  Update  Handler  on  Push  Received  apply  Update  apply  Update  wait  For  Update  apply  Related  Data  apply  Related  Data  load  Required  Peers  on  Update  Received  execute  After  reset  Module  on  Bus  Event,1,0
233,get  Chat  Key Peer String  get  Peer  Type  get  Peer  Id  get  Peer  Type  get  Peer  Id Settings  Module storage  prefix  key  sound  effects  key  chat  send  by  enter  key  notification  enabled  key  notification  sound  key  notification  sound  enabled  key  notification  vibration  key  notification  in  app  enabled  key  notification  in  app  sound  key  notification  in  app  vibration  key  notification  text  key  notification  chat  prefix  key  notification  group  enabled  key  notification  group  only  mentions  key  markdown  enabled  key  rename  hint  shown  key  wallpapper  key  privacy  key  chat  text  size  key  animation  auto  play  key  doc  auto  download  key  image  auto  download  key  video  auto  download  key  animation  auto  download  key  audio  auto  download  key  notification  peer  sound  settings  Sync  event  Bus Settings  Module  run  is  Conversation  Tones  Enabled  change  Conversation  Tones  Enabled  is  Notifications  Enabled  change  Notifications  Enabled  is  Notification  Sound  Enabled  change  Notification  Sound  Enabled  get  Notification  Sound  change  Notification  Sound  get  Notification  Peer  Sound  change  Notification  Peer  Sound  is  Vibration  Enabled  change  Notification  Vibration  Enabled  is  Show  Notifications  Text  change  Show  Notification  Text  Enabled  is  Group  Notifications  Enabled  change  Group  Notifications  Enabled  is  Group  Notifications  Only  Mentions  Enabled  change  Group  Notifications  Only  Mentions  Enabled  is  In  App  Enabled  change  In  App  Enabled  is  In  App  Sound  Enabled  change  In  App  Sound  Enabled  is  In  App  Vibration  Enabled  change  In  App  Vibration  Enabled  is  Send  By  Enter  Enabled  change  Send  By  Enter  is  Markdown  Enabled  change  Markdown  get  Text  Size  change  Text  Size  is  Image  Auto  Download  Enabled  set  Image  Auto  Download  Enabled  is  Animation  Auto  Download  Enabled  set  Animation  Auto  Download  Enabled  is  Video  Auto  Download  Enabled  set  Video  Auto  Download  Enabled  is  Doc  Auto  Download  Enabled  set  Doc  Auto  Download  Enabled  is  Audio  Auto  Download  Enabled  set  Audio  Auto  Download  Enabled  is  Notifications  Enabled  change  Notifications  Enabled  get  Notification  Sound  change  Notification  Sound  is  Rename  Hint  Shown  get  Selected  Wallpapper  change  Selected  Wallpapper  get  Privacy  set  Privacy  is  Animation  Auto  Play  Enabled  set  Animation  Auto  Play  Enabled  get  Boolean  Value  get  Boolean  Value  set  Boolean  Value  get  String  Value  set  Int  get  Int  get  Bytes  set  Bytes  get  String  Value  set  String  Value  change  Value  read  Value  on  Updated  Setting  notify  Settings  Changed  reset  Module Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
234,get  Chat  Key Peer String  get  Peer  Type  get  Peer  Id  get  Peer  Type  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Settings  Module storage  prefix  key  sound  effects  key  chat  send  by  enter  key  notification  enabled  key  notification  sound  key  notification  sound  enabled  key  notification  vibration  key  notification  in  app  enabled  key  notification  in  app  sound  key  notification  in  app  vibration  key  notification  text  key  notification  chat  prefix  key  notification  group  enabled  key  notification  group  only  mentions  key  markdown  enabled  key  rename  hint  shown  key  wallpapper  key  privacy  key  chat  text  size  key  animation  auto  play  key  doc  auto  download  key  image  auto  download  key  video  auto  download  key  animation  auto  download  key  audio  auto  download  key  notification  peer  sound  settings  Sync  event  Bus Settings  Module  run  is  Conversation  Tones  Enabled  change  Conversation  Tones  Enabled  is  Notifications  Enabled  change  Notifications  Enabled  is  Notification  Sound  Enabled  change  Notification  Sound  Enabled  get  Notification  Sound  change  Notification  Sound  get  Notification  Peer  Sound  change  Notification  Peer  Sound  is  Vibration  Enabled  change  Notification  Vibration  Enabled  is  Show  Notifications  Text  change  Show  Notification  Text  Enabled  is  Group  Notifications  Enabled  change  Group  Notifications  Enabled  is  Group  Notifications  Only  Mentions  Enabled  change  Group  Notifications  Only  Mentions  Enabled  is  In  App  Enabled  change  In  App  Enabled  is  In  App  Sound  Enabled  change  In  App  Sound  Enabled  is  In  App  Vibration  Enabled  change  In  App  Vibration  Enabled  is  Send  By  Enter  Enabled  change  Send  By  Enter  is  Markdown  Enabled  change  Markdown  get  Text  Size  change  Text  Size  is  Image  Auto  Download  Enabled  set  Image  Auto  Download  Enabled  is  Animation  Auto  Download  Enabled  set  Animation  Auto  Download  Enabled  is  Video  Auto  Download  Enabled  set  Video  Auto  Download  Enabled  is  Doc  Auto  Download  Enabled  set  Doc  Auto  Download  Enabled  is  Audio  Auto  Download  Enabled  set  Audio  Auto  Download  Enabled  is  Notifications  Enabled  change  Notifications  Enabled  get  Notification  Sound  change  Notification  Sound  is  Rename  Hint  Shown  get  Selected  Wallpapper  change  Selected  Wallpapper  get  Privacy  set  Privacy  is  Animation  Auto  Play  Enabled  set  Animation  Auto  Play  Enabled  get  Boolean  Value  get  Boolean  Value  set  Boolean  Value  get  String  Value  set  Int  get  Int  get  Bytes  set  Bytes  get  String  Value  set  String  Value  change  Value  read  Value  on  Updated  Setting  notify  Settings  Changed  reset  Module,1,0
235,build  Chat  List Peer  boolean Platform  Display  List  Message  check  Main  Thread  create  Display  List  get  Conversation  Engine  get  Messages  Module  context  get  Last  Read  Message  Date  get  Conversation  V  M  get  Messages  Module  context  init  Center  init  Top Display  Lists dialog  Global  List  contacts  Global  List  chats  Global  Lists  chats  Docs  Global  Lists Display  Lists  get  Contacts  Shared  List  get  Dialogs  Shared  List  get  Messages  Shared  List  get  Docs  Shared  List  build  Dialogs  List  build  Contact  List  build  Chat  Docs  List  build  Search  List Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
236,build  Chat  List Peer  boolean Platform  Display  List  Message  check  Main  Thread  create  Display  List  get  Conversation  Engine  get  Messages  Module  context  get  Last  Read  Message  Date  get  Conversation  V  M  get  Messages  Module  context  init  Center  init  Top Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Display  Lists dialog  Global  List  contacts  Global  List  chats  Global  Lists  chats  Docs  Global  Lists Display  Lists  get  Contacts  Shared  List  get  Dialogs  Shared  List  get  Messages  Shared  List  get  Docs  Shared  List  build  Dialogs  List  build  Contact  List  build  Chat  Docs  List  build  Search  List,1,0
237,build  Chat  Docs  List Peer  boolean Platform  Display  List  Message  check  Main  Thread  create  Display  List  get  Conversation  Docs  Engine  get  Messages  Module  context  init  Top Display  Lists dialog  Global  List  contacts  Global  List  chats  Global  Lists  chats  Docs  Global  Lists Display  Lists  get  Contacts  Shared  List  get  Dialogs  Shared  List  get  Messages  Shared  List  get  Docs  Shared  List  build  Dialogs  List  build  Contact  List  build  Chat  List  build  Search  List Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
238,build  Chat  Docs  List Peer  boolean Platform  Display  List  Message  check  Main  Thread  create  Display  List  get  Conversation  Docs  Engine  get  Messages  Module  context  init  Top Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Display  Lists dialog  Global  List  contacts  Global  List  chats  Global  Lists  chats  Docs  Global  Lists Display  Lists  get  Contacts  Shared  List  get  Dialogs  Shared  List  get  Messages  Shared  List  get  Docs  Shared  List  build  Dialogs  List  build  Contact  List  build  Chat  List  build  Search  List,1,0
239,on  New  Message Peer  Router  Int Promise  Void  add  on  New  Messages Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  User  Changed  on  Group  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
240,on  New  Message Peer  Router  Int Promise  Void  add  on  New  Messages Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  User  Changed  on  Group  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event,1,0
241,on  New  Message Peer  Router  Int Promise  Void  add  on  New  Messages Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  User  Changed  on  Group  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event Message creator  entity  name  rid  sort  Date  date  sender  Id  message  State  content  reactions  content  Index create  Instance  Message  Message  Message  from  Bytes  get  Rid  get  Sort  Date  get  Date  get  Sender  Id  get  Message  State  get  Reactions  get  Content  Index  is  Sent  is  Pending  Or  Sent  is  On  Server  get  Content  change  State  change  Date  change  All  Date  change  Content  change  Reactions  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search,0,0
242,on  New  Message Peer  Router  Int Promise  Void  add  on  New  Messages Message creator  entity  name  rid  sort  Date  date  sender  Id  message  State  content  reactions  content  Index create  Instance  Message  Message  Message  from  Bytes  get  Rid  get  Sort  Date  get  Date  get  Sender  Id  get  Message  State  get  Reactions  get  Content  Index  is  Sent  is  Pending  Or  Sent  is  On  Server  get  Content  change  State  change  Date  change  All  Date  change  Content  change  Reactions  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  User  Changed  on  Group  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event,1,1
243,on  User  Changed User Promise  Void  add  on  Users  Changed Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  Group  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event User record  id  record  full  id  creator  uid  access  Hash  name  local  Name  username  about  avatar  sex  is  Bot  records  is  Blocked  time  Zone  is  Verified  commands  have  Extension User  User  User  peer  get  Uid  get  Access  Hash  get  Server  Name  get  Local  Name  get  Name  get  Nick  get  About  get  Avatar  get  Sex  is  Have  Extension  get  Records  is  Bot  get  Commands  is  Blocked  get  Time  Zone  is  Verified  edit  Name  edit  Local  Name  edit  Nick  edit  Ext  edit  Avatar  update  Ext  edit  About  edit  Preferred  Languages  edit  Time  Zone  edit  Contacts  edit  Bot  Commands  edit  Full  Ext  edit  Blocked  apply  Wrapped  parse  serialize  get  Engine  Id  create  Instance  create  Ext  Instance  on  User  Desc  Changed,0,0
244,on  User  Changed User Promise  Void  add  on  Users  Changed User record  id  record  full  id  creator  uid  access  Hash  name  local  Name  username  about  avatar  sex  is  Bot  records  is  Blocked  time  Zone  is  Verified  commands  have  Extension User  User  User  peer  get  Uid  get  Access  Hash  get  Server  Name  get  Local  Name  get  Name  get  Nick  get  About  get  Avatar  get  Sex  is  Have  Extension  get  Records  is  Bot  get  Commands  is  Blocked  get  Time  Zone  is  Verified  edit  Name  edit  Local  Name  edit  Nick  edit  Ext  edit  Avatar  update  Ext  edit  About  edit  Preferred  Languages  edit  Time  Zone  edit  Contacts  edit  Bot  Commands  edit  Full  Ext  edit  Blocked  apply  Wrapped  parse  serialize  get  Engine  Id  create  Instance  create  Ext  Instance  on  User  Desc  Changed Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  Group  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event,1,0
245,on  Group  Changed Group Promise  Void  add  on  Groups  Changed Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  User  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event Group record  id  record  ext  id  creator  group  Id  access  Hash  title  avatar  is  Hidden  members  Count  is  Member  is  Can  Send  Message  is  Can  Clear  is  Can  Leave  is  Can  Delete  is  Deleted  is  Can  Join  is  Can  View  Info  ext  group  Type  owner  Id  topic  about  short  Name  members  is  Async  Members  is  Can  Invite  Members  is  Can  Invite  Via  Link  is  Can  Call  is  Can  View  Members  is  Shared  History  is  Can  Edit  Info  is  Can  Edit  Administration  is  Can  View  Admins  is  Can  Edit  Admins  is  Can  Kick  Invited  is  Can  Kick  Anyone  is  Can  Edit  Foreign  is  Can  Delete  Foreign  have  Extension Group  Group  Group  get  Group  Id  get  Access  Hash  get  Title  get  Avatar  is  Hidden  get  Members  Count  is  Member  is  Deleted  is  Can  Send  Message  is  Can  Clear  is  Can  Leave  is  Can  Delete  is  Can  Call  is  Can  Join  is  Can  View  Info  get  Group  Type  get  Members  get  Topic  get  About  get  Short  Name  get  Owner  Id  is  Async  Members  is  Can  Invite  Members  is  Can  View  Members  is  Can  Edit  Info  is  Shared  History  is  Have  Extension  is  Can  Edit  Administration  is  Can  View  Admins  is  Can  Edit  Admins  is  Can  Invite  Via  Link  is  Can  Kick  Invited  is  Can  Kick  Anyone  is  Can  Edit  Foreign  is  Can  Delete  Foreign  get  Ext  update  Ext  edit  Title  edit  Avatar  edit  Is  Member  edit  Is  Deleted  edit  Permissions  edit  Ext  edit  Members  edit  Members  edit  Members  Count  edit  Members  Became  Async  edit  Member  Changed  Admin  edit  Topic  edit  About  edit  Short  Name  edit  Full  Ext  edit  Owner  edit  History  Shared  edit  Ext  Permissions  apply  Wrapped  get  Engine  Id  peer  create  Instance  create  Ext  Instance,0,0
246,on  Group  Changed Group Promise  Void  add  on  Groups  Changed Group record  id  record  ext  id  creator  group  Id  access  Hash  title  avatar  is  Hidden  members  Count  is  Member  is  Can  Send  Message  is  Can  Clear  is  Can  Leave  is  Can  Delete  is  Deleted  is  Can  Join  is  Can  View  Info  ext  group  Type  owner  Id  topic  about  short  Name  members  is  Async  Members  is  Can  Invite  Members  is  Can  Invite  Via  Link  is  Can  Call  is  Can  View  Members  is  Shared  History  is  Can  Edit  Info  is  Can  Edit  Administration  is  Can  View  Admins  is  Can  Edit  Admins  is  Can  Kick  Invited  is  Can  Kick  Anyone  is  Can  Edit  Foreign  is  Can  Delete  Foreign  have  Extension Group  Group  Group  get  Group  Id  get  Access  Hash  get  Title  get  Avatar  is  Hidden  get  Members  Count  is  Member  is  Deleted  is  Can  Send  Message  is  Can  Clear  is  Can  Leave  is  Can  Delete  is  Can  Call  is  Can  Join  is  Can  View  Info  get  Group  Type  get  Members  get  Topic  get  About  get  Short  Name  get  Owner  Id  is  Async  Members  is  Can  Invite  Members  is  Can  View  Members  is  Can  Edit  Info  is  Shared  History  is  Have  Extension  is  Can  Edit  Administration  is  Can  View  Admins  is  Can  Edit  Admins  is  Can  Invite  Via  Link  is  Can  Kick  Invited  is  Can  Kick  Anyone  is  Can  Edit  Foreign  is  Can  Delete  Foreign  get  Ext  update  Ext  edit  Title  edit  Avatar  edit  Is  Member  edit  Is  Deleted  edit  Permissions  edit  Ext  edit  Members  edit  Members  edit  Members  Count  edit  Members  Became  Async  edit  Member  Changed  Admin  edit  Topic  edit  About  edit  Short  Name  edit  Full  Ext  edit  Owner  edit  History  Shared  edit  Ext  Permissions  apply  Wrapped  get  Engine  Id  peer  create  Instance  create  Ext  Instance Router  Int context Router  Int  on  Difference  Start  on  Update  on  Difference  End  on  New  Messages  on  Outgoing  Message  on  Outgoing  Error  on  Content  Changed  on  Messages  Deleted  on  Dialogs  History  Loaded  on  Chat  History  Loaded  on  User  Changed  on  Users  Changed  on  Groups  Changed  on  Peers  Changed  on  Chat  Reset  on  Bus  Event,1,0
247,on  Chat  Drop  Cache Peer Promise  Void  reset  get  History  Actor  get  Messages  Module  context Router  Actor tag  dumb  visible  Peers  is  App  Visible  conversation  States  active  Dialog  Storage Router  Actor  pre  Start  on  Active  Dialogs  Changed  on  New  Messages  on  Outgoing  Message  on  Outgoing  Sent  on  Outgoing  Error  on  Dialog  History  Loaded  on  Chat  History  Loaded  on  Content  Update  on  Reactions  Update  on  Message  Deleted  on  Chat  Clear  on  Chat  Reset  on  Chat  Delete  on  Message  Read  on  Message  Received  on  Message  Read  By  Me  on  Peers  Changed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  is  Conversation  Visible  mark  As  Read  If  Needed  update  Chat  State  on  Difference  Start  on  Difference  End  get  Dialogs  Router  conversation  notify  Active  Dialogs  V  M  is  Valid  Peer  on  Update  on  Receive  on  Ask Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
248,on  Chat  Drop  Cache Peer Promise  Void  reset  get  History  Actor  get  Messages  Module  context Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Router  Actor tag  dumb  visible  Peers  is  App  Visible  conversation  States  active  Dialog  Storage Router  Actor  pre  Start  on  Active  Dialogs  Changed  on  New  Messages  on  Outgoing  Message  on  Outgoing  Sent  on  Outgoing  Error  on  Dialog  History  Loaded  on  Chat  History  Loaded  on  Content  Update  on  Reactions  Update  on  Message  Deleted  on  Chat  Clear  on  Chat  Reset  on  Chat  Delete  on  Message  Read  on  Message  Received  on  Message  Read  By  Me  on  Peers  Changed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  is  Conversation  Visible  mark  As  Read  If  Needed  update  Chat  State  on  Difference  Start  on  Difference  End  get  Dialogs  Router  conversation  notify  Active  Dialogs  V  M  is  Valid  Peer  on  Update  on  Receive  on  Ask,1,0
249,conversation Peer List  Engine  Message  get  Conversation  Engine  get  Messages  Module  context Router  Actor tag  dumb  visible  Peers  is  App  Visible  conversation  States  active  Dialog  Storage Router  Actor  pre  Start  on  Active  Dialogs  Changed  on  New  Messages  on  Outgoing  Message  on  Outgoing  Sent  on  Outgoing  Error  on  Dialog  History  Loaded  on  Chat  History  Loaded  on  Content  Update  on  Reactions  Update  on  Message  Deleted  on  Chat  Clear  on  Chat  Drop  Cache  on  Chat  Reset  on  Chat  Delete  on  Message  Read  on  Message  Received  on  Message  Read  By  Me  on  Peers  Changed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  is  Conversation  Visible  mark  As  Read  If  Needed  update  Chat  State  on  Difference  Start  on  Difference  End  get  Dialogs  Router  notify  Active  Dialogs  V  M  is  Valid  Peer  on  Update  on  Receive  on  Ask Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
250,conversation Peer List  Engine  Message  get  Conversation  Engine  get  Messages  Module  context Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Router  Actor tag  dumb  visible  Peers  is  App  Visible  conversation  States  active  Dialog  Storage Router  Actor  pre  Start  on  Active  Dialogs  Changed  on  New  Messages  on  Outgoing  Message  on  Outgoing  Sent  on  Outgoing  Error  on  Dialog  History  Loaded  on  Chat  History  Loaded  on  Content  Update  on  Reactions  Update  on  Message  Deleted  on  Chat  Clear  on  Chat  Drop  Cache  on  Chat  Reset  on  Chat  Delete  on  Message  Read  on  Message  Received  on  Message  Read  By  Me  on  Peers  Changed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  is  Conversation  Visible  mark  As  Read  If  Needed  update  Chat  State  on  Difference  Start  on  Difference  End  get  Dialogs  Router  notify  Active  Dialogs  V  M  is  Valid  Peer  on  Update  on  Receive  on  Ask,1,0
251,is  Valid  Peer Peer boolean  get  Peer  Type  get  Value  users  get  Peer  Id  get  Peer  Type  get  Value  groups  get  Peer  Id Router  Actor tag  dumb  visible  Peers  is  App  Visible  conversation  States  active  Dialog  Storage Router  Actor  pre  Start  on  Active  Dialogs  Changed  on  New  Messages  on  Outgoing  Message  on  Outgoing  Sent  on  Outgoing  Error  on  Dialog  History  Loaded  on  Chat  History  Loaded  on  Content  Update  on  Reactions  Update  on  Message  Deleted  on  Chat  Clear  on  Chat  Drop  Cache  on  Chat  Reset  on  Chat  Delete  on  Message  Read  on  Message  Received  on  Message  Read  By  Me  on  Peers  Changed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  is  Conversation  Visible  mark  As  Read  If  Needed  update  Chat  State  on  Difference  Start  on  Difference  End  get  Dialogs  Router  conversation  notify  Active  Dialogs  V  M  on  Update  on  Receive  on  Ask Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
252,is  Valid  Peer Peer boolean  get  Peer  Type  get  Value  users  get  Peer  Id  get  Peer  Type  get  Value  groups  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Router  Actor tag  dumb  visible  Peers  is  App  Visible  conversation  States  active  Dialog  Storage Router  Actor  pre  Start  on  Active  Dialogs  Changed  on  New  Messages  on  Outgoing  Message  on  Outgoing  Sent  on  Outgoing  Error  on  Dialog  History  Loaded  on  Chat  History  Loaded  on  Content  Update  on  Reactions  Update  on  Message  Deleted  on  Chat  Clear  on  Chat  Drop  Cache  on  Chat  Reset  on  Chat  Delete  on  Message  Read  on  Message  Received  on  Message  Read  By  Me  on  Peers  Changed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  is  Conversation  Visible  mark  As  Read  If  Needed  update  Chat  State  on  Difference  Start  on  Difference  End  get  Dialogs  Router  conversation  notify  Active  Dialogs  V  M  on  Update  on  Receive  on  Ask,1,0
253,perform  Send  Api  Content Peer  long  Wake  Lock  Sender  Actor void  buid  Out  Peer  build  Api  Peer  request Sender  Actor preferences  pending  Messages  last  Send  Date  file  Uplaoding  Wake  Locks  Send  Document  peer  fast  Thumb  descriptor  file  Name  mime  Type  file  Size  Forward  Content  peer  content  Send  Photo  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Animation  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Video  peer  file  Name  w  h  duration  fast  Thumb  descriptor  file  Size  Send  Audio  peer  descriptor  file  Name  file  Size  duration  Send  Text  peer  text  mark  Down  Text  mentions  auto  Detect  Send  Contact  peer  phones  emails  name  basephoto  Message  Sent  peer  rid  Message  Error  peer  rid  Send  Location  peer  longitude  latitude  street  place  Send  Sticker  peer  sticker  Send  Json  peer  json Sender  Actor  pre  Start  create  Pending  Date  do  Send  Text  do  Send  Json  do  Send  Sticker  do  Send  Contact  do  Send  Location  do  Forward  Content  do  Send  Document  do  Send  Photo  do  Send  Audio  do  Send  Video  do  Send  Animation  perform  Upload  File  on  File  Uploaded  on  File  Upload  Error  perform  Send  Content  on  Sent  on  Error  save  Pending  find  Pending  on  Receive  Send  Document  get  Fast  Thumb  get  File  Size  get  File  Name  get  Mime  Type  get  Peer  get  Descriptor  Forward  Content  get  Peer  get  Content  Send  Photo  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Animation  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Video  get  Peer  get  File  Name  get  W  get  H  get  Duration  get  Fast  Thumb  get  Descriptor  get  File  Size  Send  Audio  get  Peer  get  Duration  get  Descriptor  get  File  Name  get  File  Size  Send  Text  get  Peer  get  Text  get  Mark  Down  Text  get  Mentions  is  Auto  Detect  Send  Contact  get  Peer  get  Phones  get  Emails  get  Name  get  Basephoto  Message  Sent  get  Peer  get  Rid  Message  Error  get  Peer  get  Rid  Send  Location  get  Peer  get  Longitude  get  Latitude  get  Street  get  Place  Send  Sticker  get  Peer  get  Sticker  Send  Json  get  Json  get  Peer Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
254,perform  Send  Api  Content Peer  long  Wake  Lock  Sender  Actor void  buid  Out  Peer  build  Api  Peer  request Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Sender  Actor preferences  pending  Messages  last  Send  Date  file  Uplaoding  Wake  Locks  Send  Document  peer  fast  Thumb  descriptor  file  Name  mime  Type  file  Size  Forward  Content  peer  content  Send  Photo  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Animation  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Video  peer  file  Name  w  h  duration  fast  Thumb  descriptor  file  Size  Send  Audio  peer  descriptor  file  Name  file  Size  duration  Send  Text  peer  text  mark  Down  Text  mentions  auto  Detect  Send  Contact  peer  phones  emails  name  basephoto  Message  Sent  peer  rid  Message  Error  peer  rid  Send  Location  peer  longitude  latitude  street  place  Send  Sticker  peer  sticker  Send  Json  peer  json Sender  Actor  pre  Start  create  Pending  Date  do  Send  Text  do  Send  Json  do  Send  Sticker  do  Send  Contact  do  Send  Location  do  Forward  Content  do  Send  Document  do  Send  Photo  do  Send  Audio  do  Send  Video  do  Send  Animation  perform  Upload  File  on  File  Uploaded  on  File  Upload  Error  perform  Send  Content  on  Sent  on  Error  save  Pending  find  Pending  on  Receive  Send  Document  get  Fast  Thumb  get  File  Size  get  File  Name  get  Mime  Type  get  Peer  get  Descriptor  Forward  Content  get  Peer  get  Content  Send  Photo  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Animation  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Video  get  Peer  get  File  Name  get  W  get  H  get  Duration  get  Fast  Thumb  get  Descriptor  get  File  Size  Send  Audio  get  Peer  get  Duration  get  Descriptor  get  File  Name  get  File  Size  Send  Text  get  Peer  get  Text  get  Mark  Down  Text  get  Mentions  is  Auto  Detect  Send  Contact  get  Peer  get  Phones  get  Emails  get  Name  get  Basephoto  Message  Sent  get  Peer  get  Rid  Message  Error  get  Peer  get  Rid  Send  Location  get  Peer  get  Longitude  get  Latitude  get  Street  get  Place  Send  Sticker  get  Peer  get  Sticker  Send  Json  get  Json  get  Peer,1,0
255,perform  Send  Api  Content Peer  long  Wake  Lock  Sender  Actor void  buid  Out  Peer  build  Api  Peer  request Sender  Actor preferences  pending  Messages  last  Send  Date  file  Uplaoding  Wake  Locks  Send  Document  peer  fast  Thumb  descriptor  file  Name  mime  Type  file  Size  Forward  Content  peer  content  Send  Photo  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Animation  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Video  peer  file  Name  w  h  duration  fast  Thumb  descriptor  file  Size  Send  Audio  peer  descriptor  file  Name  file  Size  duration  Send  Text  peer  text  mark  Down  Text  mentions  auto  Detect  Send  Contact  peer  phones  emails  name  basephoto  Message  Sent  peer  rid  Message  Error  peer  rid  Send  Location  peer  longitude  latitude  street  place  Send  Sticker  peer  sticker  Send  Json  peer  json Sender  Actor  pre  Start  create  Pending  Date  do  Send  Text  do  Send  Json  do  Send  Sticker  do  Send  Contact  do  Send  Location  do  Forward  Content  do  Send  Document  do  Send  Photo  do  Send  Audio  do  Send  Video  do  Send  Animation  perform  Upload  File  on  File  Uploaded  on  File  Upload  Error  perform  Send  Content  on  Sent  on  Error  save  Pending  find  Pending  on  Receive  Send  Document  get  Fast  Thumb  get  File  Size  get  File  Name  get  Mime  Type  get  Peer  get  Descriptor  Forward  Content  get  Peer  get  Content  Send  Photo  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Animation  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Video  get  Peer  get  File  Name  get  W  get  H  get  Duration  get  Fast  Thumb  get  Descriptor  get  File  Size  Send  Audio  get  Peer  get  Duration  get  Descriptor  get  File  Name  get  File  Size  Send  Text  get  Peer  get  Text  get  Mark  Down  Text  get  Mentions  is  Auto  Detect  Send  Contact  get  Peer  get  Phones  get  Emails  get  Name  get  Basephoto  Message  Sent  get  Peer  get  Rid  Message  Error  get  Peer  get  Rid  Send  Location  get  Peer  get  Longitude  get  Latitude  get  Street  get  Place  Send  Sticker  get  Peer  get  Sticker  Send  Json  get  Json  get  Peer Api  Message  from  Bytes  get  Header  build  Container  on  Result  on  Error,0,0
256,perform  Send  Api  Content Peer  long  Wake  Lock  Sender  Actor void  buid  Out  Peer  build  Api  Peer  request Api  Message  from  Bytes  get  Header  build  Container  on  Result  on  Error Sender  Actor preferences  pending  Messages  last  Send  Date  file  Uplaoding  Wake  Locks  Send  Document  peer  fast  Thumb  descriptor  file  Name  mime  Type  file  Size  Forward  Content  peer  content  Send  Photo  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Animation  peer  fast  Thumb  descriptor  file  Name  file  Size  w  h  Send  Video  peer  file  Name  w  h  duration  fast  Thumb  descriptor  file  Size  Send  Audio  peer  descriptor  file  Name  file  Size  duration  Send  Text  peer  text  mark  Down  Text  mentions  auto  Detect  Send  Contact  peer  phones  emails  name  basephoto  Message  Sent  peer  rid  Message  Error  peer  rid  Send  Location  peer  longitude  latitude  street  place  Send  Sticker  peer  sticker  Send  Json  peer  json Sender  Actor  pre  Start  create  Pending  Date  do  Send  Text  do  Send  Json  do  Send  Sticker  do  Send  Contact  do  Send  Location  do  Forward  Content  do  Send  Document  do  Send  Photo  do  Send  Audio  do  Send  Video  do  Send  Animation  perform  Upload  File  on  File  Uploaded  on  File  Upload  Error  perform  Send  Content  on  Sent  on  Error  save  Pending  find  Pending  on  Receive  Send  Document  get  Fast  Thumb  get  File  Size  get  File  Name  get  Mime  Type  get  Peer  get  Descriptor  Forward  Content  get  Peer  get  Content  Send  Photo  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Animation  get  Peer  get  Fast  Thumb  get  Descriptor  get  File  Name  get  File  Size  get  W  get  H  Send  Video  get  Peer  get  File  Name  get  W  get  H  get  Duration  get  Fast  Thumb  get  Descriptor  get  File  Size  Send  Audio  get  Peer  get  Duration  get  Descriptor  get  File  Name  get  File  Size  Send  Text  get  Peer  get  Text  get  Mark  Down  Text  get  Mentions  is  Auto  Detect  Send  Contact  get  Peer  get  Phones  get  Emails  get  Name  get  Basephoto  Message  Sent  get  Peer  get  Rid  Message  Error  get  Peer  get  Rid  Send  Location  get  Peer  get  Longitude  get  Latitude  get  Street  get  Place  Send  Sticker  get  Peer  get  Sticker  Send  Json  get  Json  get  Peer,1,1
257,update  Search Dialog void  add  on  Dialogs  Changed  get  Search  Module  context Dialogs  Actor dialogs  is  Empty  empty  Notified  Peer  Desc  title  avatar  is  Bot  is  Channel Dialogs  Actor  pre  Start  on  Message  on  User  Changed  on  Group  Changed  on  Chat  Deleted  on  Chat  Clear  on  Peer  Read  on  Peer  Receive  on  Message  Content  Changed  on  Counter  Changed  on  History  Loaded  add  Or  Update  Items  add  Or  Update  Item  update  Search  notify  State  build  Peer  Desc  on  Receive  on  Ask  Peer  Desc  get  Title  get  Avatar  is  Bot  is  Channel Dialog entity  name  max  length  creator  peer  dialog  Title  dialog  Avatar  is  Bot  is  Channel  unread  Count  rid  sort  Date  sender  Id  date  known  Read  Date  known  Receive  Date  message  Type  text  related  Uid create  Instance  Dialog  Dialog  from  Bytes  get  Peer  get  Dialog  Title  get  Dialog  Avatar  is  Bot  is  Channel  get  Unread  Count  get  Rid  get  Sort  Date  get  Sender  Id  get  Date  get  Message  Type  get  Text  get  Related  Uid  get  Known  Read  Date  get  Known  Receive  Date  is  Read  is  Received  edit  Peer  Info  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  format  Dialog  Text,0,0
258,update  Search Dialog void  add  on  Dialogs  Changed  get  Search  Module  context Dialog entity  name  max  length  creator  peer  dialog  Title  dialog  Avatar  is  Bot  is  Channel  unread  Count  rid  sort  Date  sender  Id  date  known  Read  Date  known  Receive  Date  message  Type  text  related  Uid create  Instance  Dialog  Dialog  from  Bytes  get  Peer  get  Dialog  Title  get  Dialog  Avatar  is  Bot  is  Channel  get  Unread  Count  get  Rid  get  Sort  Date  get  Sender  Id  get  Date  get  Message  Type  get  Text  get  Related  Uid  get  Known  Read  Date  get  Known  Receive  Date  is  Read  is  Received  edit  Peer  Info  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  format  Dialog  Text Dialogs  Actor dialogs  is  Empty  empty  Notified  Peer  Desc  title  avatar  is  Bot  is  Channel Dialogs  Actor  pre  Start  on  Message  on  User  Changed  on  Group  Changed  on  Chat  Deleted  on  Chat  Clear  on  Peer  Read  on  Peer  Receive  on  Message  Content  Changed  on  Counter  Changed  on  History  Loaded  add  Or  Update  Items  add  Or  Update  Item  update  Search  notify  State  build  Peer  Desc  on  Receive  on  Ask  Peer  Desc  get  Title  get  Avatar  is  Bot  is  Channel,1,0
259,send  Message Peer  String  String  Array  List  Integer  boolean void  on  Message  Sent  get  Typing  Module  context  send Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
260,send  Message Peer  String  String  Array  List  Integer  boolean void  on  Message  Sent  get  Typing  Module  context  send Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
261,send  Photo Peer  String  int  int  String  Messages  Module void  file  From  Descriptor  send  get  Send  Message  Actor  get  Size Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
262,send  Photo Peer  String  int  int  String  Messages  Module void  file  From  Descriptor  send  get  Send  Message  Actor  get  Size Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
263,send  Photo Peer  String  int  int  String  Messages  Module void  file  From  Descriptor  send  get  Send  Message  Actor  get  Size Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image,0,0
264,send  Photo Peer  String  int  int  String  Messages  Module void  file  From  Descriptor  send  get  Send  Message  Actor  get  Size Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,1
265,send  Animation Peer  String  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
266,send  Animation Peer  String  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
267,send  Animation Peer  String  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image  send  Photo,0,0
268,send  Animation Peer  String  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image  send  Photo Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
269,send  Video Peer  String  int  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
270,send  Video Peer  String  int  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
271,send  Video Peer  String  int  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image  send  Photo,0,0
272,send  Video Peer  String  int  int  int  Fast  Thumb  String void  file  From  Descriptor  send  get  Size Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image  send  Photo Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
273,send  Audio Peer  String  int  String void  file  From  Descriptor  send  get  Size Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
274,send  Audio Peer  String  int  String void  file  From  Descriptor  send  get  Size Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
275,send  Document Peer  String  String  Fast  Thumb  String void  file  From  Descriptor  send  get  Size  get  Descriptor Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
276,send  Document Peer  String  String  Fast  Thumb  String void  file  From  Descriptor  send  get  Size  get  Descriptor Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
277,send  Document Peer  String  String  Fast  Thumb  String void  file  From  Descriptor  send  get  Size  get  Descriptor Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image  send  Photo,0,0
278,send  Document Peer  String  String  Fast  Thumb  String void  file  From  Descriptor  send  get  Size  get  Descriptor Fast  Thumb w  h  image Fast  Thumb  Fast  Thumb  Fast  Thumb  get  W  get  H  get  Image  send  Photo Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
279,update  Message Peer  String  long Promise  Void  on  Message  Sent  get  Typing  Module  context  create  get  Peer  Type  get  Value  groups  get  Peer  Id  to  Lower  Case  get  Members  get  Value  users  get  Uid  get  Nick  to  Lower  Case  get  Nick  contains  contains  contains  ends  With  equals  add  get  Uid  get  Mentions  get  Text  Message  Ex  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
280,update  Message Peer  String  long Promise  Void  on  Message  Sent  get  Typing  Module  context  create  get  Peer  Type  get  Value  groups  get  Peer  Id  to  Lower  Case  get  Members  get  Value  users  get  Uid  get  Nick  to  Lower  Case  get  Nick  contains  contains  contains  ends  With  equals  add  get  Uid  get  Mentions  get  Text  Message  Ex  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
281,save  Draft Peer  String void  set  String  Value  get  Settings  Module  context  get  Unuque  Id Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
282,save  Draft Peer  String void  set  String  Value  get  Settings  Module  context  get  Unuque  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
283,load  Draft Peer String  get  String  Value  get  Settings  Module  context  get  Unuque  Id Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
284,load  Draft Peer String  get  String  Value  get  Settings  Module  context  get  Unuque  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
285,add  Reaction Peer  long  String Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id  get  Reactions Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
286,add  Reaction Peer  long  String Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id  get  Reactions Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
287,remove  Reaction Peer  long  String Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id  get  Reactions Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
288,remove  Reaction Peer  long  String Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id  get  Reactions Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
289,favorite  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  get  Groups Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
290,favorite  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  get  Groups Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
291,unfavorite  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  get  Groups Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
292,unfavorite  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  get  Groups Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
293,archive  Chat Peer Promise  Void  map  flat  Map  build  Out  Peer  api Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
294,archive  Chat Peer Promise  Void  map  flat  Map  build  Out  Peer  api Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
295,delete  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
296,delete  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
297,clear  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
298,clear  Chat Peer Promise  Void  flat  Map  flat  Map  build  Out  Peer  api  apply  Update  updates  get  Seq  get  State  to  Api  get  Peer  Type  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  load  More  History  reset  Module  on  Bus  Event,1,0
299,load  More  History Peer void  dispatch  load  More  get  History  Actor Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  reset  Module  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
300,load  More  History Peer void  dispatch  load  More  get  History  Actor Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messages  Module dialogs  key  version  dumb  history  Loader  Actors  conversation  Engines  conversation  Docs  Engines  cursor  Storage  dialog  Groups  dialogs  dialogs  Int  dialogs  History  Actor  archived  Dialogs  Actor  plain  Read  Actor  plain  Receiver  Actor  send  Message  Actor  deletions  Actor  router  conversation  States Messages  Module  run  get  Dialog  Groups  V  M  get  Send  Message  Actor  get  Plain  Read  Actor  get  Plain  Receiver  Actor  get  History  Actor  get  Cursor  Storage  get  Router  get  Conversation  Engine  get  Conversation  Docs  Engine  get  Conversation  States  get  Conversation  V  M  get  Dialogs  Int  get  Dialogs  Engine  send  Message  send  Contact  send  Animation  send  Video  send  Audio  send  Location  send  Json  send  Document  update  Message  chat  Is  Empty  forward  Content  send  Sticker  save  Draft  load  Draft  add  Reaction  remove  Reaction  favorite  Chat  unfavorite  Chat  archive  Chat  delete  Chat  clear  Chat  delete  Messages  load  More  Dialogs  load  More  Archived  Dialogs  reset  Module  on  Bus  Event,1,0
301,on  Difference  Messages List  Update  Message  Messages  Processor Promise  Void  convert  from  Message  get  Message  add  get  Rid  get  Date  get  Date  get  Sender  Uid  my  Uid  get  Sender  Uid  on  New  Messages  get  Router  get  Messages  Module  context Messages  Processor  Messages  Processor  on  Difference  Start  on  Difference  End  process Api  Peer type  id Api  Peer  Api  Peer  get  Type  get  Id  parse  serialize  to  String,0,0
302,on  Difference  Messages List  Update  Message  Messages  Processor Promise  Void  convert  from  Message  get  Message  add  get  Rid  get  Date  get  Date  get  Sender  Uid  my  Uid  get  Sender  Uid  on  New  Messages  get  Router  get  Messages  Module  context Api  Peer type  id Api  Peer  Api  Peer  get  Type  get  Id  parse  serialize  to  String Messages  Processor  Messages  Processor  on  Difference  Start  on  Difference  End  process,1,1
303,add  User  Key  Group User  Keys User  Keys  get  User  Keys  Groups  add  add  get  Uid  to  Array  size User  Keys uid  user  Keys  Groups User  Keys  User  Keys  get  Uid  get  User  Keys  Groups  remove  User  Key  Group  parse  serialize User  Keys  Group key  Group  Id  identity  Key  keys  ephemeral  Keys User  Keys  Group  User  Keys  Group  by  key  group  apply  get  Key  Group  Id  get  Identity  Key  get  Keys  get  Ephemeral  Keys  add  Public  Key  parse  serialize,0,0
304,add  User  Key  Group User  Keys User  Keys  get  User  Keys  Groups  add  add  get  Uid  to  Array  size User  Keys  Group key  Group  Id  identity  Key  keys  ephemeral  Keys User  Keys  Group  User  Keys  Group  by  key  group  apply  get  Key  Group  Id  get  Identity  Key  get  Keys  get  Ephemeral  Keys  add  Public  Key  parse  serialize User  Keys uid  user  Keys  Groups User  Keys  User  Keys  get  Uid  get  User  Keys  Groups  remove  User  Key  Group  parse  serialize,1,1
305,add  Public  Key Public  Key User  Keys  Group ephemeral  Keys get  Key  Id  get  Key  Id  add  add  to  Array  size User  Keys  Group key  Group  Id  identity  Key  keys  ephemeral  Keys User  Keys  Group  User  Keys  Group  by  key  group  apply  get  Key  Group  Id  get  Identity  Key  get  Keys  get  Ephemeral  Keys  parse  serialize  add  User  Key  Group Public  Key key  Id  key  Alg  public  Key Public  Key  Public  Key  get  Key  Id  get  Key  Alg  get  Public  Key  parse  serialize,0,0
306,add  Public  Key Public  Key User  Keys  Group ephemeral  Keys get  Key  Id  get  Key  Id  add  add  to  Array  size Public  Key key  Id  key  Alg  public  Key Public  Key  Public  Key  get  Key  Id  get  Key  Alg  get  Public  Key  parse  serialize User  Keys  Group key  Group  Id  identity  Key  keys  ephemeral  Keys User  Keys  Group  User  Keys  Group  by  key  group  apply  get  Key  Group  Id  get  Identity  Key  get  Keys  get  Ephemeral  Keys  parse  serialize  add  User  Key  Group,1,0
307,decrypt  Other byte  Encrypted  Session  Actor Encrypted  Session  Actor  Decrypted  Package  decrypt  print  Stack  Trace Encrypted  Session  Actor tag  max  decrypt  chains  uid  session  key  Manager  latest  Their  Ephemeral  Key  encryption  Chains  decryption  Chains  Encrypt  Package  data  Encrypted  Package  Res  data  key  Group  Id  Decrypt  Package  data  Decrypted  Package  data Encrypted  Session  Actor  pre  Start  on  Encrypt  apply  apply  on  Decrypt  apply  apply  apply  pick  Encrypt  Chain  encrypt  pick  Decrypt  Chain  apply  on  Ask  Encrypt  Package  get  Data  Encrypted  Package  Res  get  Data  get  Key  Group  Id  Decrypt  Package  get  Data  Decrypted  Package  get  Data Encrypted  Session  Chain session  own  Private  Key  their  Public  Key  received  Counters  sent  Counter  root  Chain  Key Encrypted  Session  Chain  get  Session  get  Own  Private  Key  get  Their  Public  Key  decrypt  encrypt  safe  Erase,0,0
308,decrypt  Other byte  Encrypted  Session  Actor Encrypted  Session  Actor  Decrypted  Package  decrypt  print  Stack  Trace Encrypted  Session  Chain session  own  Private  Key  their  Public  Key  received  Counters  sent  Counter  root  Chain  Key Encrypted  Session  Chain  get  Session  get  Own  Private  Key  get  Their  Public  Key  decrypt  encrypt  safe  Erase Encrypted  Session  Actor tag  max  decrypt  chains  uid  session  key  Manager  latest  Their  Ephemeral  Key  encryption  Chains  decryption  Chains  Encrypt  Package  data  Encrypted  Package  Res  data  key  Group  Id  Decrypt  Package  data  Decrypted  Package  data Encrypted  Session  Actor  pre  Start  on  Encrypt  apply  apply  on  Decrypt  apply  apply  apply  pick  Encrypt  Chain  encrypt  pick  Decrypt  Chain  apply  on  Ask  Encrypt  Package  get  Data  Encrypted  Package  Res  get  Data  get  Key  Group  Id  Decrypt  Package  get  Data  Decrypted  Package  get  Data,1,1
309,is  Notifications  Enabled Peer  boolean boolean  is  Notifications  Enabled  get  Settings  Module  context  get  Peer  Type  is  Hidden  get  Group  get  Peer  Id  is  Group  Notifications  Enabled  get  Settings  Module  context  is  Notifications  Enabled  get  Settings  Module  context  is  Group  Notifications  Only  Mentions  Enabled  get  Settings  Module  context  get  Peer  Type  is  Notifications  Enabled  get  Settings  Module  context Notifications  Actor max  notification  count  storage  notifications  deprecated  storage  notifications  storage  pending  Storage  all  Pending  Notifications  read  States  visible  Peer  is  App  Visible  is  Notifications  Paused  notifications  During  Pause  is  Mobile  Platform  New  Message  peer  sender  sort  Date  content  Description  has  Current  User  Mention  unread  Messages  Count  unread  Dialogs  Count  Messages  Read  peer  from  Date  Pause  Notifications  Resume  Notifications Notifications  Actor  pre  Start  on  New  Message  on  Messages  Read  on  Notifications  Paused  on  Notifications  Resumed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  play  Effect  If  Enabled  update  Notification  show  Notification  hide  Notification  perform  Notification  Imp  is  Effects  Enabled  get  Notifications  save  Storage  get  Last  Read  Date  set  Last  Read  Date  on  Receive  on  Bus  Event  New  Message  get  Peer  get  Sender  get  Sort  Date  get  Content  Description  get  Has  Current  User  Mention  get  Unread  Messages  Count  get  Unread  Dialogs  Count  Messages  Read  get  Peer  get  From  Date Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
310,is  Notifications  Enabled Peer  boolean boolean  is  Notifications  Enabled  get  Settings  Module  context  get  Peer  Type  is  Hidden  get  Group  get  Peer  Id  is  Group  Notifications  Enabled  get  Settings  Module  context  is  Notifications  Enabled  get  Settings  Module  context  is  Group  Notifications  Only  Mentions  Enabled  get  Settings  Module  context  get  Peer  Type  is  Notifications  Enabled  get  Settings  Module  context Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Notifications  Actor max  notification  count  storage  notifications  deprecated  storage  notifications  storage  pending  Storage  all  Pending  Notifications  read  States  visible  Peer  is  App  Visible  is  Notifications  Paused  notifications  During  Pause  is  Mobile  Platform  New  Message  peer  sender  sort  Date  content  Description  has  Current  User  Mention  unread  Messages  Count  unread  Dialogs  Count  Messages  Read  peer  from  Date  Pause  Notifications  Resume  Notifications Notifications  Actor  pre  Start  on  New  Message  on  Messages  Read  on  Notifications  Paused  on  Notifications  Resumed  on  Conversation  Visible  on  Conversation  Hidden  on  App  Visible  on  App  Hidden  play  Effect  If  Enabled  update  Notification  show  Notification  hide  Notification  perform  Notification  Imp  is  Effects  Enabled  get  Notifications  save  Storage  get  Last  Read  Date  set  Last  Read  Date  on  Receive  on  Bus  Event  New  Message  get  Peer  get  Sender  get  Sort  Date  get  Content  Description  get  Has  Current  User  Mention  get  Unread  Messages  Count  get  Unread  Dialogs  Count  Messages  Read  get  Peer  get  From  Date,1,0
311,build  Api  Peer Peer Api  Peer  get  Peer  Type  get  Peer  Id  get  Peer  Type  get  Peer  Id Abs  Module rpc  timeout  storage  dialogs  storage  users  storage  groups  storage  downloads  storage  contacts  storage  phone  book  storage  notifications  storage  search  storage  book  import  storage  chat  states  storage  chat  prefix  storage  chat  docs  prefix  storage  cursor  storage  blob  blob  dialogs  active  context Abs  Module  context  updates  run  On  Ui  Thread  send  Actor  stickers  Actor  preferences  my  Uid  request  request  request  on  Result  on  Error  api  on  Result  on  Error  request  users  groups  get  Api  Out  Peer  build  Out  Peer Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
312,build  Api  Peer Peer Api  Peer  get  Peer  Type  get  Peer  Id  get  Peer  Type  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Abs  Module rpc  timeout  storage  dialogs  storage  users  storage  groups  storage  downloads  storage  contacts  storage  phone  book  storage  notifications  storage  search  storage  book  import  storage  chat  states  storage  chat  prefix  storage  chat  docs  prefix  storage  cursor  storage  blob  blob  dialogs  active  context Abs  Module  context  updates  run  On  Ui  Thread  send  Actor  stickers  Actor  preferences  my  Uid  request  request  request  on  Result  on  Error  api  on  Result  on  Error  request  users  groups  get  Api  Out  Peer  build  Out  Peer,1,0
313,get  Api  Out  Peer Peer Api  Out  Peer  get  Peer  Type  get  Peer  Id  get  Access  Hash  get  Value  users  get  Peer  Id  get  Peer  Type  get  Peer  Id  get  Access  Hash  get  Value  groups  get  Peer  Id Abs  Module rpc  timeout  storage  dialogs  storage  users  storage  groups  storage  downloads  storage  contacts  storage  phone  book  storage  notifications  storage  search  storage  book  import  storage  chat  states  storage  chat  prefix  storage  chat  docs  prefix  storage  cursor  storage  blob  blob  dialogs  active  context Abs  Module  context  updates  run  On  Ui  Thread  send  Actor  stickers  Actor  preferences  my  Uid  request  request  request  on  Result  on  Error  api  on  Result  on  Error  request  users  groups  build  Api  Peer  build  Out  Peer Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
314,get  Api  Out  Peer Peer Api  Out  Peer  get  Peer  Type  get  Peer  Id  get  Access  Hash  get  Value  users  get  Peer  Id  get  Peer  Type  get  Peer  Id  get  Access  Hash  get  Value  groups  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Abs  Module rpc  timeout  storage  dialogs  storage  users  storage  groups  storage  downloads  storage  contacts  storage  phone  book  storage  notifications  storage  search  storage  book  import  storage  chat  states  storage  chat  prefix  storage  chat  docs  prefix  storage  cursor  storage  blob  blob  dialogs  active  context Abs  Module  context  updates  run  On  Ui  Thread  send  Actor  stickers  Actor  preferences  my  Uid  request  request  request  on  Result  on  Error  api  on  Result  on  Error  request  users  groups  build  Api  Peer  build  Out  Peer,1,0
315,buid  Out  Peer Peer Api  Out  Peer  get  Peer  Type  get  User  get  Peer  Id  get  Uid  get  Access  Hash  get  Peer  Type  get  Group  get  Peer  Id  get  Group  Id  get  Access  Hash Module  Actor cursor  received  cursor  read  cursor  own  read  cursor  delete  context  subscriber Module  Actor  subscribe  build  Api  Peer  users  groups  get  Group  get  User  get  User  V  M  get  Group  V  M  preferences  config  updates  my  Uid  context  request  on  Result  on  Error  request  on  Result  run  to  String  on  Error  run  to  String  api  on  Result  on  Error  cancel  Request  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
316,buid  Out  Peer Peer Api  Out  Peer  get  Peer  Type  get  User  get  Peer  Id  get  Uid  get  Access  Hash  get  Peer  Type  get  Group  get  Peer  Id  get  Group  Id  get  Access  Hash Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Module  Actor cursor  received  cursor  read  cursor  own  read  cursor  delete  context  subscriber Module  Actor  subscribe  build  Api  Peer  users  groups  get  Group  get  User  get  User  V  M  get  Group  V  M  preferences  config  updates  my  Uid  context  request  on  Result  on  Error  request  on  Result  run  to  String  on  Error  run  to  String  api  on  Result  on  Error  cancel  Request  on  Bus  Event,1,0
317,build  Api  Peer Peer Api  Peer  get  Peer  Type  get  Peer  Id  get  Peer  Type  get  Peer  Id Module  Actor cursor  received  cursor  read  cursor  own  read  cursor  delete  context  subscriber Module  Actor  subscribe  buid  Out  Peer  users  groups  get  Group  get  User  get  User  V  M  get  Group  V  M  preferences  config  updates  my  Uid  context  request  on  Result  on  Error  request  on  Result  run  to  String  on  Error  run  to  String  api  on  Result  on  Error  cancel  Request  on  Bus  Event Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
318,build  Api  Peer Peer Api  Peer  get  Peer  Type  get  Peer  Id  get  Peer  Type  get  Peer  Id Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Module  Actor cursor  received  cursor  read  cursor  own  read  cursor  delete  context  subscriber Module  Actor  subscribe  buid  Out  Peer  users  groups  get  Group  get  User  get  User  V  M  get  Group  V  M  preferences  config  updates  my  Uid  context  request  on  Result  on  Error  request  on  Result  run  to  String  on  Error  run  to  String  api  on  Result  on  Error  cancel  Request  on  Bus  Event,1,0
319,load  Last  Message  Date Peer long  get  Last  Read  Message  Date  get  Conversation  V  M Messenger dumb  modules Messenger  get  Auth  State  is  Logged  In  do  Start  Email  Auth  do  Start  Phone  Auth  do  Validate  Code  do  Send  Code  Via  Call  do  Signup  do  Complete  Auth  change  Endpoint  request  Start  Email  Auth  request  Start  Phone  Auth  request  Start  Anonymous  Auth  request  Start  User  Name  Auth  request  Get  O  Auth  Params  request  Complete  O  Auth  request  Phone  Call  validate  Code  validate  Password  sign  Up  get  Auth  Phone  get  Auth  Email  reset  Auth  on  Logged  In  get  App  State  get  Global  State  my  Uid  get  Users  get  User  get  Groups  get  Group  get  Dialog  Groups  V  M  get  Typing  get  Group  Typing  get  Own  Avatar  V  M  get  Group  Avatar  V  M  on  App  Visible  on  App  Hidden  on  Dialogs  Open  on  Dialogs  Closed  on  Conversation  Open  on  Conversation  Pre  Load  on  Conversation  Closed  on  Profile  Open  on  User  Visible  on  Profile  Closed  on  Typing  on  Phone  Book  Changed  on  Network  Changed  on  Push  Received  get  Conversation  V  M  get  Available  Stickers  V  M  send  Message  update  Message  send  Contact  send  Message  send  Message  send  Message  send  Message  send  Message  With  Mentions  Detect  send  Message  With  Mentions  Detect  send  Photo  send  Animation  send  Video  send  Audio  send  Location  send  Custom  Json  Message  send  Document  send  Document  forward  Content  delete  Messages  delete  Chat  send  Sticker  clear  Chat  archive  Chat  favourite  Chat  unfavorite  Chat  add  Reaction  remove  Reaction  save  Draft  load  Draft  find  Public  Group  By  Id  find  Mentions  find  Peers  find  Peers  find  Text  Messages  find  All  Docs  find  All  Links  find  All  Photos  build  Global  Search  Model  do  Call  do  Video  Call  do  Group  Call  end  Call  toggle  Call  Mute  toggle  Video  Enabled  answer  Call  get  Call  probably  End  Call  check  Call  edit  My  Name  edit  My  Nick  edit  My  About  change  My  Avatar  remove  My  Avatar  edit  Name  edit  Group  Title  edit  Group  Theme  edit  Group  About  edit  Group  Short  Name  load  Group  Permissions  save  Group  Permissions  change  Group  Avatar  remove  Group  Avatar  create  Group  create  Channel  leave  Group  leave  And  Delete  Group  delete  Group  share  History  invite  Member  invite  Member  Promise  kick  Member  load  Members  make  Admin  revoke  Admin  transfer  Ownership  request  Invite  Link  revoke  Invite  Link  join  Group  Via  Token  join  Group  request  Integration  Token  revoke  Integration  Token  is  Started  load  Blocked  Users  block  User  unblock  User  remove  Contact  add  Contact  find  Users  bind  File  bind  Upload  bind  Raw  File  unbind  Raw  File  bind  Raw  Upload  File  unbind  Raw  Upload  File  request  State  request  Upload  State  cancel  Downloading  start  Downloading  resume  Upload  pause  Upload  find  Downloaded  Descriptor  subscribe  To  Downloads  unsubscribe  From  Downloads  is  Conversation  Tones  Enabled  change  Conversation  Tones  Enabled  is  Notifications  Enabled  change  Notifications  Enabled  is  Notification  Sound  Enabled  change  Notification  Sound  Enabled  get  Notification  Sound  change  Notification  Sound  is  Notification  Vibration  Enabled  change  Notification  Vibration  Enabled  is  Show  Notifications  Text  change  Show  Notification  Text  Enabled  is  Send  By  Enter  Enabled  change  Send  By  Enter  change  Text  Size  get  Text  Size  get  Privacy  set  Privacy  is  Notifications  Enabled  change  Notifications  Enabled  get  Notifications  Sound  change  Notifications  Sound  is  In  App  Notifications  Enabled  change  In  App  Notifications  Enabled  is  In  App  Notification  Sound  Enabled  change  In  App  Notification  Sound  Enabled  is  In  App  Notification  Vibration  Enabled  change  In  App  Notification  Vibration  Enabled  is  Group  Notifications  Enabled  change  Group  Notifications  Enabled  is  Group  Notifications  Only  Mentions  Enabled  change  Group  Notifications  Only  Mentions  Enabled  get  Selected  Wallpaper  change  Selected  Wallpaper  is  Rename  Hint  Shown  is  Animation  Auto  Play  Enabled  change  Animation  Auto  Play  Enabled  is  Animation  Auto  Download  Enabled  change  Animation  Auto  Download  Enabled  is  Image  Auto  Download  Enabled  change  Image  Auto  Download  Enabled  is  Video  Auto  Download  Enabled  change  Video  Auto  Download  Enabled  is  Audio  Auto  Download  Enabled  change  Audio  Auto  Download  Enabled  is  Doc  Auto  Download  Enabled  change  Doc  Auto  Download  Enabled  load  Sessions  terminate  All  Sessions  terminate  Session  start  Web  Action  complete  Web  Action  raw  Request  Command  raw  Request  raw  Persistent  Request  get  Formatter  register  Google  Push  register  Apple  Push  register  Apple  Push  Kit  register  Actor  Push  get  Preferences  force  Network  Check  get  Module  Context Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
320,load  Last  Message  Date Peer long  get  Last  Read  Message  Date  get  Conversation  V  M Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Messenger dumb  modules Messenger  get  Auth  State  is  Logged  In  do  Start  Email  Auth  do  Start  Phone  Auth  do  Validate  Code  do  Send  Code  Via  Call  do  Signup  do  Complete  Auth  change  Endpoint  request  Start  Email  Auth  request  Start  Phone  Auth  request  Start  Anonymous  Auth  request  Start  User  Name  Auth  request  Get  O  Auth  Params  request  Complete  O  Auth  request  Phone  Call  validate  Code  validate  Password  sign  Up  get  Auth  Phone  get  Auth  Email  reset  Auth  on  Logged  In  get  App  State  get  Global  State  my  Uid  get  Users  get  User  get  Groups  get  Group  get  Dialog  Groups  V  M  get  Typing  get  Group  Typing  get  Own  Avatar  V  M  get  Group  Avatar  V  M  on  App  Visible  on  App  Hidden  on  Dialogs  Open  on  Dialogs  Closed  on  Conversation  Open  on  Conversation  Pre  Load  on  Conversation  Closed  on  Profile  Open  on  User  Visible  on  Profile  Closed  on  Typing  on  Phone  Book  Changed  on  Network  Changed  on  Push  Received  get  Conversation  V  M  get  Available  Stickers  V  M  send  Message  update  Message  send  Contact  send  Message  send  Message  send  Message  send  Message  send  Message  With  Mentions  Detect  send  Message  With  Mentions  Detect  send  Photo  send  Animation  send  Video  send  Audio  send  Location  send  Custom  Json  Message  send  Document  send  Document  forward  Content  delete  Messages  delete  Chat  send  Sticker  clear  Chat  archive  Chat  favourite  Chat  unfavorite  Chat  add  Reaction  remove  Reaction  save  Draft  load  Draft  find  Public  Group  By  Id  find  Mentions  find  Peers  find  Peers  find  Text  Messages  find  All  Docs  find  All  Links  find  All  Photos  build  Global  Search  Model  do  Call  do  Video  Call  do  Group  Call  end  Call  toggle  Call  Mute  toggle  Video  Enabled  answer  Call  get  Call  probably  End  Call  check  Call  edit  My  Name  edit  My  Nick  edit  My  About  change  My  Avatar  remove  My  Avatar  edit  Name  edit  Group  Title  edit  Group  Theme  edit  Group  About  edit  Group  Short  Name  load  Group  Permissions  save  Group  Permissions  change  Group  Avatar  remove  Group  Avatar  create  Group  create  Channel  leave  Group  leave  And  Delete  Group  delete  Group  share  History  invite  Member  invite  Member  Promise  kick  Member  load  Members  make  Admin  revoke  Admin  transfer  Ownership  request  Invite  Link  revoke  Invite  Link  join  Group  Via  Token  join  Group  request  Integration  Token  revoke  Integration  Token  is  Started  load  Blocked  Users  block  User  unblock  User  remove  Contact  add  Contact  find  Users  bind  File  bind  Upload  bind  Raw  File  unbind  Raw  File  bind  Raw  Upload  File  unbind  Raw  Upload  File  request  State  request  Upload  State  cancel  Downloading  start  Downloading  resume  Upload  pause  Upload  find  Downloaded  Descriptor  subscribe  To  Downloads  unsubscribe  From  Downloads  is  Conversation  Tones  Enabled  change  Conversation  Tones  Enabled  is  Notifications  Enabled  change  Notifications  Enabled  is  Notification  Sound  Enabled  change  Notification  Sound  Enabled  get  Notification  Sound  change  Notification  Sound  is  Notification  Vibration  Enabled  change  Notification  Vibration  Enabled  is  Show  Notifications  Text  change  Show  Notification  Text  Enabled  is  Send  By  Enter  Enabled  change  Send  By  Enter  change  Text  Size  get  Text  Size  get  Privacy  set  Privacy  is  Notifications  Enabled  change  Notifications  Enabled  get  Notifications  Sound  change  Notifications  Sound  is  In  App  Notifications  Enabled  change  In  App  Notifications  Enabled  is  In  App  Notification  Sound  Enabled  change  In  App  Notification  Sound  Enabled  is  In  App  Notification  Vibration  Enabled  change  In  App  Notification  Vibration  Enabled  is  Group  Notifications  Enabled  change  Group  Notifications  Enabled  is  Group  Notifications  Only  Mentions  Enabled  change  Group  Notifications  Only  Mentions  Enabled  get  Selected  Wallpaper  change  Selected  Wallpaper  is  Rename  Hint  Shown  is  Animation  Auto  Play  Enabled  change  Animation  Auto  Play  Enabled  is  Animation  Auto  Download  Enabled  change  Animation  Auto  Download  Enabled  is  Image  Auto  Download  Enabled  change  Image  Auto  Download  Enabled  is  Video  Auto  Download  Enabled  change  Video  Auto  Download  Enabled  is  Audio  Auto  Download  Enabled  change  Audio  Auto  Download  Enabled  is  Doc  Auto  Download  Enabled  change  Doc  Auto  Download  Enabled  load  Sessions  terminate  All  Sessions  terminate  Session  start  Web  Action  complete  Web  Action  raw  Request  Command  raw  Request  raw  Persistent  Request  get  Formatter  register  Google  Push  register  Apple  Push  register  Apple  Push  Kit  register  Actor  Push  get  Preferences  force  Network  Check  get  Module  Context,1,0
321,send  Document Peer  String void  send  Document  get  Name Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Animation  send  Photo  send  Photo  send  Voice  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
322,send  Document Peer  String void  send  Document  get  Name Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Animation  send  Photo  send  Photo  send  Voice  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import,1,0
323,send  Animation Peer  String void  get  Image  Size  decode  File  scale  Fit  save  send  Animation  get  Width  get  Height  get  Width  get  Height Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Photo  send  Photo  send  Voice  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
324,send  Animation Peer  String void  get  Image  Size  decode  File  scale  Fit  save  send  Animation  get  Width  get  Height  get  Width  get  Height Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Photo  send  Photo  send  Voice  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import,1,0
325,send  Photo Peer  String void  send  Photo  get  Name Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Animation  send  Photo  send  Voice  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
326,send  Photo Peer  String void  send  Photo  get  Name Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Animation  send  Photo  send  Voice  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import,1,0
327,send  Voice Peer  int  String void  send  Audio  get  Name Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Animation  send  Photo  send  Photo  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
328,send  Voice Peer  int  String void  send  Audio  get  Name Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Animation  send  Photo  send  Photo  send  Video  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import,1,0
329,send  Video Peer  String void  send  Video  get  Name Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Animation  send  Photo  send  Photo  send  Voice  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
330,send  Video Peer  String void  send  Video  get  Name Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Android  Messenger file  Downloader  random  context  app  State  Actor  dialog  List  messages  Lists  docs  Lists  custom  Lists  gallery  V  M  gallery  Scanner  Actor Android  Messenger  on  Change  on  Receive  on  Receive  get  Context  change  Group  Avatar  change  My  Avatar  send  Document  send  Document  send  Animation  send  Photo  send  Photo  send  Voice  send  Video  send  Uri  send  Uri  on  Activity  Open  on  Activity  Closed  build  Search  Display  List  build  Contacts  Display  List  is  Screen  On  get  External  Temp  File  get  External  Upload  Temp  File  get  Internal  Temp  File  get  Dialogs  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Message  Display  List  on  Scrolled  To  End  on  Item  Touched  get  Docs  Display  List  get  Gallery  V  M  check  Gallery  Scanner  Actor  create  get  Gallery  Scanner  Actor  get  Events  get  App  State  V  M  start  Import,1,0
331,load  Slice Clc  List  Storage Array  List  List  Engine  Record  move  To  Next  add  get  Long  get  Long  get  String  get  Blob  move  To  Next  close Clc  List  Storage logger  database  table  Name  is  Table  Checked  context Clc  List  Storage  check  Table  update  Or  Add  update  Or  Add  delete  delete  clear  load  Item  load  All  Items  load  Item  By  Sort  Key  is  Empty  load  Forward  load  Backward  load  Forward  load  Center  load  Backward  get  Count  count  All  clear  All  get  Context Cursor logger  result  Set Cursor  Cursor  set  Result  Set  move  To  First  get  Long  close  move  To  Next  get  Int  get  String  get  Long  get  String  get  Blob  get  Blob,0,0
332,load  Slice Clc  List  Storage Array  List  List  Engine  Record  move  To  Next  add  get  Long  get  Long  get  String  get  Blob  move  To  Next  close Cursor logger  result  Set Cursor  Cursor  set  Result  Set  move  To  First  get  Long  close  move  To  Next  get  Int  get  String  get  Long  get  String  get  Blob  get  Blob Clc  List  Storage logger  database  table  Name  is  Table  Checked  context Clc  List  Storage  check  Table  update  Or  Add  update  Or  Add  delete  delete  clear  load  Item  load  All  Items  load  Item  By  Sort  Key  is  Empty  load  Forward  load  Backward  load  Forward  load  Center  load  Backward  get  Count  count  All  clear  All  get  Context,1,1
333,on  Sticker  Clicked Emoji  Keyboard void  get  On  Sticker  Click  Listener  on  Sticker  Clicked  get  On  Sticker  Click  Listener Emoji  Keyboard tag  binding  delay  on  Sticker  Click  Listener  sticker  Indicator  Container  sticker  Switch  Container  m  Emojis  Adapter Emoji  Keyboard  on  Emoji  Clicked  on  Backspace  Click  create  View  on  Click  on  Click  on  Page  Scrolled  on  Page  Selected  on  Page  Scroll  State  Changed  on  Dismiss  animate  View  get  On  Sticker  Click  Listener  set  On  Sticker  Click  Listener  get  Sticker  Indicator  Container  release Sticker creator  record  id  image  image  Location  image  image  Location  image  image  Location  id  emoji  collection  Id  collection  Access  Hash Sticker  Sticker  Sticker  apply  Wrapped  get  Image  get  Image  get  Image  get  Id  get  Emoji  get  Collection  Id  get  Collection  Access  Hash  to  Message  to  Api  create  Instance,0,0
334,on  Sticker  Clicked Emoji  Keyboard void  get  On  Sticker  Click  Listener  on  Sticker  Clicked  get  On  Sticker  Click  Listener Sticker creator  record  id  image  image  Location  image  image  Location  image  image  Location  id  emoji  collection  Id  collection  Access  Hash Sticker  Sticker  Sticker  apply  Wrapped  get  Image  get  Image  get  Image  get  Id  get  Emoji  get  Collection  Id  get  Collection  Access  Hash  to  Message  to  Api  create  Instance Emoji  Keyboard tag  binding  delay  on  Sticker  Click  Listener  sticker  Indicator  Container  sticker  Switch  Container  m  Emojis  Adapter Emoji  Keyboard  on  Emoji  Clicked  on  Backspace  Click  create  View  on  Click  on  Click  on  Page  Scrolled  on  Page  Selected  on  Page  Scroll  State  Changed  on  Dismiss  animate  View  get  On  Sticker  Click  Listener  set  On  Sticker  Click  Listener  get  Sticker  Indicator  Container  release,1,1
335,try  To  Set  Fast Avatar boolean  get  Full  Image  find  Downloaded  Descriptor  messenger  get  File  Id  get  File  Reference  get  Full  Image  set  Image  U  R  I  from  File Cover  Avatar  View file  V  M  full  File  V  M  small  Descriptor  is  Loaded  current  Id Cover  Avatar  View  Cover  Avatar  View  Cover  Avatar  View  Cover  Avatar  View  init  bind  on  Not  Downloaded  on  Downloading  on  Downloaded  on  Not  Downloaded  on  Downloading  on  Downloaded  set  Offset  unbind Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance  check  Avatar,0,0
336,try  To  Set  Fast Avatar boolean  get  Full  Image  find  Downloaded  Descriptor  messenger  get  File  Id  get  File  Reference  get  Full  Image  set  Image  U  R  I  from  File Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance  check  Avatar Cover  Avatar  View file  V  M  full  File  V  M  small  Descriptor  is  Loaded  current  Id Cover  Avatar  View  Cover  Avatar  View  Cover  Avatar  View  Cover  Avatar  View  init  bind  on  Not  Downloaded  on  Downloading  on  Downloaded  on  Not  Downloaded  on  Downloading  on  Downloaded  set  Offset  unbind,1,0
337,on  Member  Click Group  V  M  User  V  M  boolean  boolean  Members  Adapter void  get  get  Phones  add  Item  replace  get  String  get  get  Name  start  Activity  open  Private  Dialog  get  Id  size  add  Item  replace  get  String  get  get  Name  size  start  Activity  call  get  Phone  get  size  parse  get  Instance  get  Phone  get  get  Title  get  format  get  Instance  print  Stack  Trace  get  Title  get  get  Phone  get  set  Canceled  On  Touch  Outside  show  set  Items  start  Activity  call  get  Phone  get  add  Item  replace  get  String  get  get  Name  start  Profile  Activity  get  Id  get  get  Is  Can  Kick  Anyone  get  get  Is  Can  Kick  Invited  add  Item  replace  get  String  get  get  Name  set  Canceled  On  Touch  Outside  show  set  Negative  Button  set  Positive  Button  set  Message  replace  get  String  get  get  Name  execute  kick  Member  messenger  get  Id  get  Id Members  Adapter load  gap  limit  members  binder  load  In  Progress  loadded  To  End  callback  group  Id  is  Initially  Loaded  next  Members  raw  Members  Group  View  Holder  user  Name  admin  avatar  View  online  online  Binding  user Members  Adapter  set  Members  set  Members  on  Bind  View  Holder  init  Load  on  Loaded  on  Loaded  To  End  load  More  get  Count  get  Item  get  Item  Id  create  Holder  init  bind  unbind  dispose Base  Activity style  binder  is  Resumed on  Create  on  Resume  on  Pause  on  Save  Instance  State  on  Stop  on  Destroy  on  Perform  Bind  bind  bind  bind  bind  bind  bind  bind  Global  Counter  bind  Group  Typing  bind  Private  Typing  bind  bind  bind  set  Toolbar  set  Toolbar  set  Toolbar  set  Toolbar  execute  on  Result  on  Error  execute  execute  execute  on  Result  on  Error  execute  execute  dismiss  Dialog  notify  On  Resume  notify  On  Pause  get  Is  Resumed  on  Result  on  Error  on  Result  on  Error  on  Result  on  Error,0,0
338,on  Member  Click Group  V  M  User  V  M  boolean  boolean  Members  Adapter void  get  get  Phones  add  Item  replace  get  String  get  get  Name  start  Activity  open  Private  Dialog  get  Id  size  add  Item  replace  get  String  get  get  Name  size  start  Activity  call  get  Phone  get  size  parse  get  Instance  get  Phone  get  get  Title  get  format  get  Instance  print  Stack  Trace  get  Title  get  get  Phone  get  set  Canceled  On  Touch  Outside  show  set  Items  start  Activity  call  get  Phone  get  add  Item  replace  get  String  get  get  Name  start  Profile  Activity  get  Id  get  get  Is  Can  Kick  Anyone  get  get  Is  Can  Kick  Invited  add  Item  replace  get  String  get  get  Name  set  Canceled  On  Touch  Outside  show  set  Negative  Button  set  Positive  Button  set  Message  replace  get  String  get  get  Name  execute  kick  Member  messenger  get  Id  get  Id Base  Activity style  binder  is  Resumed on  Create  on  Resume  on  Pause  on  Save  Instance  State  on  Stop  on  Destroy  on  Perform  Bind  bind  bind  bind  bind  bind  bind  bind  Global  Counter  bind  Group  Typing  bind  Private  Typing  bind  bind  bind  set  Toolbar  set  Toolbar  set  Toolbar  set  Toolbar  execute  on  Result  on  Error  execute  execute  execute  on  Result  on  Error  execute  execute  dismiss  Dialog  notify  On  Resume  notify  On  Pause  get  Is  Resumed  on  Result  on  Error  on  Result  on  Error  on  Result  on  Error Members  Adapter load  gap  limit  members  binder  load  In  Progress  loadded  To  End  callback  group  Id  is  Initially  Loaded  next  Members  raw  Members  Group  View  Holder  user  Name  admin  avatar  View  online  online  Binding  user Members  Adapter  set  Members  set  Members  on  Bind  View  Holder  init  Load  on  Loaded  on  Loaded  To  End  load  More  get  Count  get  Item  get  Item  Id  create  Holder  init  bind  unbind  dispose,1,1
339,on  Member  Click Group  V  M  User  V  M  boolean  boolean  Members  Adapter void  get  get  Phones  add  Item  replace  get  String  get  get  Name  start  Activity  open  Private  Dialog  get  Id  size  add  Item  replace  get  String  get  get  Name  size  start  Activity  call  get  Phone  get  size  parse  get  Instance  get  Phone  get  get  Title  get  format  get  Instance  print  Stack  Trace  get  Title  get  get  Phone  get  set  Canceled  On  Touch  Outside  show  set  Items  start  Activity  call  get  Phone  get  add  Item  replace  get  String  get  get  Name  start  Profile  Activity  get  Id  get  get  Is  Can  Kick  Anyone  get  get  Is  Can  Kick  Invited  add  Item  replace  get  String  get  get  Name  set  Canceled  On  Touch  Outside  show  set  Negative  Button  set  Positive  Button  set  Message  replace  get  String  get  get  Name  execute  kick  Member  messenger  get  Id  get  Id Members  Adapter load  gap  limit  members  binder  load  In  Progress  loadded  To  End  callback  group  Id  is  Initially  Loaded  next  Members  raw  Members  Group  View  Holder  user  Name  admin  avatar  View  online  online  Binding  user Members  Adapter  set  Members  set  Members  on  Bind  View  Holder  init  Load  on  Loaded  on  Loaded  To  End  load  More  get  Count  get  Item  get  Item  Id  create  Holder  init  bind  unbind  dispose User  V  M presence  update  delay  id  is  Bot  name  local  Name  server  Name  nick  about  avatar  time  Zone  sex  is  Contact  is  In  Phone  Book  is  Blocked  is  Verified  presence  presence  Timer  phones  emails  links  contacts  bot  Commands  listeners User  V  M  run  creator  update  Values  get  Id  is  Bot  get  Name  get  Local  Name  get  Server  Name  get  Nick  get  About  get  Avatar  get  Sex  is  Contact  is  In  Phone  Book  get  Is  Blocked  get  Is  Verified  get  Presence  get  Phones  get  Emails  get  Links  get  Time  Zone  get  Contacts  get  Bot  Commands  subscribe  subscribe  unsubscribe  notify  Change  build  Phones  build  Emails  build  Links,0,0
340,on  Member  Click Group  V  M  User  V  M  boolean  boolean  Members  Adapter void  get  get  Phones  add  Item  replace  get  String  get  get  Name  start  Activity  open  Private  Dialog  get  Id  size  add  Item  replace  get  String  get  get  Name  size  start  Activity  call  get  Phone  get  size  parse  get  Instance  get  Phone  get  get  Title  get  format  get  Instance  print  Stack  Trace  get  Title  get  get  Phone  get  set  Canceled  On  Touch  Outside  show  set  Items  start  Activity  call  get  Phone  get  add  Item  replace  get  String  get  get  Name  start  Profile  Activity  get  Id  get  get  Is  Can  Kick  Anyone  get  get  Is  Can  Kick  Invited  add  Item  replace  get  String  get  get  Name  set  Canceled  On  Touch  Outside  show  set  Negative  Button  set  Positive  Button  set  Message  replace  get  String  get  get  Name  execute  kick  Member  messenger  get  Id  get  Id User  V  M presence  update  delay  id  is  Bot  name  local  Name  server  Name  nick  about  avatar  time  Zone  sex  is  Contact  is  In  Phone  Book  is  Blocked  is  Verified  presence  presence  Timer  phones  emails  links  contacts  bot  Commands  listeners User  V  M  run  creator  update  Values  get  Id  is  Bot  get  Name  get  Local  Name  get  Server  Name  get  Nick  get  About  get  Avatar  get  Sex  is  Contact  is  In  Phone  Book  get  Is  Blocked  get  Is  Verified  get  Presence  get  Phones  get  Emails  get  Links  get  Time  Zone  get  Contacts  get  Bot  Commands  subscribe  subscribe  unsubscribe  notify  Change  build  Phones  build  Emails  build  Links Members  Adapter load  gap  limit  members  binder  load  In  Progress  loadded  To  End  callback  group  Id  is  Initially  Loaded  next  Members  raw  Members  Group  View  Holder  user  Name  admin  avatar  View  online  online  Binding  user Members  Adapter  set  Members  set  Members  on  Bind  View  Holder  init  Load  on  Loaded  on  Loaded  To  End  load  More  get  Count  get  Item  get  Item  Id  create  Holder  init  bind  unbind  dispose,1,0
341,on  Member  Click Group  V  M  User  V  M  boolean  boolean  Members  Adapter void  get  get  Phones  add  Item  replace  get  String  get  get  Name  start  Activity  open  Private  Dialog  get  Id  size  add  Item  replace  get  String  get  get  Name  size  start  Activity  call  get  Phone  get  size  parse  get  Instance  get  Phone  get  get  Title  get  format  get  Instance  print  Stack  Trace  get  Title  get  get  Phone  get  set  Canceled  On  Touch  Outside  show  set  Items  start  Activity  call  get  Phone  get  add  Item  replace  get  String  get  get  Name  start  Profile  Activity  get  Id  get  get  Is  Can  Kick  Anyone  get  get  Is  Can  Kick  Invited  add  Item  replace  get  String  get  get  Name  set  Canceled  On  Touch  Outside  show  set  Negative  Button  set  Positive  Button  set  Message  replace  get  String  get  get  Name  execute  kick  Member  messenger  get  Id  get  Id Members  Adapter load  gap  limit  members  binder  load  In  Progress  loadded  To  End  callback  group  Id  is  Initially  Loaded  next  Members  raw  Members  Group  View  Holder  user  Name  admin  avatar  View  online  online  Binding  user Members  Adapter  set  Members  set  Members  on  Bind  View  Holder  init  Load  on  Loaded  on  Loaded  To  End  load  More  get  Count  get  Item  get  Item  Id  create  Holder  init  bind  unbind  dispose Group  V  M creator  group  Id  group  Type  name  avatar  is  Member  members  Count  is  Can  Write  Message  is  Can  Call  is  Can  Clear  is  Can  Join  is  Can  View  Info  members  is  Async  Members  is  Can  View  Members  is  Can  Invite  Members  is  Can  Edit  Info  is  History  Shared  is  Can  Edit  Administration  is  Can  Edit  Admins  is  Can  View  Admins  is  Can  Leave  is  Can  Delete  is  Can  Invite  Via  Link  is  Can  Kick  Invited  is  Can  Kick  Anyone  is  Can  Edit  Foreign  is  Can  Delete  Foreign  is  Deleted  theme  about  short  Name  owner  Id  presence  ext  listeners Group  V  M  get  Id  get  Group  Type  get  Name  get  Avatar  get  About  get  Theme  get  Short  Name  is  Member  get  Members  Count  get  Is  Can  Write  Message  get  Is  Can  View  Members  get  Is  Can  Edit  Info  get  Is  Can  Invite  Members  get  Is  Async  Members  get  Is  History  Shared  get  Is  Can  Edit  Administration  get  Is  Can  Leave  get  Is  Can  Delete  get  Is  Can  Call  get  Is  Can  Invite  Via  Link  get  Is  Can  Kick  Invited  get  Is  Can  Kick  Anyone  get  Is  Can  Edit  Foreign  get  Is  Can  Delete  Foreign  get  Is  Can  Clear  get  Is  Can  View  Info  get  Is  Can  Join  get  Is  Can  Edit  Admins  get  Is  Deleted  get  Owner  Id  get  Members  get  Presence  get  Ext  subscribe  subscribe  unsubscribe  update  Values  notify  If  Needed  notify  Change,0,0
342,on  Member  Click Group  V  M  User  V  M  boolean  boolean  Members  Adapter void  get  get  Phones  add  Item  replace  get  String  get  get  Name  start  Activity  open  Private  Dialog  get  Id  size  add  Item  replace  get  String  get  get  Name  size  start  Activity  call  get  Phone  get  size  parse  get  Instance  get  Phone  get  get  Title  get  format  get  Instance  print  Stack  Trace  get  Title  get  get  Phone  get  set  Canceled  On  Touch  Outside  show  set  Items  start  Activity  call  get  Phone  get  add  Item  replace  get  String  get  get  Name  start  Profile  Activity  get  Id  get  get  Is  Can  Kick  Anyone  get  get  Is  Can  Kick  Invited  add  Item  replace  get  String  get  get  Name  set  Canceled  On  Touch  Outside  show  set  Negative  Button  set  Positive  Button  set  Message  replace  get  String  get  get  Name  execute  kick  Member  messenger  get  Id  get  Id Group  V  M creator  group  Id  group  Type  name  avatar  is  Member  members  Count  is  Can  Write  Message  is  Can  Call  is  Can  Clear  is  Can  Join  is  Can  View  Info  members  is  Async  Members  is  Can  View  Members  is  Can  Invite  Members  is  Can  Edit  Info  is  History  Shared  is  Can  Edit  Administration  is  Can  Edit  Admins  is  Can  View  Admins  is  Can  Leave  is  Can  Delete  is  Can  Invite  Via  Link  is  Can  Kick  Invited  is  Can  Kick  Anyone  is  Can  Edit  Foreign  is  Can  Delete  Foreign  is  Deleted  theme  about  short  Name  owner  Id  presence  ext  listeners Group  V  M  get  Id  get  Group  Type  get  Name  get  Avatar  get  About  get  Theme  get  Short  Name  is  Member  get  Members  Count  get  Is  Can  Write  Message  get  Is  Can  View  Members  get  Is  Can  Edit  Info  get  Is  Can  Invite  Members  get  Is  Async  Members  get  Is  History  Shared  get  Is  Can  Edit  Administration  get  Is  Can  Leave  get  Is  Can  Delete  get  Is  Can  Call  get  Is  Can  Invite  Via  Link  get  Is  Can  Kick  Invited  get  Is  Can  Kick  Anyone  get  Is  Can  Edit  Foreign  get  Is  Can  Delete  Foreign  get  Is  Can  Clear  get  Is  Can  View  Info  get  Is  Can  Join  get  Is  Can  Edit  Admins  get  Is  Deleted  get  Owner  Id  get  Members  get  Presence  get  Ext  subscribe  subscribe  unsubscribe  update  Values  notify  If  Needed  notify  Change Members  Adapter load  gap  limit  members  binder  load  In  Progress  loadded  To  End  callback  group  Id  is  Initially  Loaded  next  Members  raw  Members  Group  View  Holder  user  Name  admin  avatar  View  online  online  Binding  user Members  Adapter  set  Members  set  Members  on  Bind  View  Holder  init  Load  on  Loaded  on  Loaded  To  End  load  More  get  Count  get  Item  get  Item  Id  create  Holder  init  bind  unbind  dispose,1,0
343,get  Avatar  Image Avatar Avatar  Image  dp  get  Large  Image  get  Small  Image Dialog  View is  Styles  Loaded  title  Paint  title  Secure  Paint  date  Paint  text  Paint  text  Active  Paint  counter  Text  Paint  counter  Bg  Paint  sender  Text  Color  group  Icon  secret  Icon  channel  Icon  bot  Icon  placeholder  Colors  avatar  Border  fill  Paint  avatar  Text  Color  typing  Text  state  Sent  state  Received  state  Read  binded  Id  drawee  Holder  tmp  Rect  binded  Uid  binded  Gid  private  Typing  Listener  group  Typing  Listener  is  Private  Typing  Dialog  Layout  image  Request  placeholder  Index  short  Name  title  Layout  title  Icon  title  Icon  Top  date  date  Width  text  Layout  counter  counter  Width  state Dialog  View  Dialog  View  Dialog  View  Dialog  View  init  Styles  on  Draw  bind  build  Layout  on  Not  Downloaded  on  Downloading  on  Downloaded  layout  Ready  handle  Emoji  build  Short  Name  unbind  verify  Drawable  get  Title  Icon  Top  set  Title  Icon  Top  get  State  set  State  get  Image  Request  set  Image  Request  get  Placeholder  Index  set  Placeholder  Index  get  Short  Name  set  Short  Name  get  Title  Layout  set  Title  Layout  get  Date  get  Date  Width  set  Date  get  Text  Layout  set  Text  Layout  get  Title  Icon  set  Title  Icon  set  Counter  get  Counter  get  Counter  Width Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance  check  Avatar,0,0
344,get  Avatar  Image Avatar Avatar  Image  dp  get  Large  Image  get  Small  Image Avatar record  id  small  Image  large  Image  full  Image Avatar  Avatar  Avatar  get  Small  Image  get  Large  Image  get  Full  Image  parse  serialize  apply  Wrapped  equals  hash  Code  create  Instance  check  Avatar Dialog  View is  Styles  Loaded  title  Paint  title  Secure  Paint  date  Paint  text  Paint  text  Active  Paint  counter  Text  Paint  counter  Bg  Paint  sender  Text  Color  group  Icon  secret  Icon  channel  Icon  bot  Icon  placeholder  Colors  avatar  Border  fill  Paint  avatar  Text  Color  typing  Text  state  Sent  state  Received  state  Read  binded  Id  drawee  Holder  tmp  Rect  binded  Uid  binded  Gid  private  Typing  Listener  group  Typing  Listener  is  Private  Typing  Dialog  Layout  image  Request  placeholder  Index  short  Name  title  Layout  title  Icon  title  Icon  Top  date  date  Width  text  Layout  counter  counter  Width  state Dialog  View  Dialog  View  Dialog  View  Dialog  View  init  Styles  on  Draw  bind  build  Layout  on  Not  Downloaded  on  Downloading  on  Downloaded  layout  Ready  handle  Emoji  build  Short  Name  unbind  verify  Drawable  get  Title  Icon  Top  set  Title  Icon  Top  get  State  set  State  get  Image  Request  set  Image  Request  get  Placeholder  Index  set  Placeholder  Index  get  Short  Name  set  Short  Name  get  Title  Layout  set  Title  Layout  get  Date  get  Date  Width  set  Date  get  Text  Layout  set  Text  Layout  get  Title  Icon  set  Title  Icon  set  Counter  get  Counter  get  Counter  Width,1,0
345,bind  Image Explorer  Item void  get  Image  set  Icon  get  Image  set  Type  set  Icon  set  Type  get  File  Type Explorer  Item file  Type  file  selected  enabled  image  Id Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  get  Title  get  Subtitle  get  Image  get  Path  is  Directory  get  File  get  File  Type  is  Enabled  is  Selected  set  Selected  bind  Data  get  Last  Modified  bind  Data Explore  Item  View  Holder title  View  sub  Title  View  image  View  selected  View  divider  type  View  context Explore  Item  View  Holder  set  Title  set  Subtitle  get  Context  set  Selected  disable  Subtitle  disable  Divider  enable  Divider  set  Icon  set  Type,0,0
346,bind  Image Explorer  Item void  get  Image  set  Icon  get  Image  set  Type  set  Icon  set  Type  get  File  Type Explore  Item  View  Holder title  View  sub  Title  View  image  View  selected  View  divider  type  View  context Explore  Item  View  Holder  set  Title  set  Subtitle  get  Context  set  Selected  disable  Subtitle  disable  Divider  enable  Divider  set  Icon  set  Type Explorer  Item file  Type  file  selected  enabled  image  Id Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  get  Title  get  Subtitle  get  Image  get  Path  is  Directory  get  File  get  File  Type  is  Enabled  is  Selected  set  Selected  bind  Data  get  Last  Modified  bind  Data,1,1
347,select  Item String boolean  contains  size  show  make  Text  add  remove  update  Counter Base  Picker  Activity selected  Items  search  Enabled  current  Fragment on  Create  on  Click  on  Click  return  Result  get  Welcome  Fragment  on  Create  Options  Menu  on  Options  Item  Selected  on  Attach  Fragment  on  Back  Pressed  save  select  Item  update  Counter  on  Animation  Update  is  Selected  is  Selected  set  Fragment Explorer  Item file  Type  file  selected  enabled  image  Id Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  get  Title  get  Subtitle  get  Image  get  Path  is  Directory  get  File  get  File  Type  is  Enabled  is  Selected  set  Selected  bind  Image  bind  Data  get  Last  Modified  bind  Data,0,0
348,select  Item String boolean  contains  size  show  make  Text  add  remove  update  Counter Explorer  Item file  Type  file  selected  enabled  image  Id Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  Explorer  Item  get  Title  get  Subtitle  get  Image  get  Path  is  Directory  get  File  get  File  Type  is  Enabled  is  Selected  set  Selected  bind  Image  bind  Data  get  Last  Modified  bind  Data Base  Picker  Activity selected  Items  search  Enabled  current  Fragment on  Create  on  Click  on  Click  return  Result  get  Welcome  Fragment  on  Create  Options  Menu  on  Options  Item  Selected  on  Attach  Fragment  on  Back  Pressed  save  select  Item  update  Counter  on  Animation  Update  is  Selected  is  Selected  set  Fragment,1,0
349,on  Item  Clicked Invite  Fragment void  is  Selected  size  get  Emails  size  get  Phones  to  String  get  Number  get  get  Phones  get  Email  get  get  Emails  get  String  get  Activity  show  set  Items  unselect  select  notify  Data  Set  Changed  get  Adapter  dismiss  unselect  select  notify  Data  Set  Changed  get  Adapter Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  select  unselect  is  Selected  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search,0,0
350,on  Item  Clicked Invite  Fragment void  is  Selected  size  get  Emails  size  get  Phones  to  String  get  Number  get  get  Phones  get  Email  get  get  Emails  get  String  get  Activity  show  set  Items  unselect  select  notify  Data  Set  Changed  get  Adapter  dismiss  unselect  select  notify  Data  Set  Changed  get  Adapter Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  select  unselect  is  Selected  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy,1,1
351,select Phone  Book  Contact  int void  select  get  Adapter Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  unselect  is  Selected  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  on  Item  Clicked,0,0
352,select Phone  Book  Contact  int void  select  get  Adapter Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  on  Item  Clicked Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  unselect  is  Selected  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy,1,0
353,unselect Phone  Book  Contact void  unselect  get  Adapter Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  select  is  Selected  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  on  Item  Clicked,0,0
354,unselect Phone  Book  Contact void  unselect  get  Adapter Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  on  Item  Clicked Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  select  is  Selected  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy,1,0
355,is  Selected Phone  Book  Contact boolean  is  Selected  get  Adapter Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  select  unselect  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  on  Item  Clicked,0,0
356,is  Selected Phone  Book  Contact boolean  is  Selected  get  Adapter Phone  Book  Contact entity  name  creator  contact  Id  sort  Id  name  phones  emails create  Instance  Phone  Book  Contact  Phone  Book  Contact  Phone  Book  Contact  get  Phones  get  Emails  get  Name  get  Contact  Id  set  Sort  Id  parse  serialize  get  Engine  Id  get  Engine  Sort  get  Engine  Search  on  Item  Clicked Invite  Fragment collection  adapter  contacts  empty  Text  menu  inflater Invite  Fragment  on  Create  View  on  Clicked  on  Long  Clicked  select  unselect  on  Create  Options  Menu  show  Menu  on  Options  Item  Selected  send  Invites  on  Click  send  Email  Invites  send  Sms  Invites  get  Adapter  on  Destroy,1,0
357,add  Field Actor  Settings  Category Actor  Settings  Category  add  get  Fields Actor  Settings  Category icon  Resource  Id  icon  Color  text  fields Actor  Settings  Category  get  Icon  Resource  Id  set  Icon  Resource  Id  get  Icon  Color  set  Icon  Color  get  Fields  set  Fields  get  Text  set  Text Actor  Settings  Field id  view  icon  Resource  Id  name  on  Click  Listener  right  View  icon  Color  name  Text  View  right  View  Width  right  View  Height Actor  Settings  Field  get  View  set  View  get  Icon  Resource  Id  set  Icon  Resource  Id  get  Name  set  Name  get  On  Click  Listener  set  On  Click  Listener  get  Right  View  set  Right  View  get  Icon  Color  set  Icon  Color  get  Name  Text  View  set  Name  Text  View  get  Right  View  Width  set  Right  View  Width  get  Right  View  Height  set  Right  View  Height  get  Id  set  Id,0,0
358,add  Field Actor  Settings  Category Actor  Settings  Category  add  get  Fields Actor  Settings  Field id  view  icon  Resource  Id  name  on  Click  Listener  right  View  icon  Color  name  Text  View  right  View  Width  right  View  Height Actor  Settings  Field  get  View  set  View  get  Icon  Resource  Id  set  Icon  Resource  Id  get  Name  set  Name  get  On  Click  Listener  set  On  Click  Listener  get  Right  View  set  Right  View  get  Icon  Color  set  Icon  Color  get  Name  Text  View  set  Name  Text  View  get  Right  View  Width  set  Right  View  Width  get  Right  View  Height  set  Right  View  Height  get  Id  set  Id Actor  Settings  Category icon  Resource  Id  icon  Color  text  fields Actor  Settings  Category  get  Icon  Resource  Id  set  Icon  Resource  Id  get  Icon  Color  set  Icon  Color  get  Fields  set  Fields  get  Text  set  Text,1,1
359,send Peer  String  String void  is  Bot  get  users  get  Peer  Id  send  Message  messenger  show  make  Text  get  Application  Context  finish Shortcut  Activity text  To  Send  input on  Create  on  New  Intent  handele  Intent  on  Click  on  Click  on  Show  on  Click  on  Click  on  Click  on  Dismiss  on  Show Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call,0,0
360,send Peer  String  String void  is  Bot  get  users  get  Peer  Id  send  Message  messenger  show  make  Text  get  Application  Context  finish Peer creator  peer  Type  peer  Id create  Instance  Peer  Peer  from  Bytes  from  Unique  Id  user  group  get  Unuque  Id  get  Peer  Type  get  Peer  Id  equals  hash  Code  parse  serialize  to  String  to  Id  String  make  Call Shortcut  Activity text  To  Send  input on  Create  on  New  Intent  handele  Intent  on  Click  on  Click  on  Show  on  Click  on  Click  on  Click  on  Dismiss  on  Show,1,0
361,play  Video File  System  Reference  Photo  Holder void  get  Activity  get  Messages  Fragment  get  Adapter  start  Activity  open  Doc  get  Name  get  Descriptor Photo  Holder tag  color  pending  color  sent  color  received  color  read  color  error  context  message  Bubble  overlay  preview  View  fast  Thumb  Loader  time  duration  state  Icon  progress  Container  progress  Value  progress  View  progress  Icon  download  File  V  M  upload  File  V  M  is  Photo  is  Animation  last  Updated  Index  currenr  Rid  updated  play  Requested  animation  Controller  anim  Upload  V  M  Callback  Download  V  M  Callback  is  Fast  Thumb  Loaded  doc Photo  Holder  on  Final  Image  Set  bind  Data  on  Click  on  Not  Downloaded  on  Downloading  on  Downloaded  run  on  Not  Uploading  on  Uploading  on  Uploaded  play  Animation  play  Animation  toggle  Animation  unbind  on  Not  Uploaded  on  Uploading  on  Uploaded  Download  V  M  Callback  check  Fast  Thumb  on  Not  Downloaded  on  Downloading  on  Downloaded  bind  Image Document  Content source  mime  Type  name  fast  Thumb Document  Content  Document  Content  create  Local  create  Remote  Document  get  Source  get  Name  get  Fast  Thumb  get  Ext  get  Mime  Type,0,0
362,play  Video File  System  Reference  Photo  Holder void  get  Activity  get  Messages  Fragment  get  Adapter  start  Activity  open  Doc  get  Name  get  Descriptor Document  Content source  mime  Type  name  fast  Thumb Document  Content  Document  Content  create  Local  create  Remote  Document  get  Source  get  Name  get  Fast  Thumb  get  Ext  get  Mime  Type Photo  Holder tag  color  pending  color  sent  color  received  color  read  color  error  context  message  Bubble  overlay  preview  View  fast  Thumb  Loader  time  duration  state  Icon  progress  Container  progress  Value  progress  View  progress  Icon  download  File  V  M  upload  File  V  M  is  Photo  is  Animation  last  Updated  Index  currenr  Rid  updated  play  Requested  animation  Controller  anim  Upload  V  M  Callback  Download  V  M  Callback  is  Fast  Thumb  Loaded  doc Photo  Holder  on  Final  Image  Set  bind  Data  on  Click  on  Not  Downloaded  on  Downloading  on  Downloaded  run  on  Not  Uploading  on  Uploading  on  Uploaded  play  Animation  play  Animation  toggle  Animation  unbind  on  Not  Uploaded  on  Uploading  on  Uploaded  Download  V  M  Callback  check  Fast  Thumb  on  Not  Downloaded  on  Downloading  on  Downloaded  bind  Image,1,1
363,contains  Only  Conjunctions Pig  Filter boolean  size  disjunctions Pig  Filter  Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition  get  Literal  As  String Rex  Node describe  without  normalize  decrement  on  close  empty  digest close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
364,contains  Only  Conjunctions Pig  Filter boolean  size  disjunctions Rex  Node describe  without  normalize  decrement  on  close  empty  digest close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Pig  Filter  Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition  get  Literal  As  String,1,1
365,get  Literal  As  String Rex  Literal String  string  Value Pig  Filter  Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition Rex  Literal value  type  type  Name  time  units Rex  Literal  compute  Digest  digest  Includes  Type  value  Matches  Type  to  Java  String  should  Include  Type  valid  Constant  get  Time  Units  interval  String  pad  width  print  As  Java  append  As  Java  from  Jdbc  String  get  Calendar  Format  get  Type  Name  get  Type  get  Kind  is  Null  get  Value  get  Value  get  Value  get  Value  get  Value  As  boolean  Value  is  Always  True  is  Always  False  equals  hash  Code  value  int  Value  string  Value  find  Value  is  Null  Literal  equals  accept  accept  to  String  Other,0,0
366,get  Literal  As  String Rex  Literal String  string  Value Rex  Literal value  type  type  Name  time  units Rex  Literal  compute  Digest  digest  Includes  Type  value  Matches  Type  to  Java  String  should  Include  Type  valid  Constant  get  Time  Units  interval  String  pad  width  print  As  Java  append  As  Java  from  Jdbc  String  get  Calendar  Format  get  Type  Name  get  Type  get  Kind  is  Null  get  Value  get  Value  get  Value  get  Value  get  Value  As  boolean  Value  is  Always  True  is  Always  False  equals  hash  Code  value  int  Value  string  Value  find  Value  is  Null  Literal  equals  accept  accept  to  String  Other Pig  Filter  Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition,1,0
367,copy Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc Calc  discard  copy Calc hints  program Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept Rex  Program exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  normalize  get  Partial  Mapping  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref,0,0
368,copy Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc Calc  discard  copy Rex  Program exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  normalize  get  Partial  Mapping  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref Calc hints  program Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,1,1
369,copy Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc Calc  discard  copy Calc hints  program Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept Rel  Trait  Set empty  traits  cache  traits  string  Cache  map Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,0,0
370,copy Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc Calc  discard  copy Rel  Trait  Set empty  traits  cache  traits  string  Cache  map Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add Calc hints  program Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,1,0
371,copy Rel  Node  List  Rex  Node  Rel  Data  Type  int  Project Project  discard  copy Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping Rel  Trait  Set empty  traits  cache  traits  string  Cache  map Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,0,0
372,copy Rel  Node  List  Rex  Node  Rel  Data  Type  int  Project Project  discard  copy Rel  Trait  Set empty  traits  cache  traits  string  Cache  map Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,1,1
373,copy Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate Aggregate  check  Indicator  copy Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
374,copy Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate Aggregate  check  Indicator  copy Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,1,1
375,copy Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate Aggregate  check  Indicator  copy Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Trait  Set empty  traits  cache  traits  string  Cache  map Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,0,0
376,copy Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate Aggregate  check  Indicator  copy Rel  Trait  Set empty  traits  cache  traits  string  Cache  map Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,1,0
377,type  Matches  Inferred  assert   Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
378,type  Matches  Inferred  assert   Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,1,0
379,project Immutable  Bit  Set  Set  Rel  Data  Type  Field  Rel  Builder Rel  Node  get  Field  Count  get  Row  Type  equals  range  is  Empty  size  size  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  add  make  Input  Ref  add  get  Name  add  make  Null  Literal  get  Type  add  get  Name  build  project  push Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  accept  get  Hints  apply Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
380,project Immutable  Bit  Set  Set  Rel  Data  Type  Field  Rel  Builder Rel  Node  get  Field  Count  get  Row  Type  equals  range  is  Empty  size  size  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  add  make  Input  Ref  add  get  Name  add  make  Null  Literal  get  Type  add  get  Name  build  project  push Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  accept  get  Hints  apply,1,0
381,is  Valid  Rel  Node  Plan Rel  Node  Materialized  View  Rule boolean  get  Node  Types  entry  Set  as  Map  get  Key  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  get  Value  get  Join  Type  is  Semi  Join Materialized  View  Rule generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution,0,0
382,is  Valid  Rel  Node  Plan Rel  Node  Materialized  View  Rule boolean  get  Node  Types  entry  Set  as  Map  get  Key  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  get  Value  get  Join  Type  is  Semi  Join Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution Materialized  View  Rule generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,1,1
383,split  Predicates Rex  Builder  Rex  Node Pair  Rex  Node  conjunctions  get  Kind  is  Reference  Or  Access  get  get  Operands  is  Reference  Or  Access  get  get  Operands  add  add  add  of  compose  Conjunction  compose  Conjunction Materialized  View  Rule generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
384,split  Predicates Rex  Builder  Rex  Node Pair  Rex  Node  conjunctions  get  Kind  is  Reference  Or  Access  get  get  Operands  is  Reference  Or  Access  get  get  Operands  add  add  add  of  compose  Conjunction  compose  Conjunction Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Materialized  View  Rule generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,1,0
385,shuttle  References Rex  Builder  Rex  Node  Mapping Rex  Node   Materialized  View  Rule generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
386,shuttle  References Rex  Builder  Rex  Node  Mapping Rex  Node   Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Materialized  View  Rule generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,1,0
387,get  Rollup Materialized  View  Aggregate  Rule Sql  Agg  Function   Materialized  View  Aggregate  Rule supported  date  time  rollup  units  filter  Project  Transpose  Rule  filter  Aggregate  Transpose  Rule  aggregate  Project  Pull  Up  Constants  Rule  project  Merge  Rule Materialized  View  Aggregate  Rule  Materialized  View  Aggregate  Rule  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  generate  Mapping  get  Ceil  Sql  Function  get  Floor  Sql  Function  push  Filter  To  Original  View  Plan Sql  Agg  Function requires  Order  requires  Over  requires  Group  Order Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment,0,0
388,get  Rollup Materialized  View  Aggregate  Rule Sql  Agg  Function   Sql  Agg  Function requires  Order  requires  Over  requires  Group  Order Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment Materialized  View  Aggregate  Rule supported  date  time  rollup  units  filter  Project  Transpose  Rule  filter  Aggregate  Transpose  Rule  aggregate  Project  Pull  Up  Constants  Rule  project  Merge  Rule Materialized  View  Aggregate  Rule  Materialized  View  Aggregate  Rule  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  generate  Mapping  get  Ceil  Sql  Function  get  Floor  Sql  Function  push  Filter  To  Original  View  Plan,1,1
389,field  Bitmap Rex  Node Immutable  Bit  Set  accept  build Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
390,field  Bitmap Rex  Node Immutable  Bit  Set  accept  build Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,1,0
391,factor  Bitmap Immutable  Bit  Set Immutable  Bit  Set  builder  find  Ref  set  build Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
392,factor  Bitmap Immutable  Bit  Set Immutable  Bit  Set  builder  find  Ref  set  build Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,1,0
393,get  Child  Factors Immutable  Bit  Set  Builder  Lopt  Multi  Join void  get  Tree  Order  set Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Lopt  Join  Tree factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,0,0
394,get  Child  Factors Immutable  Bit  Set  Builder  Lopt  Multi  Join void  get  Tree  Order  set Lopt  Join  Tree factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,1,1
395,get  Conjunctions Filter  Join  Rule List  Rex  Node  conjunctions  get  Condition  get  Rex  Builder  get  Cluster  size  get  set  collapse  Expanded  Is  Not  Distinct  From  Expr Filter  Join  Rule true  predicate  filter  on  join  dumb  filter  on  join  join  smart  predicate  Join  Condition  Push  Rule  Filter  Into  Join  Rule Filter  Join  Rule  Filter  Join  Rule  Filter  Join  Rule  perform  validate  Join  Filters  Join  Condition  Push  Rule  Join  Condition  Push  Rule  on  Match  Filter  Into  Join  Rule  Filter  Into  Join  Rule  on  Match  apply Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms,0,0
396,get  Conjunctions Filter  Join  Rule List  Rex  Node  conjunctions  get  Condition  get  Rex  Builder  get  Cluster  size  get  set  collapse  Expanded  Is  Not  Distinct  From  Expr Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms Filter  Join  Rule true  predicate  filter  on  join  dumb  filter  on  join  join  smart  predicate  Join  Condition  Push  Rule  Filter  Into  Join  Rule Filter  Join  Rule  Filter  Join  Rule  Filter  Join  Rule  perform  validate  Join  Filters  Join  Condition  Push  Rule  Join  Condition  Push  Rule  on  Match  Filter  Into  Join  Rule  Filter  Into  Join  Rule  on  Match  apply,1,1
397,is  Aggregate  Supported Aggregate  Merge  Rule boolean  is  Distinct  has  Filter  is  Approximate  size  get  Arg  List  unwrap  get  Aggregation Aggregate  Merge  Rule instance Aggregate  Merge  Rule  Aggregate  Merge  Rule  on  Match Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform,0,0
398,is  Aggregate  Supported Aggregate  Merge  Rule boolean  is  Distinct  has  Filter  is  Approximate  size  get  Arg  List  unwrap  get  Aggregation Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform Aggregate  Merge  Rule instance Aggregate  Merge  Rule  Aggregate  Merge  Rule  on  Match,1,1
399,rewrite  Some Set  Correlation  Id  Rel  Builder  Sub  Query  Remove  Rule Rex  Node   Sub  Query  Remove  Rule project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query Rex  Sub  Query rel Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone,0,0
400,rewrite  Some Set  Correlation  Id  Rel  Builder  Sub  Query  Remove  Rule Rex  Node   Rex  Sub  Query rel Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone Sub  Query  Remove  Rule project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,1,1
401,rewrite  Exists Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder Rex  Node  push  project  alias  literal  aggregate  group  Key  as  join  literal  literal  distinct  as  join  literal  is  Not  Null  last  fields Sub  Query  Remove  Rule project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query Rex  Sub  Query rel Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some,0,0
402,rewrite  Exists Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder Rex  Node  push  project  alias  literal  aggregate  group  Key  as  join  literal  literal  distinct  as  join  literal  is  Not  Null  last  fields Rex  Sub  Query rel Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some Sub  Query  Remove  Rule project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,1,0
403,rewrite  In Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder  int Rex  Node  push  fields  all  Literals  get  Operands  get  Operands  collect  map  filter  stream  get  Operands  is  Nullable  get  Type  to  List  literal  literal  make  Null  Literal  get  Rex  Builder  get  Type  collect  map  stream  zip  equals  to  List  filter  project  alias  distinct  collect  map  stream  to  List  add  All  filter  or  and  or  and  collect  map  stream  to  List  project  alias  is  Empty  aggregate  group  Key  field  count  sort  Limit  of  call  field  distinct  clear  clear  aggregate  group  Key  aggregate  group  Key  count  as  count  fields  as  is  Empty  join  join  push  add  alias  project  distinct  as  collect  map  stream  zip  fields  equals  shift  to  List  join  and  join  and  builder  is  Empty  add  is  Null  field  add  equals  field  add  equals  field  literal  is  Empty  add  or  add  is  Not  Null  field  add  is  Not  Null  last  fields  add  call  field  field  add  call  build Sub  Query  Remove  Rule project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query Rex  Sub  Query rel Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some,0,0
404,rewrite  In Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder  int Rex  Node  push  fields  all  Literals  get  Operands  get  Operands  collect  map  filter  stream  get  Operands  is  Nullable  get  Type  to  List  literal  literal  make  Null  Literal  get  Rex  Builder  get  Type  collect  map  stream  zip  equals  to  List  filter  project  alias  distinct  collect  map  stream  to  List  add  All  filter  or  and  or  and  collect  map  stream  to  List  project  alias  is  Empty  aggregate  group  Key  field  count  sort  Limit  of  call  field  distinct  clear  clear  aggregate  group  Key  aggregate  group  Key  count  as  count  fields  as  is  Empty  join  join  push  add  alias  project  distinct  as  collect  map  stream  zip  fields  equals  shift  to  List  join  and  join  and  builder  is  Empty  add  is  Null  field  add  equals  field  add  equals  field  literal  is  Empty  add  or  add  is  Not  Null  field  add  is  Not  Null  last  fields  add  call  field  field  add  call  build Rex  Sub  Query rel Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some Sub  Query  Remove  Rule project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,1,0
405,apply Filter  Table  Scan  Filter  Table  Scan  Rule void  builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build Filter  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
406,apply Filter  Table  Scan  Filter  Table  Scan  Rule void  builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions Filter  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,1,0
407,apply Filter  Table  Scan  Filter  Table  Scan  Rule void  builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build Filter  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test Rel  Opt  Rule  Call logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder,0,0
408,apply Filter  Table  Scan  Filter  Table  Scan  Rule void  builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build Rel  Opt  Rule  Call logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder Filter  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,1,1
409,apply Filter  Table  Scan  Filter  Table  Scan  Rule void  builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build Filter  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints,0,0
410,apply Filter  Table  Scan  Filter  Table  Scan  Rule void  builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints Filter  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,1,0
411,copy  Outer  Join  Info List  Pair  Join  Rel  Type  Rex  Node  int  List  Rel  Data  Type  Field  List  Rel  Data  Type  Field  Join  To  Multi  Join  Rule void   Join  To  Multi  Join  Rule instance  Input  Reference  Counter  ref  Counts Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  shift  Right  Filter  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref Multi  Join inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer,0,0
412,copy  Outer  Join  Info List  Pair  Join  Rel  Type  Rex  Node  int  List  Rel  Data  Type  Field  List  Rel  Data  Type  Field  Join  To  Multi  Join  Rule void   Multi  Join inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer Join  To  Multi  Join  Rule instance  Input  Reference  Counter  ref  Counts Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  shift  Right  Filter  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,1,1
413,shift  Right  Filter Join  Rel  Node  Multi  Join  Rex  Node Rex  Node  size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type Join  To  Multi  Join  Rule instance  Input  Reference  Counter  ref  Counts Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
414,shift  Right  Filter Join  Rel  Node  Multi  Join  Rex  Node Rex  Node  size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Join  To  Multi  Join  Rule instance  Input  Reference  Counter  ref  Counts Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,1,0
415,shift  Right  Filter Join  Rel  Node  Multi  Join  Rex  Node Rex  Node  size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type Join  To  Multi  Join  Rule instance  Input  Reference  Counter  ref  Counts Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref Multi  Join inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer  copy  Outer  Join  Info,0,0
416,shift  Right  Filter Join  Rel  Node  Multi  Join  Rex  Node Rex  Node  size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type Multi  Join inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer  copy  Outer  Join  Info Join  To  Multi  Join  Rule instance  Input  Reference  Counter  ref  Counts Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,1,0
417,get  Simple  Factors Rel  Metadata  Query  Lopt  Multi  Join Map  Integer  is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
418,get  Simple  Factors Rel  Metadata  Query  Lopt  Multi  Join Map  Integer  is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
419,get  Simple  Factors Rel  Metadata  Query  Lopt  Multi  Join Map  Integer  is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
420,get  Simple  Factors Rel  Metadata  Query  Lopt  Multi  Join Map  Integer  is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
421,create  Top  Project Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String Rel  Node  get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Lopt  Join  Tree factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,0,0
422,create  Top  Project Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String Rel  Node  get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build Lopt  Join  Tree factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
423,create  Top  Project Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String Rel  Node  get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
424,create  Top  Project Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String Rel  Node  get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
425,set  Factor  Join  Keys Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder void  get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
426,set  Factor  Join  Keys Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder void  get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
427,set  Factor  Join  Keys Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder void  get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
428,set  Factor  Join  Keys Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder void  get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
429,remap  Join  References Lopt  Multi  Join  int  List  Integer  int  int  int  int  boolean boolean  is  Right  Factor  In  Removable  Self  Join  equals  get  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Num  Fields  In  Join  Factor  get  Right  Column  Mapping  get  Num  Fields  In  Join  Factor  get Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
430,remap  Join  References Lopt  Multi  Join  int  List  Integer  int  int  int  int  boolean boolean  is  Right  Factor  In  Removable  Self  Join  equals  get  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Num  Fields  In  Join  Factor  get  Right  Column  Mapping  get  Num  Fields  In  Join  Factor  get Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
431,swap  Filter Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node Rex  Node  get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Lopt  Join  Tree factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,0,0
432,swap  Filter Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node Rex  Node  get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields Lopt  Join  Tree factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
433,swap  Filter Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node Rex  Node  get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
434,swap  Filter Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node Rex  Node  get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Lopt  Optimize  Join  Rule instance Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
435,apply Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule void   Project  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Project  Table  Scan  Rule  test Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
436,apply Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule void   Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping Project  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Project  Table  Scan  Rule  test,1,0
437,apply Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule void   Project  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Project  Table  Scan  Rule  test Rel  Opt  Rule  Call logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder,0,0
438,apply Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule void   Rel  Opt  Rule  Call logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder Project  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Project  Table  Scan  Rule  test,1,0
439,apply Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule void   Project  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Project  Table  Scan  Rule  test Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints,0,0
440,apply Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule void   Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints Project  Table  Scan  Rule predicate  instance  interpreter on  Match  on  Match  Project  Table  Scan  Rule  test,1,1
441,is  Suitable  Filter Lopt  Multi  Join  Rex  Node  int int   Lopt  Semi  Join  Optimizer threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
442,is  Suitable  Filter Lopt  Multi  Join  Rex  Node  int int   Lopt  Multi  Join multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping Lopt  Semi  Join  Optimizer threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id,1,0
443,is  Suitable  Filter Lopt  Multi  Join  Rex  Node  int int   Lopt  Semi  Join  Optimizer threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
444,is  Suitable  Filter Lopt  Multi  Join  Rex  Node  int int   Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Lopt  Semi  Join  Optimizer threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id,1,0
445,create  Project  Exprs Project  Rel  Node  int  Rex  Builder  List  Rel  Data  Type  Field  List  Pair  Rex  Node  String void  get  Field  List  get  Row  Type  get  Named  Projects  size  accept  add  of  size  get  add  of  make  Input  Ref  get  Type  get  Name Join  Project  Transpose  Rule both  project  left  project  right  project  both  project  include  outer  left  project  include  outer  right  project  include  outer  include  Outer Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  on  Match  has  Left  Child  has  Right  Child  get  Right  Child  get  Project  Child Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
446,create  Project  Exprs Project  Rel  Node  int  Rex  Builder  List  Rel  Data  Type  Field  List  Pair  Rex  Node  String void  get  Field  List  get  Row  Type  get  Named  Projects  size  accept  add  of  size  get  add  of  make  Input  Ref  get  Type  get  Name Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping Join  Project  Transpose  Rule both  project  left  project  right  project  both  project  include  outer  left  project  include  outer  right  project  include  outer  include  Outer Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  on  Match  has  Left  Child  has  Right  Child  get  Right  Child  get  Project  Child,1,0
447,is  Join  Supported Aggregate  Aggregate  Join  Transpose  Rule boolean  get  Join  Type  is  Empty  get  Agg  Call  List Aggregate  Join  Transpose  Rule instance  extended  allow  Functions  Side  split  new  Input  aggregate Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints,0,0
448,is  Join  Supported Aggregate  Aggregate  Join  Transpose  Rule boolean  get  Join  Type  is  Empty  get  Agg  Call  List Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints Aggregate  Join  Transpose  Rule instance  extended  allow  Functions  Side  split  new  Input  aggregate Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry,1,1
449,is  Join  Supported Aggregate  Aggregate  Join  Transpose  Rule boolean  get  Join  Type  is  Empty  get  Agg  Call  List Aggregate  Join  Transpose  Rule instance  extended  allow  Functions  Side  split  new  Input  aggregate Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
450,is  Join  Supported Aggregate  Aggregate  Join  Transpose  Rule boolean  get  Join  Type  is  Empty  get  Agg  Call  List Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Join  Transpose  Rule instance  extended  allow  Functions  Side  split  new  Input  aggregate Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry,1,0
451,find  Reference Logical  Window  Project  Window  Transpose  Rule Immutable  Bit  Set  get  Field  Count  get  Row  Type  get  Input  builder Project  Window  Transpose  Rule instance Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  visit  Input  Ref,0,0
452,find  Reference Logical  Window  Project  Window  Transpose  Rule Immutable  Bit  Set  get  Field  Count  get  Row  Type  get  Input  builder Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  visit  Input  Ref Project  Window  Transpose  Rule instance Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index,1,1
453,find  Reference Logical  Window  Project  Window  Transpose  Rule Immutable  Bit  Set  get  Field  Count  get  Row  Type  get  Input  builder Project  Window  Transpose  Rule instance Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index Logical  Window Window  Key  group  Set  order  Keys  is  Rows  lower  Bound  upper  Bound Logical  Window  copy  create  create  to  Input  Refs  Window  Key  hash  Code  equals  add  Windows,0,0
454,find  Reference Logical  Window  Project  Window  Transpose  Rule Immutable  Bit  Set  get  Field  Count  get  Row  Type  get  Input  builder Logical  Window Window  Key  group  Set  order  Keys  is  Rows  lower  Bound  upper  Bound Logical  Window  copy  create  create  to  Input  Refs  Window  Key  hash  Code  equals  add  Windows Project  Window  Transpose  Rule instance Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index,1,0
455,get  Adjusted  Index int  Immutable  Bit  Set  int int  cardinality  cardinality  get Project  Window  Transpose  Rule instance Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
456,get  Adjusted  Index int  Immutable  Bit  Set  int int  cardinality  cardinality  get Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Project  Window  Transpose  Rule instance Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call,1,0
457,get  Input  With  Same  Row  Type Aggregate Rel  Node  are  Row  Types  Equal  get  Row  Type  get  Row  Type  get  Input  get  Input  create  Project  get  Input  as  List  get  Group  Set Aggregate  Union  Aggregate  Rule agg  on  first  input  agg  on  second  input  instance Aggregate  Union  Aggregate  Rule  Aggregate  Union  Aggregate  Rule  on  Match Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
458,get  Input  With  Same  Row  Type Aggregate Rel  Node  are  Row  Types  Equal  get  Row  Type  get  Row  Type  get  Input  get  Input  create  Project  get  Input  as  List  get  Group  Set Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Union  Aggregate  Rule agg  on  first  input  agg  on  second  input  instance Aggregate  Union  Aggregate  Rule  Aggregate  Union  Aggregate  Rule  on  Match,1,0
459,create  Aggregate  Call  With  Binding Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int Aggregate  Call  of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
460,create  Aggregate  Call  With  Binding Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int Aggregate  Call  of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
461,create  Aggregate  Call  With  Binding Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int Aggregate  Call  of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Sql  Agg  Function requires  Order  requires  Over  requires  Group  Order Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment  get  Rollup,0,0
462,create  Aggregate  Call  With  Binding Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int Aggregate  Call  of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type Sql  Agg  Function requires  Order  requires  Over  requires  Group  Order Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment  get  Rollup Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
463,create  Aggregate  Call  With  Binding Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int Aggregate  Call  of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
464,create  Aggregate  Call  With  Binding Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int Aggregate  Call  of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
465,get  Sum  Aggregated  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
466,get  Sum  Aggregated  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
467,get  Sum  Aggregated  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
468,get  Sum  Aggregated  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
469,get  Regr  Count  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
470,get  Regr  Count  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count Aggregate  Call agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
471,get  Regr  Count  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
472,get  Regr  Count  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
473,get  Regr  Count  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Immutable  Int  List ints  empty  array  empty  Empty  Immutable  Int  List  Abstract  Indexed  List  Iterator  size  position Immutable  Int  List  of  of  copy  Of  copy  Of  copy  Of  copy  From  Collection  hash  Code  equals  to  String  is  Empty  size  to  Array  to  Array  to  Int  Array  get  get  Int  iterator  list  Iterator  list  Iterator  get  index  Of  index  Of  last  Index  Of  last  Index  Of  append  append  range  apply  identity  append  All  to  Array  to  Array  iterator  list  Iterator  get  Abstract  Indexed  List  Iterator  has  Next  next  next  Index  has  Previous  previous  previous  Index,0,0
474,get  Regr  Count  Rex  Node Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule Rex  Node  create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count Immutable  Int  List ints  empty  array  empty  Empty  Immutable  Int  List  Abstract  Indexed  List  Iterator  size  position Immutable  Int  List  of  of  copy  Of  copy  Of  copy  Of  copy  From  Collection  hash  Code  equals  to  String  is  Empty  size  to  Array  to  Array  to  Int  Array  get  get  Int  iterator  list  Iterator  list  Iterator  get  index  Of  index  Of  last  Index  Of  last  Index  Of  append  append  range  apply  identity  append  All  to  Array  to  Array  iterator  list  Iterator  get  Abstract  Indexed  List  Iterator  has  Next  next  next  Index  has  Previous  previous  previous  Index Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,1
475,divide boolean  Rex  Builder  Rex  Node  Rex  Node  Rex  Node Rex  Node  make  Call  make  Call  make  Exact  Literal  make  Null  Literal  get  Type  make  Call  make  Call  make  Call  make  Call Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
476,divide boolean  Rex  Builder  Rex  Node  Rex  Node  Rex  Node Rex  Node  make  Call  make  Call  make  Exact  Literal  make  Null  Literal  get  Type  make  Call  make  Call  make  Call  make  Call Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Aggregate  Reduce  Functions  Rule instance  functions  To  Reduce Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
477,can  Push Aggregate  Immutable  Bit  Set boolean  range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains Filter  Aggregate  Transpose  Rule instance Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
478,can  Push Aggregate  Immutable  Bit  Set boolean  range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Filter  Aggregate  Transpose  Rule instance Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match,1,0
479,can  Push Aggregate  Immutable  Bit  Set boolean  range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains Filter  Aggregate  Transpose  Rule instance Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
480,can  Push Aggregate  Immutable  Bit  Set boolean  range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Filter  Aggregate  Transpose  Rule instance Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match,1,0
481,adjust  Condition Logical  Project  Semi  Join  Project  Transpose  Rule Rex  Node  get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition Semi  Join  Project  Transpose  Rule instance Semi  Join  Project  Transpose  Rule  on  Match Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  find  Reference  visit  Input  Ref,0,0
482,adjust  Condition Logical  Project  Semi  Join  Project  Transpose  Rule Rex  Node  get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  find  Reference  visit  Input  Ref Semi  Join  Project  Transpose  Rule instance Semi  Join  Project  Transpose  Rule  on  Match,1,0
483,adjust  Condition Logical  Project  Semi  Join  Project  Transpose  Rule Rex  Node  get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition Semi  Join  Project  Transpose  Rule instance Semi  Join  Project  Transpose  Rule  on  Match Logical  Join semi  Join  Done  system  Field  List Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  create  create  copy  accept  explain  Terms  is  Semi  Join  Done  get  System  Field  List  with  Hints,0,0
484,adjust  Condition Logical  Project  Semi  Join  Project  Transpose  Rule Rex  Node  get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition Logical  Join semi  Join  Done  system  Field  List Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  create  create  copy  accept  explain  Terms  is  Semi  Join  Done  get  System  Field  List  with  Hints Semi  Join  Project  Transpose  Rule instance Semi  Join  Project  Transpose  Rule  on  Match,1,1
485,convert  Singleton  Distinct Rel  Builder  Aggregate  Set  Pair  List  Integer  Integer Rel  Builder  check  Argument  size  push  get  Input  get  Agg  Call  List  get  Group  Set  as  List  get  Group  Set  is  Distinct  add  All  get  Arg  List  of  is  Distinct  create  get  Aggregation  is  Approximate  ignore  Nulls  get  Arg  List  cardinality  peek  add  push  copy  get  Trait  Set  build  is  Distinct  get  Arg  List  add  size  head  Set  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  size  of  get  Kind  get  Aggregation  create  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  get  Name  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  add  get  add  push  copy  get  Trait  Set  build  of Aggregate  Expand  Distinct  Aggregates  Rule instance  join  use  Grouping  Sets Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls  create  Select  Distinct Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
486,convert  Singleton  Distinct Rel  Builder  Aggregate  Set  Pair  List  Integer  Integer Rel  Builder  check  Argument  size  push  get  Input  get  Agg  Call  List  get  Group  Set  as  List  get  Group  Set  is  Distinct  add  All  get  Arg  List  of  is  Distinct  create  get  Aggregation  is  Approximate  ignore  Nulls  get  Arg  List  cardinality  peek  add  push  copy  get  Trait  Set  build  is  Distinct  get  Arg  List  add  size  head  Set  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  size  of  get  Kind  get  Aggregation  create  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  get  Name  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  add  get  add  push  copy  get  Trait  Set  build  of Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Expand  Distinct  Aggregates  Rule instance  join  use  Grouping  Sets Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls  create  Select  Distinct,1,0
487,create  Select  Distinct Rel  Builder  Aggregate  List  Integer  int  Map  Integer  Integer Rel  Builder  push  get  Input  get  Field  List  get  Row  Type  peek  get  Group  Set  put  size  add  of  get  Rex  Builder  get  Cluster  of  of  make  Call  make  Null  Literal  get  Type  put  size  add  of  get  put  size  add  of  project  left  right  push  copy  get  Trait  Set  build  range  size  of Aggregate  Expand  Distinct  Aggregates  Rule instance  join  use  Grouping  Sets Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  convert  Singleton  Distinct  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
488,create  Select  Distinct Rel  Builder  Aggregate  List  Integer  int  Map  Integer  Integer Rel  Builder  push  get  Input  get  Field  List  get  Row  Type  peek  get  Group  Set  put  size  add  of  get  Rex  Builder  get  Cluster  of  of  make  Call  make  Null  Literal  get  Type  put  size  add  of  get  put  size  add  of  project  left  right  push  copy  get  Trait  Set  build  range  size  of Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Aggregate  Expand  Distinct  Aggregates  Rule instance  join  use  Grouping  Sets Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  convert  Singleton  Distinct  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls,1,0
489,as String  String  Sql  Implementor Sql  Call  add  add  add  create  Call Sql  Implementor pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep,0,0
490,as String  String  Sql  Implementor Sql  Call  add  add  add  create  Call Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep Sql  Implementor pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,1,1
491,set  Op  To  Sql Sql  Set  Operator  Rel  Node Result  zip  get  Inputs  visit  Child  as  Select  create  Call  as  Select  list  result Sql  Implementor pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result Sql  Set  Operator all Sql  Set  Operator  Sql  Set  Operator  is  All  is  Distinct  validate  Call,0,0
492,set  Op  To  Sql Sql  Set  Operator  Rel  Node Result  zip  get  Inputs  visit  Child  as  Select  create  Call  as  Select  list  result Sql  Set  Operator all Sql  Set  Operator  Sql  Set  Operator  is  All  is  Distinct  validate  Call Sql  Implementor pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,1,0
493,requires  Alias Sql  Node boolean  requires  Alias  For  From  Items  get  Kind  has  Implicit  Table  Alias Sql  Implementor pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
494,requires  Alias Sql  Node boolean  requires  Alias  For  From  Items  get  Kind  has  Implicit  Table  Alias Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Sql  Implementor pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,1,0
495,is  Cross  Join Join boolean  get  Join  Type  is  Always  True  get  Condition Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
496,is  Cross  Join Join boolean  get  Join  Type  is  Always  True  get  Condition Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
497,cast  Null  Type Sql  Node  Rel  Data  Type  Field Sql  Node  create  Call  get  Cast  Spec  get  Type Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
498,cast  Null  Type Sql  Node  Rel  Data  Type  Field Sql  Node  create  Call  get  Cast  Spec  get  Type Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
499,build  Agg  Group  List Aggregate  Builder  List  Sql  Node  List  Sql  Node void  get  Group  Set  field  add  Select  get  Row  Type  add Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
500,build  Agg  Group  List Aggregate  Builder  List  Sql  Node  List  Sql  Node void  get  Group  Set  field  add  Select  get  Row  Type  add Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
501,build  Aggregate Aggregate  Builder  List  Sql  Node  List  Sql  Node Result  get  Agg  Call  List  to  Sql  get  Aggregation  rewrite  Single  Value  Expr  add  Select  get  Row  Type  set  Select  is  Empty  is  Empty  get  Agg  Call  List  set  Group  By  result Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
502,build  Aggregate Aggregate  Builder  List  Sql  Node  List  Sql  Node Result  get  Agg  Call  List  to  Sql  get  Aggregation  rewrite  Single  Value  Expr  add  Select  get  Row  Type  set  Select  is  Empty  is  Empty  get  Agg  Call  List  set  Group  By  result Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
503,group  Item List  Sql  Node  Immutable  Bit  Set  Immutable  Bit  Set Sql  Node  collect  map  stream  as  List  get  index  Of  to  List  size  get  create  Call Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
504,group  Item List  Sql  Node  Immutable  Bit  Set  Immutable  Bit  Set Sql  Node  collect  map  stream  as  List  get  index  Of  to  List  size  get  create  Call Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
505,offset  Fetch Sql  Implementor  Result  Rel  To  Sql  Converter Sql  Implementor  Result  builder  set  Fetch  to  Sql  result  builder  set  Offset  to  Sql  result Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms,0,0
506,offset  Fetch Sql  Implementor  Result  Rel  To  Sql  Converter Sql  Implementor  Result  builder  set  Fetch  to  Sql  result  builder  set  Offset  to  Sql  result Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,1
507,has  Tricky  Rollup Sort  Aggregate boolean  supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
508,has  Tricky  Rollup Sort  Aggregate boolean  supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
509,has  Tricky  Rollup Sort  Aggregate boolean  supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
510,has  Tricky  Rollup Sort  Aggregate boolean  supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
511,as Sql  Node  String Sql  Call  create  Call Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep,0,0
512,as Sql  Node  String Sql  Call  create  Call Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
513,visit Rel  Node Result  get  Name  get  Class Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame Table  Function  Scan rex  Call  element  Type  inputs  column  Mappings Table  Function  Scan  Table  Function  Scan  copy  copy  get  Inputs  get  Child  Exps  accept  replace  Input  estimate  Row  Count  get  Call  explain  Terms  get  Column  Mappings  get  Element  Type,0,0
514,visit Rel  Node Result  get  Name  get  Class Table  Function  Scan rex  Call  element  Type  inputs  column  Mappings Table  Function  Scan  Table  Function  Scan  copy  copy  get  Inputs  get  Child  Exps  accept  replace  Input  estimate  Row  Count  get  Call  explain  Terms  get  Column  Mappings  get  Element  Type Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
515,create  As  Full  Operands Rel  Data  Type  Sql  Node  String List  Sql  Node  add  add  for  Each  get  Field  Names  starts  With  to  Lower  Case  add Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  add  Select  parse  Correl  Table  Frame Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
516,create  As  Full  Operands Rel  Data  Type  Sql  Node  String List  Sql  Node  add  add  for  Each  get  Field  Names  starts  With  to  Lower  Case  add Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Rel  To  Sql  Converter anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  add  Select  parse  Correl  Table  Frame,1,0
517,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
518,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
519,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
520,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
521,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Calc hints  program Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,0,0
522,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Calc hints  program Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
523,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
524,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
525,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms,0,0
526,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,1
527,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
528,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
529,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
530,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
531,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
532,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
533,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
534,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
535,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
536,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
537,average  Join  Column  Sizes Join  Rel  Metadata  Query List  Double  projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
538,average  Join  Column  Sizes Join  Rel  Metadata  Query List  Double  projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
539,average  Join  Column  Sizes Join  Rel  Metadata  Query List  Double  projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
540,average  Join  Column  Sizes Join  Rel  Metadata  Query List  Double  projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
541,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
542,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
543,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
544,average  Column  Sizes Rel  Metadata  Query  Rel  Md  Size List  Double  get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
545,average  Rex  Size Rex  Node  List  Double Double  get  Kind  get  get  Index  type  Value  Size  get  Type  get  Value  As  get  Operands  get  Sql  Type  Name  get  Type  get  Sql  Type  Name  get  Type  average  Rex  Size  average  Type  Value  Size  get  Type Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
546,average  Rex  Size Rex  Node  List  Double Double  get  Kind  get  get  Index  type  Value  Size  get  Type  get  Value  As  get  Operands  get  Sql  Type  Name  get  Type  get  Sql  Type  Name  get  Type  average  Rex  Size  average  Type  Value  Size  get  Type Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Size source  bytes  per  character Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size,1,0
547,cumulative  Memory  Within  Phase Rel  Node  Rel  Metadata  Query Double  memory  is  Phase  Transition  get  Inputs  cumulative  Memory  Within  Phase Rel  Md  Memory source Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase  Split Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
548,cumulative  Memory  Within  Phase Rel  Node  Rel  Metadata  Query Double  memory  is  Phase  Transition  get  Inputs  cumulative  Memory  Within  Phase Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Memory source Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase  Split,1,0
549,cumulative  Memory  Within  Phase  Split Rel  Node  Rel  Metadata  Query Double  cumulative  Memory  Within  Phase  split  Count Rel  Md  Memory source Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
550,cumulative  Memory  Within  Phase  Split Rel  Node  Rel  Metadata  Query Double  cumulative  Memory  Within  Phase  split  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Memory source Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase,1,0
551,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
552,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,1
553,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
554,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
555,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
556,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
557,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
558,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
559,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Intersect  Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count,0,0
560,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Intersect  Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
561,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
562,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
563,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Minus  Minus  Minus  estimate  Row  Count,0,0
564,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Minus  Minus  Minus  estimate  Row  Count Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
565,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
566,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
567,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
568,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
569,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
570,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
571,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Enumerable  Limit offset  fetch Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count,0,0
572,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Enumerable  Limit offset  fetch Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
573,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
574,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
575,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
576,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
577,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
578,get  Row  Count Rel  Metadata  Query  Rel  Md  Row  Count Double  get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Row  Count source get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
579,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
580,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
581,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
582,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
583,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
584,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
585,project  Predicate Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set Rex  Node  bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
586,project  Predicate Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set Rex  Node  bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
587,project  Predicate Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set Rex  Node  bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
588,project  Predicate Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set Rex  Node  bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
589,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
590,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
591,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
592,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
593,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
594,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
595,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
596,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
597,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
598,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
599,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
600,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
601,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Union  Union  Union  estimate  Row  Count  estimate  Row  Count,0,0
602,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Union  Union  Union  estimate  Row  Count  estimate  Row  Count Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,1
603,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
604,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
605,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Intersect  Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count,0,0
606,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Intersect  Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
607,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
608,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
609,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
610,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
611,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
612,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
613,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Exchange distribution Exchange  Exchange  copy  copy  get  Distribution  compute  Self  Cost  explain  Terms,0,0
614,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Exchange distribution Exchange  Exchange  copy  copy  get  Distribution  compute  Self  Cost  explain  Terms Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
615,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
616,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
617,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
618,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
619,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
620,get  Predicates Rel  Metadata  Query  Rel  Md  Predicates Rel  Opt  Predicate  List  get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Predicates source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
621,get  Project  Unique  Keys Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys Set  Immutable  Bit  Set  builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Single  Rel input Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type,0,0
622,get  Project  Unique  Keys Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys Set  Immutable  Bit  Set  builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build Single  Rel input Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,1
623,get  Project  Unique  Keys Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys Set  Immutable  Bit  Set  builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
624,get  Project  Unique  Keys Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys Set  Immutable  Bit  Set  builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
625,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
626,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
627,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
628,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
629,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Set  Op inputs  kind  all Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins,0,0
630,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Set  Op inputs  kind  all Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
631,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
632,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
633,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
634,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
635,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
636,get  Unique  Keys Filter  Rel  Metadata  Query  boolean Set  Immutable  Bit  Set  get  Unique  Keys  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Unique  Keys source Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
637,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
638,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
639,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
640,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
641,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Intersect  Intersect  Intersect  estimate  Row  Count,0,0
642,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Intersect  Intersect  Intersect  estimate  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,1
643,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
644,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
645,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
646,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
647,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
648,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
649,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
650,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
651,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
652,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
653,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Enumerable  Limit offset  fetch Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count,0,0
654,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Enumerable  Limit offset  fetch Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
655,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
656,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
657,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
658,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
659,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
660,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
661,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
662,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
663,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
664,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
665,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
666,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
667,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
668,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
669,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
670,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
671,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
672,get  Max  Row  Count Rel  Metadata  Query  Rel  Md  Max  Row  Count Double  get  Inputs  get  Max  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Max  Row  Count source get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
673,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
674,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
675,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
676,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
677,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Calc hints  program Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,0,0
678,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Calc hints  program Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
679,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
680,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
681,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
682,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Sort collation  field  Exps  offset  fetch Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
683,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
684,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
685,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Enumerable  Limit offset  fetch Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression,0,0
686,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Enumerable  Limit offset  fetch Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,1
687,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
688,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
689,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
690,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
691,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
692,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
693,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
694,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
695,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
696,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
697,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
698,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
699,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
700,get  Min  Row  Count Rel  Metadata  Query  Rel  Md  Min  Row  Count Double offset  offset get  Min  Row  Count  get  Input  int  Value  max  int  Value Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Min  Row  Count source get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
701,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
702,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
703,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
704,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
705,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
706,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
707,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
708,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
709,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
710,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
711,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
712,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
713,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
714,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
715,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Calc hints  program Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,0,0
716,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Calc hints  program Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
717,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
718,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
719,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
720,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
721,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
722,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
723,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
724,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
725,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
726,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
727,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
728,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
729,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
730,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
731,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
732,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
733,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
734,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
735,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
736,get  Selectivity Union  Rel  Metadata  Query  Rex  Node Double  size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Selectivity source Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
737,distribution Rel  Node  Rel  Metadata  Query Rel  Distribution   Rel  Md  Distribution source Rel  Md  Distribution  get  Def  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  table  snapshot  sort  filter  limit  calc  project  values  exchange Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
738,distribution Rel  Node  Rel  Metadata  Query Rel  Distribution   Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distribution source Rel  Md  Distribution  get  Def  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  table  snapshot  sort  filter  limit  calc  project  values  exchange,1,0
739,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
740,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
741,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
742,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
743,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
744,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
745,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
746,get  All  Predicates Rel  Node  Rel  Metadata  Query Rel  Opt  Predicate  List   Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  All  Predicates source get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
747,get  Column  Origins Rel  Metadata  Query  int  Rel  Md  Column  Origins Set  Rel  Column  Origin  get  Inputs  get  Column  Origins  add  All Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref Set  Op inputs  kind  all Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous,0,0
748,get  Column  Origins Rel  Metadata  Query  int  Rel  Md  Column  Origins Set  Rel  Column  Origin  get  Inputs  get  Column  Origins  add  All Set  Op inputs  kind  all Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,1,1
749,get  Column  Origins Rel  Metadata  Query  int  Rel  Md  Column  Origins Set  Rel  Column  Origin  get  Inputs  get  Column  Origins  add  All Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
750,get  Column  Origins Rel  Metadata  Query  int  Rel  Md  Column  Origins Set  Rel  Column  Origin  get  Inputs  get  Column  Origins  add  All Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,1,0
751,get  Column  Origins Rel  Metadata  Query  int  Rel  Md  Column  Origins Set  Rel  Column  Origin  get  Inputs  get  Column  Origins  add  All Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
752,get  Column  Origins Rel  Metadata  Query  int  Rel  Md  Column  Origins Set  Rel  Column  Origin  get  Inputs  get  Column  Origins  add  All Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,1,0
753,get  Multiple  Columns Rex  Node  Rel  Node  Rel  Metadata  Query Set  Rel  Column  Origin   Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
754,get  Multiple  Columns Rex  Node  Rel  Node  Rel  Metadata  Query Set  Rel  Column  Origin   Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref,1,0
755,get  Multiple  Columns Rex  Node  Rel  Node  Rel  Metadata  Query Set  Rel  Column  Origin   Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
756,get  Multiple  Columns Rex  Node  Rel  Node  Rel  Metadata  Query Set  Rel  Column  Origin   Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Column  Origins source Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref,1,0
757,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
758,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
759,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
760,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
761,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
762,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
763,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
764,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
765,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
766,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
767,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
768,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
769,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
770,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
771,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
772,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
773,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
774,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
775,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
776,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
777,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
778,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
779,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
780,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
781,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
782,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
783,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
784,get  Population  Size Filter  Rel  Metadata  Query  Immutable  Bit  Set Double  get  Population  Size  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Population  Size source Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
785,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
786,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
787,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
788,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
789,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References Set  Op inputs  kind  all Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins,0,0
790,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Set  Op inputs  kind  all Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
791,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
792,get  Table  References Rel  Node  Rel  Metadata  Query Set  Rel  Table  Ref   Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Table  References source Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
793,are  Columns  Unique Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean Boolean  is  Key  get  Table Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
794,are  Columns  Unique Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean Boolean  is  Key  get  Table Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
795,are  Columns  Unique Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean Boolean  is  Key  get  Table Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
796,are  Columns  Unique Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean Boolean  is  Key  get  Table Table  Scan table  hints Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
797,are  Columns  Unique Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean Boolean  is  Key  get  Table Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
798,are  Columns  Unique Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean Boolean  is  Key  get  Table Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
799,are  Project  Columns  Unique Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node Boolean  get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
800,are  Project  Columns  Unique Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node Boolean  get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
801,are  Project  Columns  Unique Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node Boolean  get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates Single  Rel input Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type  get  Project  Unique  Keys,0,0
802,are  Project  Columns  Unique Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node Boolean  get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build Single  Rel input Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type  get  Project  Unique  Keys Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
803,are  Project  Columns  Unique Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node Boolean  get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
804,are  Project  Columns  Unique Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node Boolean  get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
805,simply  Projects Rel  Node  Immutable  Bit  Set boolean  get  Projects  size  get  get  get  Index Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
806,simply  Projects Rel  Node  Immutable  Bit  Set boolean  get  Projects  size  get  get  get  Index Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Column  Uniqueness source Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
807,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
808,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
809,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
810,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
811,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
812,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
813,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
814,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
815,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
816,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
817,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
818,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Union  Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
819,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
820,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
821,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
822,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Filter condition Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
823,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
824,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
825,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
826,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
827,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
828,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
829,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
830,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Aggregate hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
831,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
832,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
833,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
834,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
835,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
836,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
837,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
838,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Values is  empty  j  is  empty  is  not  empty  tuples Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
839,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
840,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
841,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
842,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
843,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
844,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
845,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
846,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Project exps  hints  Flags  anon  fields  boxed  none Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
847,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
848,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
849,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
850,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
851,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
852,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
853,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
854,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Subset logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
855,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
856,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Immutable  Bit  Set comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
857,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
858,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
859,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
860,get  Distinct  Row  Count Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node Double  are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Distinct  Row  Count source Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
861,get  Percentage  Original  Rows Aggregate  Rel  Metadata  Query Double  get  Percentage  Original  Rows  get  Input Rel  Md  Percentage  Original  Rows instance  source Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
862,get  Percentage  Original  Rows Aggregate  Rel  Metadata  Query Double  get  Percentage  Original  Rows  get  Input Join condition  variables  Set  hints  join  Type  join  Info Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported Rel  Md  Percentage  Original  Rows instance  source Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,1,0
863,get  Percentage  Original  Rows Aggregate  Rel  Metadata  Query Double  get  Percentage  Original  Rows  get  Input Rel  Md  Percentage  Original  Rows instance  source Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
864,get  Percentage  Original  Rows Aggregate  Rel  Metadata  Query Double  get  Percentage  Original  Rows  get  Input Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Percentage  Original  Rows instance  source Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,1,0
865,get  Cumulative  Cost Rel  Node  Rel  Metadata  Query Rel  Opt  Cost  get  Non  Cumulative  Cost  get  Inputs  plus  get  Cumulative  Cost Rel  Md  Percentage  Original  Rows instance  source Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
866,get  Cumulative  Cost Rel  Node  Rel  Metadata  Query Rel  Opt  Cost  get  Non  Cumulative  Cost  get  Inputs  plus  get  Cumulative  Cost Rel  Metadata  Query empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan Rel  Md  Percentage  Original  Rows instance  source Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,1,0
867,normalize Rex  Builder  Rex  Simplify Rex  Program   Rex  Program exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  get  Partial  Mapping  copy  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref Rex  Simplify paranoid  rex  Builder  predicates  default  Unknown  As  predicate  Elimination  executor  strong  Case  Branch  cond  value  Safe  Rex  Visitor  safe  Ops  Comparison  ref  kind  literal  Is  Predicate  ref  kind Rex  Simplify  Rex  Simplify  Rex  Simplify  Rex  Simplify  with  Unknown  As  False  with  Predicates  with  Paranoid  with  Predicate  Elimination  simplify  Preserving  Type  simplify  Preserving  Type  simplify  simplify  Unknown  As  False  simplify  Unknown  As  simplify  simplify  Generic  Node  simplify  Comparison  simplify  Comparison  simplify  Ands  simplify  Ands  simplify  List  simplify  And  Terms  simplify  Or  Terms  allowed  As  Predicate  During  Or  Simplification  simplify  Not  simplify  Unary  Minus  simplify  Unary  Plus  simplify  Is  simplify  Is  Predicate  simplify  Is  simplify  Is  Not  Null  simplify  Is  Null  validate  Strong  Policy  has  Custom  Nullability  Rules  simplify  Coalesce  simplify  Case  generate  Branch  same  Type  Or  Narrows  Nullability  Case  Branch  to  String  from  Case  Operands  to  Case  Operands  Safe  Rex  Visitor  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  is  Safe  Expression  simplify  Boolean  Case  simplify  Boolean  Case  Generic  simplify  And  simplify  And  simplify  And  simplify  And  For  Unknown  As  False  simplify  And  For  Unknown  As  False  simplify  Not  Equal  simplify  Using  Predicates  residue  simplify  Or  simplify  Or  simplify  Ors  ensure  Paranoid  Off  simplify  Ors  verify  simplify  Cast  simplify  Ceil  Floor  can  Roll  Up  remove  Nullability  Cast  process  Range  range  of  Comparison  of  of  Is  Predicate  of  is  Upper  Bound  is  Lower  Bound  simplify  Filter  Predicates  replace  Last,0,0
868,normalize Rex  Builder  Rex  Simplify Rex  Program   Rex  Simplify paranoid  rex  Builder  predicates  default  Unknown  As  predicate  Elimination  executor  strong  Case  Branch  cond  value  Safe  Rex  Visitor  safe  Ops  Comparison  ref  kind  literal  Is  Predicate  ref  kind Rex  Simplify  Rex  Simplify  Rex  Simplify  Rex  Simplify  with  Unknown  As  False  with  Predicates  with  Paranoid  with  Predicate  Elimination  simplify  Preserving  Type  simplify  Preserving  Type  simplify  simplify  Unknown  As  False  simplify  Unknown  As  simplify  simplify  Generic  Node  simplify  Comparison  simplify  Comparison  simplify  Ands  simplify  Ands  simplify  List  simplify  And  Terms  simplify  Or  Terms  allowed  As  Predicate  During  Or  Simplification  simplify  Not  simplify  Unary  Minus  simplify  Unary  Plus  simplify  Is  simplify  Is  Predicate  simplify  Is  simplify  Is  Not  Null  simplify  Is  Null  validate  Strong  Policy  has  Custom  Nullability  Rules  simplify  Coalesce  simplify  Case  generate  Branch  same  Type  Or  Narrows  Nullability  Case  Branch  to  String  from  Case  Operands  to  Case  Operands  Safe  Rex  Visitor  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  is  Safe  Expression  simplify  Boolean  Case  simplify  Boolean  Case  Generic  simplify  And  simplify  And  simplify  And  simplify  And  For  Unknown  As  False  simplify  And  For  Unknown  As  False  simplify  Not  Equal  simplify  Using  Predicates  residue  simplify  Or  simplify  Or  simplify  Ors  ensure  Paranoid  Off  simplify  Ors  verify  simplify  Cast  simplify  Ceil  Floor  can  Roll  Up  remove  Nullability  Cast  process  Range  range  of  Comparison  of  of  Is  Predicate  of  is  Upper  Bound  is  Lower  Bound  simplify  Filter  Predicates  replace  Last Rex  Program exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  get  Partial  Mapping  copy  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref,1,0
869,apply List  T List  T  mutate Rex  Shuttle  visit  Over  visit  Window  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  visit  Call  visit  Array  visit  List  visit  List  visit  Field  Collations  visit  Correl  Variable  visit  Field  Access  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Dynamic  Param  visit  Range  Ref  mutate  apply  apply Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
870,apply List  T List  T  mutate Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rex  Shuttle  visit  Over  visit  Window  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  visit  Call  visit  Array  visit  List  visit  List  visit  Field  Collations  visit  Correl  Variable  visit  Field  Access  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Dynamic  Param  visit  Range  Ref  mutate  apply  apply,1,0
871,is  Boolean Rex  Node boolean  get  Type  in  Boolean  Family Rex  Transformer root  rex  Builder  is  Parents  Count  transformable  Operators Rex  Transformer  is  Nullable  is  Transformable  transform  Null  Semantics  transform  Null  Semantics Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
872,is  Boolean Rex  Node boolean  get  Type  in  Boolean  Family Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rex  Transformer root  rex  Builder  is  Parents  Count  transformable  Operators Rex  Transformer  is  Nullable  is  Transformable  transform  Null  Semantics  transform  Null  Semantics,1,0
873,is  Nullable Rex  Node boolean  is  Nullable  get  Type Rex  Transformer root  rex  Builder  is  Parents  Count  transformable  Operators Rex  Transformer  is  Boolean  is  Transformable  transform  Null  Semantics  transform  Null  Semantics Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
874,is  Nullable Rex  Node boolean  is  Nullable  get  Type Rex  Node describe  without  normalize  decrement  on  close  empty  digest contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code Rex  Transformer root  rex  Builder  is  Parents  Count  transformable  Operators Rex  Transformer  is  Boolean  is  Transformable  transform  Null  Semantics  transform  Null  Semantics,1,0
875,infer  Type  From  Validator Sql  Case  Operator Rel  Data  Type  get  Call  get  Then  Operands  get  When  Operands  get  Type  Factory  size  get  List  get  derive  Type  get  Validator  get  Scope  get  get  Kind  is  Nullable  equals  Deep  get  get  Operand  List  create  Type  With  Nullability  add  is  Null  Literal  add  get  Else  Operand  add  derive  Type  get  Validator  get  Scope  get  Else  Operand  is  Null  Literal  add  least  Restrictive  is  Type  Coercion  Enabled  get  Type  Coercion  get  Validator  get  Wider  Type  For  case  When  Coercion  derive  Type  get  Validator  get  Scope  get  Call  new  Validation  Error  illegal  Mixing  Of  Types  get  Validator  set  Validated  Node  Type Sql  Case  Operator instance Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  infer  Type  From  Operands  get  Operand  Count  Range  get  Syntax  create  Call  unparse Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled,0,0
876,infer  Type  From  Validator Sql  Case  Operator Rel  Data  Type  get  Call  get  Then  Operands  get  When  Operands  get  Type  Factory  size  get  List  get  derive  Type  get  Validator  get  Scope  get  get  Kind  is  Nullable  equals  Deep  get  get  Operand  List  create  Type  With  Nullability  add  is  Null  Literal  add  get  Else  Operand  add  derive  Type  get  Validator  get  Scope  get  Else  Operand  is  Null  Literal  add  least  Restrictive  is  Type  Coercion  Enabled  get  Type  Coercion  get  Validator  get  Wider  Type  For  case  When  Coercion  derive  Type  get  Validator  get  Scope  get  Call  new  Validation  Error  illegal  Mixing  Of  Types  get  Validator  set  Validated  Node  Type Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled Sql  Case  Operator instance Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  infer  Type  From  Operands  get  Operand  Count  Range  get  Syntax  create  Call  unparse,1,1
877,infer  Type  From  Operands Sql  Operator  Binding Rel  Data  Type   Sql  Case  Operator instance Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  get  Operand  Count  Range  get  Syntax  create  Call  unparse Sql  Operator  Binding type  Factory  sql  Operator Sql  Operator  Binding  get  Group  Count  has  Filter  get  Operator  get  Type  Factory  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Operand  Monotonicity  collect  Operand  Types  get  size  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  allow  Alias  Unnest  Items,0,0
878,infer  Type  From  Operands Sql  Operator  Binding Rel  Data  Type   Sql  Operator  Binding type  Factory  sql  Operator Sql  Operator  Binding  get  Group  Count  has  Filter  get  Operator  get  Type  Factory  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Operand  Monotonicity  collect  Operand  Types  get  size  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  allow  Alias  Unnest  Items Sql  Case  Operator instance Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  get  Operand  Count  Range  get  Syntax  create  Call  unparse,1,0
879,arg Sql  Writer  int  int  int  Sql  Overlaps  Operator void  is  Call  To  operand  operand  keyword  sep  unparse  operand  sep  unparse  operand  sep  unparse  operand Sql  Overlaps  Operator  Sql  Overlaps  Operator  unparse  get  Operand  Count  Range  get  Allowed  Signatures  check  Operand  Types Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier,0,0
880,arg Sql  Writer  int  int  int  Sql  Overlaps  Operator void  is  Call  To  operand  operand  keyword  sep  unparse  operand  sep  unparse  operand  sep  unparse  operand Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier Sql  Overlaps  Operator  Sql  Overlaps  Operator  unparse  get  Operand  Count  Range  get  Allowed  Signatures  check  Operand  Types,1,1
881,get  Enum  Value Sql  Node e  get  Value Sql  Json  Array  Function  Sql  Json  Array  Function  get  Operand  Count  Range  check  Operand  Count  create  Call  get  Signature  Template  unparse Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
882,get  Enum  Value Sql  Node e  get  Value Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Sql  Json  Array  Function  Sql  Json  Array  Function  get  Operand  Count  Range  check  Operand  Count  create  Call  get  Signature  Template  unparse,1,0
883,get  Enum  Value Sql  Node e  get  Value Sql  Json  Query  Function  Sql  Json  Query  Function  get  Signature  Template  unparse  create  Call Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
884,get  Enum  Value Sql  Node e  get  Value Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Sql  Json  Query  Function  Sql  Json  Query  Function  get  Signature  Template  unparse  create  Call,1,0
885,get  Enum  Value Sql  Node e  get  Value Sql  Json  Object  Function  Sql  Json  Object  Function  get  Operand  Count  Range  check  Operand  Count  check  Operand  Types  create  Call  get  Signature  Template  unparse Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
886,get  Enum  Value Sql  Node e  get  Value Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Sql  Json  Object  Function  Sql  Json  Object  Function  get  Operand  Count  Range  check  Operand  Count  check  Operand  Types  create  Call  get  Signature  Template  unparse,1,0
887,arg  Types  Valid Sql  Call  Binding boolean  get  Operand  Count  zip  operands  derive  Type  get  Validator  get  Scope  same  Named  Type Sql  Literal  Chain  Operator  Sql  Literal  Chain  Operator  check  Operand  Types  infer  Return  Type  get  Allowed  Signatures  validate  Call  unparse  concatenate  Operands Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,0,0
888,arg  Types  Valid Sql  Call  Binding boolean  get  Operand  Count  zip  operands  derive  Type  get  Validator  get  Scope  same  Named  Type Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator Sql  Literal  Chain  Operator  Sql  Literal  Chain  Operator  check  Operand  Types  infer  Return  Type  get  Allowed  Signatures  validate  Call  unparse  concatenate  Operands,1,0
889,coerce  Operands Sql  Call  Binding  boolean boolean   Composite  Operand  Type  Checker range  Composition  allowed  Rules  composition  allowed  Signatures Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  check  Without  Type  Coercion Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,0,0
890,coerce  Operands Sql  Call  Binding  boolean boolean   Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator Composite  Operand  Type  Checker range  Composition  allowed  Rules  composition  allowed  Signatures Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  check  Without  Type  Coercion,1,0
891,check  Without  Type  Coercion Sql  Call  Binding boolean  is  Type  Coercion  Enabled  check  Operand  Types  Without  Type  Coercion Composite  Operand  Type  Checker range  Composition  allowed  Rules  composition  allowed  Signatures Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  coerce  Operands Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,0,0
892,check  Without  Type  Coercion Sql  Call  Binding boolean  is  Type  Coercion  Enabled  check  Operand  Types  Without  Type  Coercion Sql  Call  Binding default  call  validator  scope  call Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator Composite  Operand  Type  Checker range  Composition  allowed  Rules  composition  allowed  Signatures Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  coerce  Operands,1,0
893,add  If Sql  Node Span  add Span pos  List Span  of  of  of  of  of  add  add  add  All  add  pos  end  clear Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
894,add  If Sql  Node Span  add Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Span pos  List Span  of  of  of  of  of  add  add  add  All  add  pos  end  clear,1,0
895,end Span Sql  Parser  Pos  pos  add Span pos  List Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear Sql  Abstract  Parser  Impl sql  reserved  word  set  Expr  Context  accept  subquery  accept  nonquery  n  Dynamic  Params  original  Sql  warnings  Metadata  Impl  reserved  Function  Names  context  Variable  Names  non  Reserved  Key  Word  Set  token  Set  token  List  reserved  Words  sql  Reserved  Words get  Sql  Reserved  Words  create  Call  create  Call  get  Metadata  normalize  Exception  get  Pos  Re  Init  parse  Sql  Expression  Eof  parse  Sql  Stmt  Eof  parse  Sql  Stmt  List  set  Tab  Size  set  Quoted  Casing  set  Unquoted  Casing  set  Identifier  Max  Length  set  Conformance  set  Original  Sql  get  Original  Sql  switch  To  is  Non  Reserved  Keyword  is  Context  Variable  Name  is  Reserved  Function  Name  is  Keyword  is  Reserved  Word  is  Sql  Reserved  Word  get  Jdbc  Keywords  get  Tokens  Metadata  Impl  init  List  virtual  Call  construct  Sql  Reserved  Word  List  get  Tokens  is  Sql  Reserved  Word  get  Jdbc  Keywords  is  Keyword  is  Non  Reserved  Keyword  is  Reserved  Function  Name  is  Context  Variable  Name  is  Reserved  Word,0,0
896,end Span Sql  Parser  Pos  pos  add Sql  Abstract  Parser  Impl sql  reserved  word  set  Expr  Context  accept  subquery  accept  nonquery  n  Dynamic  Params  original  Sql  warnings  Metadata  Impl  reserved  Function  Names  context  Variable  Names  non  Reserved  Key  Word  Set  token  Set  token  List  reserved  Words  sql  Reserved  Words get  Sql  Reserved  Words  create  Call  create  Call  get  Metadata  normalize  Exception  get  Pos  Re  Init  parse  Sql  Expression  Eof  parse  Sql  Stmt  Eof  parse  Sql  Stmt  List  set  Tab  Size  set  Quoted  Casing  set  Unquoted  Casing  set  Identifier  Max  Length  set  Conformance  set  Original  Sql  get  Original  Sql  switch  To  is  Non  Reserved  Keyword  is  Context  Variable  Name  is  Reserved  Function  Name  is  Keyword  is  Reserved  Word  is  Sql  Reserved  Word  get  Jdbc  Keywords  get  Tokens  Metadata  Impl  init  List  virtual  Call  construct  Sql  Reserved  Word  List  get  Tokens  is  Sql  Reserved  Word  get  Jdbc  Keywords  is  Keyword  is  Non  Reserved  Keyword  is  Reserved  Function  Name  is  Context  Variable  Name  is  Reserved  Word Span pos  List Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear,1,1
897,end Span Sql  Parser  Pos  pos  add Span pos  List Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
898,end Span Sql  Parser  Pos  pos  add Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Span pos  List Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear,1,0
899,set  Format  Options Sql  Pretty  Writer void  set  Always  Use  Parentheses  is  Always  Use  Parentheses  set  Case  Clauses  On  New  Lines  is  Case  Clauses  On  New  Lines  set  Clause  Starts  Line  is  Clause  Starts  Line  set  Keywords  Lower  Case  is  Keywords  Lowercase  set  Quote  All  Identifiers  is  Quote  All  Identifiers  set  Select  List  Items  On  Separate  Lines  is  Select  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Window  Newline  is  Window  Declaration  Starts  Line  set  Window  Decl  List  Newline  is  Window  List  Items  On  Separate  Lines  set  Indentation  get  Indentation  set  Line  Length  get  Line  Length Sql  Pretty  Writer logger  default  bean  nl  dialect  buf  list  Stack  dynamic  Parameters  frame  need  Whitespace  next  Whitespace  config  bean  current  Indent  line  Start  Frame  Impl  frame  Type  keyword  open  close  left  extra  Indent  sep  Indent  item  Count  newline  Before  Sep  newline  After  Sep  newline  Before  Close  newline  After  Close  newline  After  Open  chop  Limit  line  Folding  Save  buf  Length  Bean  o  getter  Methods  setter  Methods Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  config  set  Case  Clauses  On  New  Lines  set  Sub  Query  Style  set  Window  Newline  set  Window  Decl  List  Newline  get  Indentation  is  Always  Use  Parentheses  in  Query  is  Quote  All  Identifiers  is  Clause  Starts  Line  is  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  is  Select  List  Extra  Indent  Flag  is  Keywords  Lower  Case  get  Line  Length  reset  Settings  reset  get  Bean  set  Indentation  describe  set  Settings  set  Clause  Starts  Line  set  Select  List  Items  On  Separate  Lines  set  Select  List  Extra  Indent  Flag  set  Keywords  Lower  Case  set  Where  List  Items  On  Separate  Lines  set  Always  Use  Parentheses  newline  And  Indent  newline  And  Indent  indent  set  Quote  All  Identifiers  create  List  Frame  before  before  sep  fold  f  start  List  end  List  format  to  String  to  Sql  String  get  Dialect  literal  keyword  maybe  Whitespace  need  Whitespace  Before  need  Whitespace  After  white  Space  column  too  Long  print  print  identifier  dynamic  Param  fetch  Offset  top  N  start  Fun  Call  end  Fun  Call  start  List  start  List  start  List  list  list  sep  sep  set  Need  Whitespace  set  Line  Length  Frame  Impl  before  after  sep  extra  Indent  list  list  Save  restore  Bean  strip  Prefix  set  get  get  Property  Names Sql  Format  Options always  Use  Parentheses  case  Clauses  On  New  Lines  clause  Starts  Line  keywords  Lowercase  quote  All  Identifiers  select  List  Items  On  Separate  Lines  where  List  Items  On  Separate  Lines  window  Declaration  Starts  Line  window  List  Items  On  Separate  Lines  indentation  line  Length Sql  Format  Options  Sql  Format  Options  is  Always  Use  Parentheses  set  Always  Use  Parentheses  is  Case  Clauses  On  New  Lines  set  Case  Clauses  On  New  Lines  is  Clause  Starts  Line  set  Clause  Starts  Line  is  Keywords  Lowercase  set  Keywords  Lowercase  is  Quote  All  Identifiers  set  Quote  All  Identifiers  is  Select  List  Items  On  Separate  Lines  set  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Window  Declaration  Starts  Line  set  Window  Declaration  Starts  Line  is  Window  List  Items  On  Separate  Lines  set  Window  List  Items  On  Separate  Lines  get  Line  Length  set  Line  Length  get  Indentation  set  Indentation,0,0
900,set  Format  Options Sql  Pretty  Writer void  set  Always  Use  Parentheses  is  Always  Use  Parentheses  set  Case  Clauses  On  New  Lines  is  Case  Clauses  On  New  Lines  set  Clause  Starts  Line  is  Clause  Starts  Line  set  Keywords  Lower  Case  is  Keywords  Lowercase  set  Quote  All  Identifiers  is  Quote  All  Identifiers  set  Select  List  Items  On  Separate  Lines  is  Select  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Window  Newline  is  Window  Declaration  Starts  Line  set  Window  Decl  List  Newline  is  Window  List  Items  On  Separate  Lines  set  Indentation  get  Indentation  set  Line  Length  get  Line  Length Sql  Format  Options always  Use  Parentheses  case  Clauses  On  New  Lines  clause  Starts  Line  keywords  Lowercase  quote  All  Identifiers  select  List  Items  On  Separate  Lines  where  List  Items  On  Separate  Lines  window  Declaration  Starts  Line  window  List  Items  On  Separate  Lines  indentation  line  Length Sql  Format  Options  Sql  Format  Options  is  Always  Use  Parentheses  set  Always  Use  Parentheses  is  Case  Clauses  On  New  Lines  set  Case  Clauses  On  New  Lines  is  Clause  Starts  Line  set  Clause  Starts  Line  is  Keywords  Lowercase  set  Keywords  Lowercase  is  Quote  All  Identifiers  set  Quote  All  Identifiers  is  Select  List  Items  On  Separate  Lines  set  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Window  Declaration  Starts  Line  set  Window  Declaration  Starts  Line  is  Window  List  Items  On  Separate  Lines  set  Window  List  Items  On  Separate  Lines  get  Line  Length  set  Line  Length  get  Indentation  set  Indentation Sql  Pretty  Writer logger  default  bean  nl  dialect  buf  list  Stack  dynamic  Parameters  frame  need  Whitespace  next  Whitespace  config  bean  current  Indent  line  Start  Frame  Impl  frame  Type  keyword  open  close  left  extra  Indent  sep  Indent  item  Count  newline  Before  Sep  newline  After  Sep  newline  Before  Close  newline  After  Close  newline  After  Open  chop  Limit  line  Folding  Save  buf  Length  Bean  o  getter  Methods  setter  Methods Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  config  set  Case  Clauses  On  New  Lines  set  Sub  Query  Style  set  Window  Newline  set  Window  Decl  List  Newline  get  Indentation  is  Always  Use  Parentheses  in  Query  is  Quote  All  Identifiers  is  Clause  Starts  Line  is  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  is  Select  List  Extra  Indent  Flag  is  Keywords  Lower  Case  get  Line  Length  reset  Settings  reset  get  Bean  set  Indentation  describe  set  Settings  set  Clause  Starts  Line  set  Select  List  Items  On  Separate  Lines  set  Select  List  Extra  Indent  Flag  set  Keywords  Lower  Case  set  Where  List  Items  On  Separate  Lines  set  Always  Use  Parentheses  newline  And  Indent  newline  And  Indent  indent  set  Quote  All  Identifiers  create  List  Frame  before  before  sep  fold  f  start  List  end  List  format  to  String  to  Sql  String  get  Dialect  literal  keyword  maybe  Whitespace  need  Whitespace  Before  need  Whitespace  After  white  Space  column  too  Long  print  print  identifier  dynamic  Param  fetch  Offset  top  N  start  Fun  Call  end  Fun  Call  start  List  start  List  start  List  list  list  sep  sep  set  Need  Whitespace  set  Line  Length  Frame  Impl  before  after  sep  extra  Indent  list  list  Save  restore  Bean  strip  Prefix  set  get  get  Property  Names,1,1
901,unparse  Sql  Interval  Literal  Mssql Sql  Writer  int  Mssql  Sql  Dialect void  get  Value  unparse  Sql  Interval  Qualifier  get  Interval  Qualifier  sep  get  Sign  print  literal  to  String  get  Value Mssql  Sql  Dialect default  context  default  mssql  substring  top Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  unparse  Floor  With  Unit Sql  Interval  Literal Interval  Value  interval  Qualifier  interval  Str  sign Sql  Interval  Literal  Sql  Interval  Literal  clone  unparse  signum  Interval  Value  equals  hash  Code  get  Interval  Qualifier  get  Interval  Literal  get  Sign  signum  to  String,0,0
902,unparse  Sql  Interval  Literal  Mssql Sql  Writer  int  Mssql  Sql  Dialect void  get  Value  unparse  Sql  Interval  Qualifier  get  Interval  Qualifier  sep  get  Sign  print  literal  to  String  get  Value Sql  Interval  Literal Interval  Value  interval  Qualifier  interval  Str  sign Sql  Interval  Literal  Sql  Interval  Literal  clone  unparse  signum  Interval  Value  equals  hash  Code  get  Interval  Qualifier  get  Interval  Literal  get  Sign  signum  to  String Mssql  Sql  Dialect default  context  default  mssql  substring  top Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  unparse  Floor  With  Unit,1,1
903,unparse  Floor  With  Unit Sql  Writer  Sql  Call  int  String void  print  start  List  print  unparse  operand  print  length  print  end  List Mssql  Sql  Dialect default  context  default  mssql  substring  top Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
904,unparse  Floor  With  Unit Sql  Writer  Sql  Call  int  String void  print  start  List  print  unparse  operand  print  length  print  end  List Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg Mssql  Sql  Dialect default  context  default  mssql  substring  top Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal,1,0
905,unparse  Floor Sql  Writer  Sql  Call void  operand  get  Value  print  start  List  print  unparse  operand  print  end  List  print  start  List  unparse  operand  sep  print  end  List Mysql  Sql  Dialect mysql  type  system  default  context  default  isnull  function  major  Version get  Max  Precision  Mysql  Sql  Dialect  supports  Char  Set  requires  Alias  For  From  Items  supports  Aliased  Values  unparse  Offset  Fetch  emulate  Null  Direction  supports  Aggregate  Function  supports  Nested  Aggregations  supports  Group  By  With  Rollup  get  Calendar  Policy  get  Cast  Spec  rewrite  Single  Value  Expr  unparse  Call  unparse  Sql  Interval  Qualifier  validate Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
906,unparse  Floor Sql  Writer  Sql  Call void  operand  get  Value  print  start  List  print  unparse  operand  print  end  List  print  start  List  unparse  operand  sep  print  end  List Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg Mysql  Sql  Dialect mysql  type  system  default  context  default  isnull  function  major  Version get  Max  Precision  Mysql  Sql  Dialect  supports  Char  Set  requires  Alias  For  From  Items  supports  Aliased  Values  unparse  Offset  Fetch  emulate  Null  Direction  supports  Aggregate  Function  supports  Nested  Aggregations  supports  Group  By  With  Rollup  get  Calendar  Policy  get  Cast  Spec  rewrite  Single  Value  Expr  unparse  Call  unparse  Sql  Interval  Qualifier  validate,1,0
907,unparse  Trim Sql  Writer  Sql  Call  int  int void  operand  operand  get  Value  As  get  Name  get  Operator  start  Fun  Call  unparse  operand  matches  to  Value  literal  unparse  operand  end  Fun  Call Big  Query  Sql  Dialect default  context  default  reserved  keywords  identifier  regex  union  distinct  except  distinct  intersect  distinct Big  Query  Sql  Dialect  identifier  Needs  Quote  emulate  Null  Direction  supports  Implicit  Type  Coercion  supports  Nested  Aggregations  unparse  Offset  Fetch  unparse  Call  unparse  Sql  Interval  Literal  unparse  Sql  Interval  Qualifier  validate  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
908,unparse  Trim Sql  Writer  Sql  Call  int  int void  operand  operand  get  Value  As  get  Name  get  Operator  start  Fun  Call  unparse  operand  matches  to  Value  literal  unparse  operand  end  Fun  Call Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg Big  Query  Sql  Dialect default  context  default  reserved  keywords  identifier  regex  union  distinct  except  distinct  intersect  distinct Big  Query  Sql  Dialect  identifier  Needs  Quote  emulate  Null  Direction  supports  Implicit  Type  Coercion  supports  Nested  Aggregations  unparse  Offset  Fetch  unparse  Call  unparse  Sql  Interval  Literal  unparse  Sql  Interval  Qualifier  validate  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name,1,0
909,unparse  Floor Sql  Writer  Sql  Call void  operand  get  Value  print  start  List  unparse  operand  end  List Click  House  Sql  Dialect default  context  default  clickhouse  substring unparse  Click  House  Sql  Dialect  supports  Char  Set  supports  Nested  Aggregations  supports  Window  Functions  get  Calendar  Policy  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name  unparse  unparse  Date  Time  Literal  unparse  Offset  Fetch  unparse  Call Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
910,unparse  Floor Sql  Writer  Sql  Call void  operand  get  Value  print  start  List  unparse  operand  end  List Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg Click  House  Sql  Dialect default  context  default  clickhouse  substring unparse  Click  House  Sql  Dialect  supports  Char  Set  supports  Nested  Aggregations  supports  Window  Functions  get  Calendar  Policy  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name  unparse  unparse  Date  Time  Literal  unparse  Offset  Fetch  unparse  Call,1,0
911,cast  To Sql  Node  Rel  Data  Type Sql  Node  create  Call  with  Nullable  convert  Type  To  Spec  is  Nullable Abstract  Type  Coercion validator  factory Abstract  Type  Coercion  coerce  Operand  Type  coerce  Operands  Type  coerce  Column  Type  sync  Attributes  need  To  Cast  update  Inferred  Type  update  Inferred  Column  Type  get  Tightest  Common  Type  promote  To  Var  Char  common  Type  For  Binary  Comparison  get  Wider  Type  For  Two  get  Wider  Type  For  Decimal  get  Wider  Type  For  partition  By  Character  can  Implicit  Type  Cast  implicit  Cast Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
912,cast  To Sql  Node  Rel  Data  Type Sql  Node  create  Call  with  Nullable  convert  Type  To  Spec  is  Nullable Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Abstract  Type  Coercion validator  factory Abstract  Type  Coercion  coerce  Operand  Type  coerce  Operands  Type  coerce  Column  Type  sync  Attributes  need  To  Cast  update  Inferred  Type  update  Inferred  Column  Type  get  Tightest  Common  Type  promote  To  Var  Char  common  Type  For  Binary  Comparison  get  Wider  Type  For  Two  get  Wider  Type  For  Decimal  get  Wider  Type  For  partition  By  Character  can  Implicit  Type  Cast  implicit  Cast,1,0
913,using  Names Sql  Validator  Impl List  String  get  Condition  Type  builder  create  Set  name  Matcher  get  Catalog  Reader  get  Condition  get  Simple  add  add  build  is  Natural  get  Validated  Node  Type  get  Left  get  Validated  Node  Type  get  Right  derive  Natural  Join  Column  List  name  Matcher  get  Catalog  Reader  create Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Join operator  left  natural  join  Type  right  condition  Type  condition  Sql  Join  Operator  frame  type Sql  Join  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Condition  get  Condition  Type  get  Condition  Type  Node  get  Join  Type  get  Join  Type  Node  get  Left  set  Left  is  Natural  is  Natural  Node  get  Right  set  Right  Sql  Join  Operator  get  Syntax  create  Call  unparse,0,0
914,using  Names Sql  Validator  Impl List  String  get  Condition  Type  builder  create  Set  name  Matcher  get  Catalog  Reader  get  Condition  get  Simple  add  add  build  is  Natural  get  Validated  Node  Type  get  Left  get  Validated  Node  Type  get  Right  derive  Natural  Join  Column  List  name  Matcher  get  Catalog  Reader  create Sql  Join operator  left  natural  join  Type  right  condition  Type  condition  Sql  Join  Operator  frame  type Sql  Join  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Condition  get  Condition  Type  get  Condition  Type  Node  get  Join  Type  get  Join  Type  Node  get  Left  set  Left  is  Natural  is  Natural  Node  get  Right  set  Right  Sql  Join  Operator  get  Syntax  create  Call  unparse Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,1
915,maybe  Cast Sql  Node  Rel  Data  Type  Rel  Data  Type Sql  Node  equal  Sans  Nullability  create  Call  convert  Type  To  Spec Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
916,maybe  Cast Sql  Node  Rel  Data  Type  Rel  Data  Type Sql  Node  equal  Sans  Nullability  create  Call  convert  Type  To  Spec Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
917,get  Namespace Sql  Node  Sql  Validator  Scope Sql  Validator  Namespace  get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Delegating  Scope parent  validator Delegating  Scope  add  Child  resolve  resolve  In  Namespace  add  Column  Names  find  All  Column  Names  find  Aliases  find  Qualifying  Table  Name  find  Qualifying  Table  Names  resolve  Column  nullify  Type  get  Table  Namespace  resolve  Table  get  Operand  Scope  get  Validator  fully  Qualify  validate  Expr  lookup  Window  get  Monotonicity  get  Order  List  has  Ambiguous  Field  get  Parent,0,0
918,get  Namespace Sql  Node  Sql  Validator  Scope Sql  Validator  Namespace  get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace Delegating  Scope parent  validator Delegating  Scope  add  Child  resolve  resolve  In  Namespace  add  Column  Names  find  All  Column  Names  find  Aliases  find  Qualifying  Table  Name  find  Qualifying  Table  Names  resolve  Column  nullify  Type  get  Table  Namespace  resolve  Table  get  Operand  Scope  get  Validator  fully  Qualify  validate  Expr  lookup  Window  get  Monotonicity  get  Order  List  has  Ambiguous  Field  get  Parent Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
919,get  Namespace Sql  Node  Sql  Validator  Scope Sql  Validator  Namespace  get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Identifier star  names  collation  component  Positions Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,0,0
920,get  Namespace Sql  Node  Sql  Validator  Scope Sql  Validator  Namespace  get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace Sql  Identifier star  names  collation  component  Positions Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
921,handle  Offset  Fetch Sql  Node  Sql  Node void  set  Validated  Node  Type  create  Sql  Type  set  Validated  Node  Type  create  Sql  Type Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
922,handle  Offset  Fetch Sql  Node  Sql  Node void  set  Validated  Node  Type  create  Sql  Type  set  Validated  Node  Type  create  Sql  Type Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
923,rewrite  Merge Sql  Merge void  get  Update  Call  clone  get  Select  List  get  Source  Select  add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Source  Table  Ref  get  Insert  Call  clone  create  Boolean  symbol  symbol  get  Condition  set  Source  Select  get  Source  operand  get  Operand  List  clone  set  Source Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Merge operator  target  Table  condition  source  update  Call  insert  Call  source  Select  alias Sql  Merge  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Source  Table  Ref  set  Source  Table  Ref  get  Update  Call  get  Insert  Call  get  Condition  get  Source  Select  set  Source  Select  unparse  validate,0,0
924,rewrite  Merge Sql  Merge void  get  Update  Call  clone  get  Select  List  get  Source  Select  add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Source  Table  Ref  get  Insert  Call  clone  create  Boolean  symbol  symbol  get  Condition  set  Source  Select  get  Source  operand  get  Operand  List  clone  set  Source Sql  Merge operator  target  Table  condition  source  update  Call  insert  Call  source  Select  alias Sql  Merge  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Source  Table  Ref  set  Source  Table  Ref  get  Update  Call  get  Insert  Call  get  Condition  get  Source  Select  set  Source  Select  unparse  validate Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
925,create  Source  Select  For  Update Sql  Update Sql  Select  add  star  get  Source  Expression  List  derive  Alias  From  Ordinal  add  add  Alias  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Update operator  target  Table  target  Column  List  source  Expression  List  condition  source  Select  alias Sql  Update  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  set  Alias  get  Target  Column  List  get  Source  Expression  List  get  Condition  get  Source  Select  set  Source  Select  unparse  validate,0,0
926,create  Source  Select  For  Update Sql  Update Sql  Select  add  star  get  Source  Expression  List  derive  Alias  From  Ordinal  add  add  Alias  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition Sql  Update operator  target  Table  target  Column  List  source  Expression  List  condition  source  Select  alias Sql  Update  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  set  Alias  get  Target  Column  List  get  Source  Expression  List  get  Condition  get  Source  Select  set  Source  Select  unparse  validate Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
927,create  Source  Select  For  Delete Sql  Delete Sql  Select  add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Delete operator  target  Table  condition  source  Select  alias Sql  Delete  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Condition  get  Source  Select  unparse  validate  set  Source  Select,0,0
928,create  Source  Select  For  Delete Sql  Delete Sql  Select  add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition Sql  Delete operator  target  Table  condition  source  Select  alias Sql  Delete  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Condition  get  Source  Select  unparse  validate  set  Source  Select Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
929,get  Table  Constructor  Row  Type Sql  Call  Sql  Validator  Scope Rel  Data  Type   Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
930,get  Table  Constructor  Row  Type Sql  Call  Sql  Validator  Scope Rel  Data  Type   Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
931,add  To  Select  List List  Sql  Node  Set  String  List  Map  Entry  String  Rel  Data  Type  Sql  Node  Select  Scope  boolean void  get  Alias  uniquify  equals  add  Alias  add  of  derive  Type  add Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Select  Scope select  window  Names  expanded  Select  List  order  List  window  Parent Select  Scope  get  Table  get  Node  lookup  Window  get  Monotonicity  get  Order  List  add  Window  Name  existing  Window  Name  get  Expanded  Select  List  set  Expanded  Select  List,0,0
932,add  To  Select  List List  Sql  Node  Set  String  List  Map  Entry  String  Rel  Data  Type  Sql  Node  Select  Scope  boolean void  get  Alias  uniquify  equals  add  Alias  add  of  derive  Type  add Select  Scope select  window  Names  expanded  Select  List  order  List  window  Parent Select  Scope  get  Table  get  Node  lookup  Window  get  Monotonicity  get  Order  List  add  Window  Name  existing  Window  Name  get  Expanded  Select  List  set  Expanded  Select  List Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
933,validate  Literal  As  Double Sql  Literal void  get  Value  double  Value  is  Infinite  is  Na  N  new  Validation  Error  number  Literal  Out  Of  Range  to  Scientific  Notation Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Literal type  Name  value Sql  Literal  get  Type  Name  value  Matches  Type  clone  get  Kind  get  Value  get  Value  As  symbolvalue  symbol  Value  boolean  Value  sample  Value  value  string  Value  unchain  to  Value  validate  accept  equals  Deep  get  Monotonicity  create  Null  create  Boolean  create  Unknown  create  Symbol  create  Sample  equals  hash  Code  int  Value  long  Value  signum  big  Decimal  Value  get  String  Value  unparse  create  Sql  Type  create  Date  create  Date  create  Timestamp  create  Timestamp  create  Time  create  Time  create  Interval  create  Negative  create  Exact  Numeric  create  Approx  Numeric  create  Binary  String  create  Binary  String  create  Char  String  create  Char  String  unescape  Unicode  name  ordinal,0,0
934,validate  Literal  As  Double Sql  Literal void  get  Value  double  Value  is  Infinite  is  Na  N  new  Validation  Error  number  Literal  Out  Of  Range  to  Scientific  Notation Sql  Literal type  Name  value Sql  Literal  get  Type  Name  value  Matches  Type  clone  get  Kind  get  Value  get  Value  As  symbolvalue  symbol  Value  boolean  Value  sample  Value  value  string  Value  unchain  to  Value  validate  accept  equals  Deep  get  Monotonicity  create  Null  create  Boolean  create  Unknown  create  Symbol  create  Sample  equals  hash  Code  int  Value  long  Value  signum  big  Decimal  Value  get  String  Value  unparse  create  Sql  Type  create  Date  create  Date  create  Timestamp  create  Timestamp  create  Time  create  Time  create  Interval  create  Negative  create  Exact  Numeric  create  Approx  Numeric  create  Binary  String  create  Binary  String  create  Char  String  create  Char  String  unescape  Unicode  name  ordinal Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
935,validate  Unnest Sql  Call  Sql  Validator  Scope  Rel  Data  Type void  operand  Count  expand  operand  set  Operand  validate  Query Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
936,validate  Unnest Sql  Call  Sql  Validator  Scope  Rel  Data  Type void  operand  Count  expand  operand  set  Operand  validate  Query Sql  Call  Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
937,validate  No  Aggs Agg  Finder  Sql  Node  String void  find  Agg  get  Operator  new  Validation  Error  windowed  Aggregate  Illegal  In  Clause  is  Group  is  Group  Auxiliary  new  Validation  Error  group  Function  Must  Appear  In  Group  By  Clause  get  Name  new  Validation  Error  aggregate  Illegal  In  Clause Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
938,validate  No  Aggs Agg  Finder  Sql  Node  String void  find  Agg  get  Operator  new  Validation  Error  windowed  Aggregate  Illegal  In  Clause  is  Group  is  Group  Auxiliary  new  Validation  Error  group  Function  Must  Appear  In  Group  By  Clause  get  Name  new  Validation  Error  aggregate  Illegal  In  Clause Sql  Node empty  array  pos Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as Sql  Validator  Impl tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
