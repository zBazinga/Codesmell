id,method-name,parametes-method,return-method,field-access,methods-method,contain-class-name,attributes-class,methods-class,target-class-name,attributes-class,methods-class,tag,move-tag
0,contains  Only  Conjunctions,Pig  Filter,boolean,,size  disjunctions,Pig  Filter,,Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition  get  Literal  As  String,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
1,contains  Only  Conjunctions,Pig  Filter,boolean,,size  disjunctions,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Pig  Filter,,Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition  get  Literal  As  String,1,1
2,get  Literal  As  String,Rex  Literal,String,,string  Value,Pig  Filter,,Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition,Rex  Literal,value  type  type  Name  time  units,Rex  Literal  compute  Digest  digest  Includes  Type  value  Matches  Type  to  Java  String  should  Include  Type  valid  Constant  get  Time  Units  interval  String  pad  width  print  As  Java  append  As  Java  from  Jdbc  String  get  Calendar  Format  get  Type  Name  get  Type  get  Kind  is  Null  get  Value  get  Value  get  Value  get  Value  get  Value  As  boolean  Value  is  Always  True  is  Always  False  equals  hash  Code  value  int  Value  string  Value  find  Value  is  Null  Literal  equals  accept  accept  to  String  Other,0,0
3,get  Literal  As  String,Rex  Literal,String,,string  Value,Rex  Literal,value  type  type  Name  time  units,Rex  Literal  compute  Digest  digest  Includes  Type  value  Matches  Type  to  Java  String  should  Include  Type  valid  Constant  get  Time  Units  interval  String  pad  width  print  As  Java  append  As  Java  from  Jdbc  String  get  Calendar  Format  get  Type  Name  get  Type  get  Kind  is  Null  get  Value  get  Value  get  Value  get  Value  get  Value  As  boolean  Value  is  Always  True  is  Always  False  equals  hash  Code  value  int  Value  string  Value  find  Value  is  Null  Literal  equals  accept  accept  to  String  Other,Pig  Filter,,Pig  Filter  copy  implement  get  Table  get  Pig  Filter  Statement  get  Single  Filter  Condition  get  Single  Filter  Condition,1,0
4,copy,Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc,Calc,,discard  copy,Calc,hints  program,Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,Rex  Program,exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter,Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  normalize  get  Partial  Mapping  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref,0,0
5,copy,Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc,Calc,,discard  copy,Rex  Program,exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter,Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  normalize  get  Partial  Mapping  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref,Calc,hints  program,Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,1,1
6,copy,Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc,Calc,,discard  copy,Calc,hints  program,Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,0,0
7,copy,Rel  Trait  Set  Rel  Node  List  Rel  Collation  Calc,Calc,,discard  copy,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,Calc,hints  program,Calc  Calc  Calc  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,1,0
8,copy,Rel  Node  List  Rex  Node  Rel  Data  Type  int  Project,Project,,discard  copy,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,0,0
9,copy,Rel  Node  List  Rex  Node  Rel  Data  Type  int  Project,Project,,discard  copy,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,1,1
10,copy,Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate,Aggregate,,check  Indicator  copy,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
11,copy,Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate,Aggregate,,check  Indicator  copy,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,1,1
12,copy,Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate,Aggregate,,check  Indicator  copy,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,0,0
13,copy,Rel  Trait  Set  Rel  Node  boolean  List  Immutable  Bit  Set  List  Aggregate  Call  Aggregate,Aggregate,,check  Indicator  copy,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  Cache  get  Or  Add,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,1,0
14,type  Matches  Inferred,,assert,,,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
15,type  Matches  Inferred,,assert,,,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,1,0
16,project,Immutable  Bit  Set  Set  Rel  Data  Type  Field  Rel  Builder,Rel  Node,,get  Field  Count  get  Row  Type  equals  range  is  Empty  size  size  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  add  make  Input  Ref  add  get  Name  add  make  Null  Literal  get  Type  add  get  Name  build  project  push,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  accept  get  Hints  apply,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
17,project,Immutable  Bit  Set  Set  Rel  Data  Type  Field  Rel  Builder,Rel  Node,,get  Field  Count  get  Row  Type  equals  range  is  Empty  size  size  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  add  make  Input  Ref  add  get  Name  add  make  Null  Literal  get  Type  add  get  Name  build  project  push,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  accept  get  Hints  apply,1,0
18,is  Valid  Rel  Node  Plan,Rel  Node  Materialized  View  Rule,boolean,,get  Node  Types  entry  Set  as  Map  get  Key  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  get  Value  get  Join  Type  is  Semi  Join,Materialized  View  Rule,generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality,Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution,0,0
19,is  Valid  Rel  Node  Plan,Rel  Node  Materialized  View  Rule,boolean,,get  Node  Types  entry  Set  as  Map  get  Key  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  is  Assignable  From  get  Value  get  Join  Type  is  Semi  Join,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution,Materialized  View  Rule,generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality,Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,1,1
20,split  Predicates,Rex  Builder  Rex  Node,Pair  Rex  Node,,conjunctions  get  Kind  is  Reference  Or  Access  get  get  Operands  is  Reference  Or  Access  get  get  Operands  add  add  add  of  compose  Conjunction  compose  Conjunction,Materialized  View  Rule,generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality,Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
21,split  Predicates,Rex  Builder  Rex  Node,Pair  Rex  Node,,conjunctions  get  Kind  is  Reference  Or  Access  get  get  Operands  is  Reference  Or  Access  get  get  Operands  add  add  add  of  compose  Conjunction  compose  Conjunction,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Materialized  View  Rule,generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality,Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  shuttle  References  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,1,0
22,shuttle  References,Rex  Builder  Rex  Node  Mapping,Rex  Node,,,Materialized  View  Rule,generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality,Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
23,shuttle  References,Rex  Builder  Rex  Node  Mapping,Rex  Node,,,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Materialized  View  Rule,generate  Union  Rewriting  union  Rewriting  Pull  Program  fast  Bail  Out  Equivalence  Classes  node  To  Equivalence  Class  cache  Equivalence  Classes  Map  cache  Equivalence  Classes  Node  Lineage  exprs  Lineage  exprs  Lineage  Lossless  Casts  Edge  equi  Columns  View  Partial  Rewriting  new  View  new  Top  View  Project  new  View  Node  Match  Modality,Materialized  View  Rule  matches  perform  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  push  Filter  To  Original  View  Plan  extract  References  generate  Table  Mappings  split  Predicates  compensate  Partial  compute  Compensation  Predicates  generate  Equivalence  Classes  extract  Possible  Mapping  rewrite  Expression  rewrite  Expressions  generate  Swap  Table  Column  References  Lineage  generate  Swap  Column  Table  References  Lineage  replace  With  Original  References  visit  Call  visit  Table  Input  Ref  replace  visit  Input  Ref  shuttle  References  shuttle  References  visit  Table  Input  Ref  visit  Input  Ref  visit  Call  Equivalence  Classes  add  Equivalence  Class  get  Equivalence  Classes  Map  get  Equivalence  Classes  copy  Node  Lineage  Edge  to  String  View  Partial  Rewriting  of,1,0
24,get  Rollup,Materialized  View  Aggregate  Rule,Sql  Agg  Function,,,Materialized  View  Aggregate  Rule,supported  date  time  rollup  units  filter  Project  Transpose  Rule  filter  Aggregate  Transpose  Rule  aggregate  Project  Pull  Up  Constants  Rule  project  Merge  Rule,Materialized  View  Aggregate  Rule  Materialized  View  Aggregate  Rule  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  generate  Mapping  get  Ceil  Sql  Function  get  Floor  Sql  Function  push  Filter  To  Original  View  Plan,Sql  Agg  Function,requires  Order  requires  Over  requires  Group  Order,Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment,0,0
25,get  Rollup,Materialized  View  Aggregate  Rule,Sql  Agg  Function,,,Sql  Agg  Function,requires  Order  requires  Over  requires  Group  Order,Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment,Materialized  View  Aggregate  Rule,supported  date  time  rollup  units  filter  Project  Transpose  Rule  filter  Aggregate  Transpose  Rule  aggregate  Project  Pull  Up  Constants  Rule  project  Merge  Rule,Materialized  View  Aggregate  Rule  Materialized  View  Aggregate  Rule  is  Valid  Plan  compensate  View  Partial  rewrite  Query  create  Union  rewrite  View  generate  Mapping  get  Ceil  Sql  Function  get  Floor  Sql  Function  push  Filter  To  Original  View  Plan,1,1
26,field  Bitmap,Rex  Node,Immutable  Bit  Set,,accept  build,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
27,field  Bitmap,Rex  Node,Immutable  Bit  Set,,accept  build,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,1,0
28,factor  Bitmap,Immutable  Bit  Set,Immutable  Bit  Set,,builder  find  Ref  set  build,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
29,factor  Bitmap,Immutable  Bit  Set,Immutable  Bit  Set,,builder  find  Ref  set  build,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,1,0
30,get  Child  Factors,Immutable  Bit  Set  Builder  Lopt  Multi  Join,void,,get  Tree  Order  set,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Lopt  Join  Tree,factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right,Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,0,0
31,get  Child  Factors,Immutable  Bit  Set  Builder  Lopt  Multi  Join,void,,get  Tree  Order  set,Lopt  Join  Tree,factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right,Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,1,1
32,get  Conjunctions,Filter  Join  Rule,List  Rex  Node,,conjunctions  get  Condition  get  Rex  Builder  get  Cluster  size  get  set  collapse  Expanded  Is  Not  Distinct  From  Expr,Filter  Join  Rule,true  predicate  filter  on  join  dumb  filter  on  join  join  smart  predicate  Join  Condition  Push  Rule  Filter  Into  Join  Rule,Filter  Join  Rule  Filter  Join  Rule  Filter  Join  Rule  perform  validate  Join  Filters  Join  Condition  Push  Rule  Join  Condition  Push  Rule  on  Match  Filter  Into  Join  Rule  Filter  Into  Join  Rule  on  Match  apply,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms,0,0
33,get  Conjunctions,Filter  Join  Rule,List  Rex  Node,,conjunctions  get  Condition  get  Rex  Builder  get  Cluster  size  get  set  collapse  Expanded  Is  Not  Distinct  From  Expr,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms,Filter  Join  Rule,true  predicate  filter  on  join  dumb  filter  on  join  join  smart  predicate  Join  Condition  Push  Rule  Filter  Into  Join  Rule,Filter  Join  Rule  Filter  Join  Rule  Filter  Join  Rule  perform  validate  Join  Filters  Join  Condition  Push  Rule  Join  Condition  Push  Rule  on  Match  Filter  Into  Join  Rule  Filter  Into  Join  Rule  on  Match  apply,1,1
34,is  Aggregate  Supported,Aggregate  Merge  Rule,boolean,,is  Distinct  has  Filter  is  Approximate  size  get  Arg  List  unwrap  get  Aggregation,Aggregate  Merge  Rule,instance,Aggregate  Merge  Rule  Aggregate  Merge  Rule  on  Match,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform,0,0
35,is  Aggregate  Supported,Aggregate  Merge  Rule,boolean,,is  Distinct  has  Filter  is  Approximate  size  get  Arg  List  unwrap  get  Aggregation,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform,Aggregate  Merge  Rule,instance,Aggregate  Merge  Rule  Aggregate  Merge  Rule  on  Match,1,1
36,rewrite  Some,Set  Correlation  Id  Rel  Builder  Sub  Query  Remove  Rule,Rex  Node,,,Sub  Query  Remove  Rule,project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement,Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,Rex  Sub  Query,rel,Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone,0,0
37,rewrite  Some,Set  Correlation  Id  Rel  Builder  Sub  Query  Remove  Rule,Rex  Node,,,Rex  Sub  Query,rel,Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone,Sub  Query  Remove  Rule,project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement,Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,1,1
38,rewrite  Exists,Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder,Rex  Node,,push  project  alias  literal  aggregate  group  Key  as  join  literal  literal  distinct  as  join  literal  is  Not  Null  last  fields,Sub  Query  Remove  Rule,project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement,Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,Rex  Sub  Query,rel,Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some,0,0
39,rewrite  Exists,Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder,Rex  Node,,push  project  alias  literal  aggregate  group  Key  as  join  literal  literal  distinct  as  join  literal  is  Not  Null  last  fields,Rex  Sub  Query,rel,Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some,Sub  Query  Remove  Rule,project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement,Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  In  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,1,0
40,rewrite  In,Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder  int,Rex  Node,,push  fields  all  Literals  get  Operands  get  Operands  collect  map  filter  stream  get  Operands  is  Nullable  get  Type  to  List  literal  literal  make  Null  Literal  get  Rex  Builder  get  Type  collect  map  stream  zip  equals  to  List  filter  project  alias  distinct  collect  map  stream  to  List  add  All  filter  or  and  or  and  collect  map  stream  to  List  project  alias  is  Empty  aggregate  group  Key  field  count  sort  Limit  of  call  field  distinct  clear  clear  aggregate  group  Key  aggregate  group  Key  count  as  count  fields  as  is  Empty  join  join  push  add  alias  project  distinct  as  collect  map  stream  zip  fields  equals  shift  to  List  join  and  join  and  builder  is  Empty  add  is  Null  field  add  equals  field  add  equals  field  literal  is  Empty  add  or  add  is  Not  Null  field  add  is  Not  Null  last  fields  add  call  field  field  add  call  build,Sub  Query  Remove  Rule,project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement,Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,Rex  Sub  Query,rel,Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some,0,0
41,rewrite  In,Rex  Sub  Query  Set  Correlation  Id  Rel  Opt  Util  Logic  Rel  Builder  int,Rex  Node,,push  fields  all  Literals  get  Operands  get  Operands  collect  map  filter  stream  get  Operands  is  Nullable  get  Type  to  List  literal  literal  make  Null  Literal  get  Rex  Builder  get  Type  collect  map  stream  zip  equals  to  List  filter  project  alias  distinct  collect  map  stream  to  List  add  All  filter  or  and  or  and  collect  map  stream  to  List  project  alias  is  Empty  aggregate  group  Key  field  count  sort  Limit  of  call  field  distinct  clear  clear  aggregate  group  Key  aggregate  group  Key  count  as  count  fields  as  is  Empty  join  join  push  add  alias  project  distinct  as  collect  map  stream  zip  fields  equals  shift  to  List  join  and  join  and  builder  is  Empty  add  is  Null  field  add  equals  field  add  equals  field  literal  is  Empty  add  or  add  is  Not  Null  field  add  is  Not  Null  last  fields  add  call  field  field  add  call  build,Rex  Sub  Query,rel,Rex  Sub  Query  in  some  type  exists  scalar  accept  accept  compute  Digest  clone  clone  rewrite  Some,Sub  Query  Remove  Rule,project  filter  join  Sub  Query  Project  Remove  Rule  Sub  Query  Filter  Remove  Rule  Sub  Query  Join  Remove  Rule  Replace  Sub  Query  Shuttle  sub  Query  replacement,Sub  Query  Remove  Rule  apply  rewrite  Scalar  Query  rewrite  Exists  field  fields  Sub  Query  Project  Remove  Rule  on  Match  Sub  Query  Filter  Remove  Rule  on  Match  Sub  Query  Join  Remove  Rule  on  Match  Replace  Sub  Query  Shuttle  visit  Sub  Query,1,0
42,apply,Filter  Table  Scan  Filter  Table  Scan  Rule,void,,builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build,Filter  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
43,apply,Filter  Table  Scan  Filter  Table  Scan  Rule,void,,builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,Filter  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,1,0
44,apply,Filter  Table  Scan  Filter  Table  Scan  Rule,void,,builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build,Filter  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,Rel  Opt  Rule  Call,logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents,Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder,0,0
45,apply,Filter  Table  Scan  Filter  Table  Scan  Rule,void,,builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build,Rel  Opt  Rule  Call,logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents,Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder,Filter  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,1,1
46,apply,Filter  Table  Scan  Filter  Table  Scan  Rule,void,,builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build,Filter  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints,0,0
47,apply,Filter  Table  Scan  Filter  Table  Scan  Rule,void,,builder  add  All  identity  target  get  Field  Count  get  Row  Type  get  Table  add  apply  inverse  get  Condition  transform  To  create  get  Cluster  get  Table  build,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints,Filter  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Filter  Table  Scan  Rule  Filter  Table  Scan  Rule  test,1,0
48,copy  Outer  Join  Info,List  Pair  Join  Rel  Type  Rex  Node  int  List  Rel  Data  Type  Field  List  Rel  Data  Type  Field  Join  To  Multi  Join  Rule,void,,,Join  To  Multi  Join  Rule,instance  Input  Reference  Counter  ref  Counts,Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  shift  Right  Filter  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,Multi  Join,inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter,Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer,0,0
49,copy  Outer  Join  Info,List  Pair  Join  Rel  Type  Rex  Node  int  List  Rel  Data  Type  Field  List  Rel  Data  Type  Field  Join  To  Multi  Join  Rule,void,,,Multi  Join,inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter,Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer,Join  To  Multi  Join  Rule,instance  Input  Reference  Counter  ref  Counts,Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  shift  Right  Filter  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,1,1
50,shift  Right  Filter,Join  Rel  Node  Multi  Join  Rex  Node,Rex  Node,,size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type,Join  To  Multi  Join  Rule,instance  Input  Reference  Counter  ref  Counts,Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
51,shift  Right  Filter,Join  Rel  Node  Multi  Join  Rex  Node,Rex  Node,,size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Join  To  Multi  Join  Rule,instance  Input  Reference  Counter  ref  Counts,Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,1,0
52,shift  Right  Filter,Join  Rel  Node  Multi  Join  Rex  Node,Rex  Node,,size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type,Join  To  Multi  Join  Rule,instance  Input  Reference  Counter  ref  Counts,Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,Multi  Join,inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter,Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer  copy  Outer  Join  Info,0,0
53,shift  Right  Filter,Join  Rel  Node  Multi  Join  Rex  Node,Rex  Node,,size  get  Field  List  get  Row  Type  size  get  Field  List  get  Row  Type  accept  get  Rex  Builder  get  Cluster  get  Field  List  get  Row  Type  get  Field  List  get  Row  Type,Multi  Join,inputs  join  Filter  row  Type  is  Full  Outer  Join  outer  Join  Conditions  join  Types  proj  Fields  join  Field  Ref  Counts  Map  post  Join  Filter,Multi  Join  replace  Input  copy  clone  Join  Field  Ref  Counts  Map  explain  Terms  derive  Row  Type  get  Inputs  get  Child  Exps  accept  get  Join  Filter  is  Full  Outer  Join  get  Outer  Join  Conditions  get  Join  Types  get  Proj  Fields  get  Join  Field  Ref  Counts  Map  get  Copy  Join  Field  Ref  Counts  Map  get  Post  Join  Filter  contains  Outer  copy  Outer  Join  Info,Join  To  Multi  Join  Rule,instance  Input  Reference  Counter  ref  Counts,Join  To  Multi  Join  Rule  Join  To  Multi  Join  Rule  matches  on  Match  combine  Inputs  combine  Outer  Joins  combine  Join  Filters  can  Combine  add  On  Join  Field  Ref  Counts  combine  Post  Join  Filters  Input  Reference  Counter  visit  Input  Ref,1,0
54,get  Simple  Factors,Rel  Metadata  Query  Lopt  Multi  Join,Map  Integer,,is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
55,get  Simple  Factors,Rel  Metadata  Query  Lopt  Multi  Join,Map  Integer,,is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
56,get  Simple  Factors,Rel  Metadata  Query  Lopt  Multi  Join,Map  Integer,,is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
57,get  Simple  Factors,Rel  Metadata  Query  Lopt  Multi  Join,Map  Integer,,is  Full  Outer  Join  get  Multi  Join  Rel  get  Num  Join  Factors  is  Null  Generating  get  Join  Removal  Factor  get  Join  Factor  get  Table  Origin  put,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
58,create  Top  Project,Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String,Rel  Node,,get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Lopt  Join  Tree,factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right,Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,0,0
59,create  Top  Project,Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String,Rel  Node,,get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build,Lopt  Join  Tree,factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right,Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
60,create  Top  Project,Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String,Rel  Node,,get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
61,create  Top  Project,Rel  Builder  Lopt  Multi  Join  Lopt  Join  Tree  List  String,Rel  Node,,get  Rex  Builder  get  Cluster  get  Multi  Join  Rel  get  Tree  Order  get  Num  Join  Factors  get  Multi  Join  Fields  put  get  get  Num  Fields  In  Join  Factor  get  is  Right  Factor  In  Removable  Self  Join  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Right  Column  Mapping  get  add  make  Input  Ref  get  Type  get  size  push  get  Join  Tree  project  get  Post  Join  Filter  get  Multi  Join  Rel  filter  build,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
62,set  Factor  Join  Keys,Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder,void,,get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
63,set  Factor  Join  Keys,Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder,void,,get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
64,set  Factor  Join  Keys,Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder,void,,get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
65,set  Factor  Join  Keys,Lopt  Multi  Join  List  Rex  Node  Immutable  Bit  Set  int  int  Immutable  Bit  Set  Builder,void,,get  Factors  Ref  By  Join  Filter  contains  get  Fields  Ref  By  Join  Filter  next  Set  Bit  next  Set  Bit  set,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
66,remap  Join  References,Lopt  Multi  Join  int  List  Integer  int  int  int  int  boolean,boolean,,is  Right  Factor  In  Removable  Self  Join  equals  get  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Num  Fields  In  Join  Factor  get  Right  Column  Mapping  get  Num  Fields  In  Join  Factor  get,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
67,remap  Join  References,Lopt  Multi  Join  int  List  Integer  int  int  int  int  boolean,boolean,,is  Right  Factor  In  Removable  Self  Join  equals  get  get  Other  Self  Join  Factor  get  Num  Fields  In  Join  Factor  get  get  Num  Fields  In  Join  Factor  get  Right  Column  Mapping  get  Num  Fields  In  Join  Factor  get,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  swap  Filter  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
68,swap  Filter,Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node,Rex  Node,,get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Lopt  Join  Tree,factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right,Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,0,0
69,swap  Filter,Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node,Rex  Node,,get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields,Lopt  Join  Tree,factor  Tree  join  Tree  removable  Self  Join  Binary  Tree  parent  Leaf  id  Node  left  right,Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  Lopt  Join  Tree  get  Join  Tree  get  Left  get  Right  get  Factor  Tree  get  Tree  Order  get  Tree  Order  is  Removable  Self  Join  get  Child  Factors  Binary  Tree  get  Parent  get  Tree  Order  Leaf  get  Id  get  Tree  Order  Node  get  Left  get  Right  get  Tree  Order,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
70,swap  Filter,Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node,Rex  Node,,get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
71,swap  Filter,Rex  Builder  Lopt  Multi  Join  Lopt  Join  Tree  Lopt  Join  Tree  Rex  Node,Rex  Node,,get  Field  Count  get  Row  Type  get  Join  Tree  get  Field  Count  get  Row  Type  get  Join  Tree  accept  get  Join  Fields  get  Join  Fields,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Lopt  Optimize  Join  Rule,instance,Lopt  Optimize  Join  Rule  Lopt  Optimize  Join  Rule  on  Match  find  Removable  Outer  Joins  set  Join  Key  find  Removable  Self  Joins  get  Simple  Factors  is  Self  Join  Filter  Unique  find  Best  Orderings  create  Top  Project  compute  Join  Cardinality  set  Factor  Join  Keys  create  Ordering  get  Best  Next  Factor  is  Join  Tree  add  Factor  To  Tree  row  Width  Cost  push  Down  Factor  add  To  Top  add  Filters  adjust  Filter  remap  Join  References  create  Replacement  Semi  Join  create  Replacement  Join  create  Join  Subtree  add  Additional  Filters  swap  Inputs  needs  Adjustment  is  Removable  Self  Join  are  Self  Join  Keys  Unique,1,0
72,apply,Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule,void,,,Project  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Project  Table  Scan  Rule  test,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
73,apply,Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule,void,,,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,Project  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Project  Table  Scan  Rule  test,1,0
74,apply,Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule,void,,,Project  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Project  Table  Scan  Rule  test,Rel  Opt  Rule  Call,logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents,Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder,0,0
75,apply,Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule,void,,,Rel  Opt  Rule  Call,logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents,Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder,Project  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Project  Table  Scan  Rule  test,1,0
76,apply,Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule,void,,,Project  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Project  Table  Scan  Rule  test,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints,0,0
77,apply,Rel  Opt  Rule  Call  Project  Project  Table  Scan  Rule,void,,,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints,Project  Table  Scan  Rule,predicate  instance  interpreter,on  Match  on  Match  Project  Table  Scan  Rule  test,1,1
78,is  Suitable  Filter,Lopt  Multi  Join  Rex  Node  int,int,,,Lopt  Semi  Join  Optimizer,threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators,Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,0,0
79,is  Suitable  Filter,Lopt  Multi  Join  Rex  Node  int,int,,,Lopt  Multi  Join,multi  Join  join  Filters  all  Join  Filters  n  Join  Factors  n  Total  Fields  join  Factors  join  Types  outer  Join  Factors  proj  Fields  join  Field  Ref  Counts  Map  factors  Ref  By  Join  Filter  fields  Ref  By  Join  Filter  join  Start  n  Fields  In  Join  Factor  factors  Ref  By  Factor  factor  Weights  factory  join  Removal  Factors  join  Removal  Semi  Joins  removable  Outer  Join  Factors  removable  Self  Join  Pairs  Edge  factors  columns  condition  Removable  Self  Join  left  Factor  right  Factor  column  Mapping,Lopt  Multi  Join  get  Multi  Join  Rel  get  Num  Join  Factors  get  Join  Factor  get  Num  Total  Fields  get  Num  Fields  In  Join  Factor  get  Join  Filters  get  Factors  Ref  By  Join  Filter  get  Multi  Join  Fields  get  Fields  Ref  By  Join  Filter  get  Factor  Weights  get  Factors  Ref  By  Factor  get  Join  Start  is  Null  Generating  get  Outer  Join  Factors  get  Outer  Join  Cond  get  Proj  Fields  get  Join  Field  Ref  Counts  get  Join  Removal  Factor  get  Join  Removal  Semi  Join  set  Join  Removal  Factor  set  Join  Removal  Semi  Join  get  Join  Filter  Factor  Bitmap  field  Bitmap  set  Join  Filter  Refs  factor  Bitmap  find  Ref  set  Factor  Weights  set  Factor  Weight  has  All  Factors  get  Join  Fields  add  Removable  Outer  Join  Factor  is  Removable  Outer  Join  Factor  add  Removable  Self  Join  Pair  get  Other  Self  Join  Factor  is  Left  Factor  In  Removable  Self  Join  is  Right  Factor  In  Removable  Self  Join  get  Right  Column  Mapping  create  Edge  Edge  to  String  Removable  Self  Join  get  Left  Factor  get  Right  Factor  get  Column  Mapping,Lopt  Semi  Join  Optimizer,threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators,Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id,1,0
80,is  Suitable  Filter,Lopt  Multi  Join  Rex  Node  int,int,,,Lopt  Semi  Join  Optimizer,threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators,Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
81,is  Suitable  Filter,Lopt  Multi  Join  Rex  Node  int,int,,,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Lopt  Semi  Join  Optimizer,threshold  score  rex  Builder  mq  chosen  Semi  Joins  possible  Semi  Joins  factor  Cost  Ordering  Factor  Cost  Comparator  Lcs  Table  Lcs  Table  Scan  Lcs  Index  Optimizer  Fem  Local  Index  Lucid  Db  Special  Operators,Lopt  Semi  Join  Optimizer  make  Possible  Semi  Joins  find  Semi  Join  Index  By  Cost  adjust  Semi  Join  Condition  validate  Keys  remove  Extra  Filters  choose  Best  Semi  Join  compute  Score  remove  Join  remove  Possible  Semi  Join  get  Chosen  Semi  Join  compare  Lcs  Index  Optimizer  find  Semi  Join  Index  By  Cost  is  Lcs  Rid  Column  Id,1,0
82,create  Project  Exprs,Project  Rel  Node  int  Rex  Builder  List  Rel  Data  Type  Field  List  Pair  Rex  Node  String,void,,get  Field  List  get  Row  Type  get  Named  Projects  size  accept  add  of  size  get  add  of  make  Input  Ref  get  Type  get  Name,Join  Project  Transpose  Rule,both  project  left  project  right  project  both  project  include  outer  left  project  include  outer  right  project  include  outer  include  Outer,Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  on  Match  has  Left  Child  has  Right  Child  get  Right  Child  get  Project  Child,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
83,create  Project  Exprs,Project  Rel  Node  int  Rex  Builder  List  Rel  Data  Type  Field  List  Pair  Rex  Node  String,void,,get  Field  List  get  Row  Type  get  Named  Projects  size  accept  add  of  size  get  add  of  make  Input  Ref  get  Type  get  Name,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,Join  Project  Transpose  Rule,both  project  left  project  right  project  both  project  include  outer  left  project  include  outer  right  project  include  outer  include  Outer,Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  Join  Project  Transpose  Rule  on  Match  has  Left  Child  has  Right  Child  get  Right  Child  get  Project  Child,1,0
84,is  Join  Supported,Aggregate  Aggregate  Join  Transpose  Rule,boolean,,get  Join  Type  is  Empty  get  Agg  Call  List,Aggregate  Join  Transpose  Rule,instance  extended  allow  Functions  Side  split  new  Input  aggregate,Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints,0,0
85,is  Join  Supported,Aggregate  Aggregate  Join  Transpose  Rule,boolean,,get  Join  Type  is  Empty  get  Agg  Call  List,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints,Aggregate  Join  Transpose  Rule,instance  extended  allow  Functions  Side  split  new  Input  aggregate,Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry,1,1
86,is  Join  Supported,Aggregate  Aggregate  Join  Transpose  Rule,boolean,,get  Join  Type  is  Empty  get  Agg  Call  List,Aggregate  Join  Transpose  Rule,instance  extended  allow  Functions  Side  split  new  Input  aggregate,Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
87,is  Join  Supported,Aggregate  Aggregate  Join  Transpose  Rule,boolean,,get  Join  Type  is  Empty  get  Agg  Call  List,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Join  Transpose  Rule,instance  extended  allow  Functions  Side  split  new  Input  aggregate,Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  Aggregate  Join  Transpose  Rule  is  Aggregate  Supported  on  Match  key  Columns  populate  Equivalences  populate  Equivalence  registry,1,0
88,find  Reference,Logical  Window  Project  Window  Transpose  Rule,Immutable  Bit  Set,,get  Field  Count  get  Row  Type  get  Input  builder,Project  Window  Transpose  Rule,instance,Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index,Logical  Project,,Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  visit  Input  Ref,0,0
89,find  Reference,Logical  Window  Project  Window  Transpose  Rule,Immutable  Bit  Set,,get  Field  Count  get  Row  Type  get  Input  builder,Logical  Project,,Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  visit  Input  Ref,Project  Window  Transpose  Rule,instance,Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index,1,1
90,find  Reference,Logical  Window  Project  Window  Transpose  Rule,Immutable  Bit  Set,,get  Field  Count  get  Row  Type  get  Input  builder,Project  Window  Transpose  Rule,instance,Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index,Logical  Window,Window  Key  group  Set  order  Keys  is  Rows  lower  Bound  upper  Bound,Logical  Window  copy  create  create  to  Input  Refs  Window  Key  hash  Code  equals  add  Windows,0,0
91,find  Reference,Logical  Window  Project  Window  Transpose  Rule,Immutable  Bit  Set,,get  Field  Count  get  Row  Type  get  Input  builder,Logical  Window,Window  Key  group  Set  order  Keys  is  Rows  lower  Bound  upper  Bound,Logical  Window  copy  create  create  to  Input  Refs  Window  Key  hash  Code  equals  add  Windows,Project  Window  Transpose  Rule,instance,Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call  get  Adjusted  Index,1,0
92,get  Adjusted  Index,int  Immutable  Bit  Set  int,int,,cardinality  cardinality  get,Project  Window  Transpose  Rule,instance,Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
93,get  Adjusted  Index,int  Immutable  Bit  Set  int,int,,cardinality  cardinality  get,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Project  Window  Transpose  Rule,instance,Project  Window  Transpose  Rule  on  Match  visit  Input  Ref  visit  Call,1,0
94,get  Input  With  Same  Row  Type,Aggregate,Rel  Node,,are  Row  Types  Equal  get  Row  Type  get  Row  Type  get  Input  get  Input  create  Project  get  Input  as  List  get  Group  Set,Aggregate  Union  Aggregate  Rule,agg  on  first  input  agg  on  second  input  instance,Aggregate  Union  Aggregate  Rule  Aggregate  Union  Aggregate  Rule  on  Match,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
95,get  Input  With  Same  Row  Type,Aggregate,Rel  Node,,are  Row  Types  Equal  get  Row  Type  get  Row  Type  get  Input  get  Input  create  Project  get  Input  as  List  get  Group  Set,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Union  Aggregate  Rule,agg  on  first  input  agg  on  second  input  instance,Aggregate  Union  Aggregate  Rule  Aggregate  Union  Aggregate  Rule  on  Match,1,0
96,create  Aggregate  Call  With  Binding,Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int,Aggregate  Call,,of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
97,create  Aggregate  Call  With  Binding,Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int,Aggregate  Call,,of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
98,create  Aggregate  Call  With  Binding,Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int,Aggregate  Call,,of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Sql  Agg  Function,requires  Order  requires  Over  requires  Group  Order,Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment  get  Rollup,0,0
99,create  Aggregate  Call  With  Binding,Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int,Aggregate  Call,,of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type,Sql  Agg  Function,requires  Order  requires  Over  requires  Group  Order,Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  Sql  Agg  Function  unwrap  is  Aggregator  is  Quantifier  Allowed  validate  Call  requires  Order  requires  Group  Order  requires  Over  get  Distinct  Optionality  get  Parameter  Types  get  Return  Type  allows  Filter  allows  Null  Treatment  get  Rollup,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
100,create  Aggregate  Call  With  Binding,Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int,Aggregate  Call,,of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
101,create  Aggregate  Call  With  Binding,Rel  Data  Type  Factory  Sql  Agg  Function  Rel  Data  Type  Aggregate  Aggregate  Call  int  int,Aggregate  Call,,of  get  Group  Count  create  is  Distinct  is  Approximate  ignore  Nulls  of  infer  Return  Type,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
102,get  Sum  Aggregated  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
103,get  Sum  Aggregated  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
104,get  Sum  Aggregated  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
105,get  Sum  Aggregated  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Rex  Builder  int  int,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  of  get  Group  Count  get  Input  add  Agg  Call  get  Group  Count  of  get  Type,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
106,get  Regr  Count  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
107,get  Regr  Count  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
108,get  Regr  Count  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
109,get  Regr  Count  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
110,get  Regr  Count  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Immutable  Int  List,ints  empty  array  empty  Empty  Immutable  Int  List  Abstract  Indexed  List  Iterator  size  position,Immutable  Int  List  of  of  copy  Of  copy  Of  copy  Of  copy  From  Collection  hash  Code  equals  to  String  is  Empty  size  to  Array  to  Array  to  Int  Array  get  get  Int  iterator  list  Iterator  list  Iterator  get  index  Of  index  Of  last  Index  Of  last  Index  Of  append  append  range  apply  identity  append  All  to  Array  to  Array  iterator  list  Iterator  get  Abstract  Indexed  List  Iterator  has  Next  next  next  Index  has  Previous  previous  previous  Index,0,0
111,get  Regr  Count  Rex  Node,Aggregate  Aggregate  Call  List  Aggregate  Call  Map  Aggregate  Call  Rex  Node  Immutable  List  Rel  Data  Type  int  Aggregate  Reduce  Functions  Rule,Rex  Node,,create  is  Distinct  is  Approximate  ignore  Nulls  get  Group  Count  add  Agg  Call  get  Rex  Builder  get  Cluster  get  Group  Count,Immutable  Int  List,ints  empty  array  empty  Empty  Immutable  Int  List  Abstract  Indexed  List  Iterator  size  position,Immutable  Int  List  of  of  copy  Of  copy  Of  copy  Of  copy  From  Collection  hash  Code  equals  to  String  is  Empty  size  to  Array  to  Array  to  Int  Array  get  get  Int  iterator  list  Iterator  list  Iterator  get  index  Of  index  Of  last  Index  Of  last  Index  Of  append  append  range  apply  identity  append  All  to  Array  to  Array  iterator  list  Iterator  get  Abstract  Indexed  List  Iterator  has  Next  next  next  Index  has  Previous  previous  previous  Index,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  divide  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,1
112,divide,boolean  Rex  Builder  Rex  Node  Rex  Node  Rex  Node,Rex  Node,,make  Call  make  Call  make  Exact  Literal  make  Null  Literal  get  Type  make  Call  make  Call  make  Call  make  Call,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
113,divide,boolean  Rex  Builder  Rex  Node  Rex  Node  Rex  Node,Rex  Node,,make  Call  make  Call  make  Exact  Literal  make  Null  Literal  get  Type  make  Call  make  Call  make  Call  make  Call,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Aggregate  Reduce  Functions  Rule,instance  functions  To  Reduce,Aggregate  Reduce  Functions  Rule  Aggregate  Reduce  Functions  Rule  add  Default  Set  Of  Functions  To  Reduce  matches  on  Match  contains  Avg  Stddev  Var  Call  is  Reducible  reduce  Aggs  reduce  Agg  create  Aggregate  Call  With  Binding  reduce  Avg  reduce  Sum  reduce  Stddev  get  Sum  Aggregated  Rex  Node  get  Sum  Aggregated  Rex  Node  With  Binding  reduce  Regr  Szz  reduce  Covariance  lookup  Or  Add  new  Aggregate  Rel  new  Calc  Rel  get  Field  Type,1,0
114,can  Push,Aggregate  Immutable  Bit  Set,boolean,,range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains,Filter  Aggregate  Transpose  Rule,instance,Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
115,can  Push,Aggregate  Immutable  Bit  Set,boolean,,range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Filter  Aggregate  Transpose  Rule,instance,Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match,1,0
116,can  Push,Aggregate  Immutable  Bit  Set,boolean,,range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains,Filter  Aggregate  Transpose  Rule,instance,Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
117,can  Push,Aggregate  Immutable  Bit  Set,boolean,,range  cardinality  get  Group  Set  contains  get  Group  Type  get  Group  Sets  contains,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Filter  Aggregate  Transpose  Rule,instance,Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  Filter  Aggregate  Transpose  Rule  on  Match,1,0
118,adjust  Condition,Logical  Project  Semi  Join  Project  Transpose  Rule,Rex  Node,,get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition,Semi  Join  Project  Transpose  Rule,instance,Semi  Join  Project  Transpose  Rule  on  Match,Logical  Project,,Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  find  Reference  visit  Input  Ref,0,0
119,adjust  Condition,Logical  Project  Semi  Join  Project  Transpose  Rule,Rex  Node,,get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition,Logical  Project,,Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  find  Reference  visit  Input  Ref,Semi  Join  Project  Transpose  Rule,instance,Semi  Join  Project  Transpose  Rule  on  Match,1,0
120,adjust  Condition,Logical  Project  Semi  Join  Project  Transpose  Rule,Rex  Node,,get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition,Semi  Join  Project  Transpose  Rule,instance,Semi  Join  Project  Transpose  Rule  on  Match,Logical  Join,semi  Join  Done  system  Field  List,Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  create  create  copy  accept  explain  Terms  is  Semi  Join  Done  get  System  Field  List  with  Hints,0,0
121,adjust  Condition,Logical  Project  Semi  Join  Project  Transpose  Rule,Rex  Node,,get  Rex  Builder  get  Cluster  get  Type  Factory  get  Right  derive  Join  Row  Type  get  Row  Type  get  Input  get  Row  Type  get  System  Field  List  get  Named  Projects  add  Project  get  Field  Count  get  Row  Type  get  Input  get  Field  List  get  Row  Type  size  get  make  Input  Ref  get  Type  add  Project  get  Name  get  Program  derive  Join  Row  Type  get  Row  Type  get  Row  Type  get  System  Field  List  add  Identity  add  Condition  get  Condition  get  Program  merge  Programs  expand  Local  Ref  get  Condition,Logical  Join,semi  Join  Done  system  Field  List,Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  Logical  Join  create  create  copy  accept  explain  Terms  is  Semi  Join  Done  get  System  Field  List  with  Hints,Semi  Join  Project  Transpose  Rule,instance,Semi  Join  Project  Transpose  Rule  on  Match,1,1
122,convert  Singleton  Distinct,Rel  Builder  Aggregate  Set  Pair  List  Integer  Integer,Rel  Builder,,check  Argument  size  push  get  Input  get  Agg  Call  List  get  Group  Set  as  List  get  Group  Set  is  Distinct  add  All  get  Arg  List  of  is  Distinct  create  get  Aggregation  is  Approximate  ignore  Nulls  get  Arg  List  cardinality  peek  add  push  copy  get  Trait  Set  build  is  Distinct  get  Arg  List  add  size  head  Set  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  size  of  get  Kind  get  Aggregation  create  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  get  Name  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  add  get  add  push  copy  get  Trait  Set  build  of,Aggregate  Expand  Distinct  Aggregates  Rule,instance  join  use  Grouping  Sets,Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls  create  Select  Distinct,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
123,convert  Singleton  Distinct,Rel  Builder  Aggregate  Set  Pair  List  Integer  Integer,Rel  Builder,,check  Argument  size  push  get  Input  get  Agg  Call  List  get  Group  Set  as  List  get  Group  Set  is  Distinct  add  All  get  Arg  List  of  is  Distinct  create  get  Aggregation  is  Approximate  ignore  Nulls  get  Arg  List  cardinality  peek  add  push  copy  get  Trait  Set  build  is  Distinct  get  Arg  List  add  size  head  Set  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  size  of  get  Kind  get  Aggregation  create  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  get  Name  create  get  Aggregation  is  Approximate  ignore  Nulls  cardinality  peek  get  Type  add  get  add  push  copy  get  Trait  Set  build  of,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Expand  Distinct  Aggregates  Rule,instance  join  use  Grouping  Sets,Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls  create  Select  Distinct,1,0
124,create  Select  Distinct,Rel  Builder  Aggregate  List  Integer  int  Map  Integer  Integer,Rel  Builder,,push  get  Input  get  Field  List  get  Row  Type  peek  get  Group  Set  put  size  add  of  get  Rex  Builder  get  Cluster  of  of  make  Call  make  Null  Literal  get  Type  put  size  add  of  get  put  size  add  of  project  left  right  push  copy  get  Trait  Set  build  range  size  of,Aggregate  Expand  Distinct  Aggregates  Rule,instance  join  use  Grouping  Sets,Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  convert  Singleton  Distinct  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
125,create  Select  Distinct,Rel  Builder  Aggregate  List  Integer  int  Map  Integer  Integer,Rel  Builder,,push  get  Input  get  Field  List  get  Row  Type  peek  get  Group  Set  put  size  add  of  get  Rex  Builder  get  Cluster  of  of  make  Call  make  Null  Literal  get  Type  put  size  add  of  get  put  size  add  of  project  left  right  push  copy  get  Trait  Set  build  range  size  of,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Aggregate  Expand  Distinct  Aggregates  Rule,instance  join  use  Grouping  Sets,Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  Aggregate  Expand  Distinct  Aggregates  Rule  on  Match  convert  Singleton  Distinct  rewrite  Using  Grouping  Sets  group  Value  remap  remap  remap  remap  convert  Monopole  do  Rewrite  rewrite  Agg  Calls,1,0
126,as,String  String  Sql  Implementor,Sql  Call,,add  add  add  create  Call,Sql  Implementor,pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause,Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep,0,0
127,as,String  String  Sql  Implementor,Sql  Call,,add  add  add  create  Call,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep,Sql  Implementor,pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause,Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,1,1
128,set  Op  To  Sql,Sql  Set  Operator  Rel  Node,Result,,zip  get  Inputs  visit  Child  as  Select  create  Call  as  Select  list  result,Sql  Implementor,pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause,Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,Sql  Set  Operator,all,Sql  Set  Operator  Sql  Set  Operator  is  All  is  Distinct  validate  Call,0,0
129,set  Op  To  Sql,Sql  Set  Operator  Rel  Node,Result,,zip  get  Inputs  visit  Child  as  Select  create  Call  as  Select  list  result,Sql  Set  Operator,all,Sql  Set  Operator  Sql  Set  Operator  is  All  is  Distinct  validate  Call,Sql  Implementor,pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause,Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  requires  Alias  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,1,0
130,requires  Alias,Sql  Node,boolean,,requires  Alias  For  From  Items  get  Kind  has  Implicit  Table  Alias,Sql  Implementor,pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause,Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
131,requires  Alias,Sql  Node,boolean,,requires  Alias  For  From  Items  get  Kind  has  Implicit  Table  Alias,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Implementor,pos  dialect  alias  Set  correl  Table  Map  Context  dialect  field  Count  ignore  Cast  Simple  Context  field  Base  Context  Match  Recognize  Context  Alias  Context  qualified  aliases  Join  Context  left  Context  right  Context  Table  Function  Scan  Context  input  Sql  Nodes  Result  node  needed  Alias  needed  Type  aliases  clauses  anon  Builder  rel  clauses  select  context  anon  aliases  Clause,Sql  Implementor  visit  Child  visit  Child  add  Select  is  Star  is  Star  set  Op  To  Sql  convert  Condition  To  Sql  Node  strip  Cast  From  String  reverse  Operator  Direction  join  Type  result  adjusted  Row  Type  result  collect  Aliases  is  Anon  wrap  Select  Context  Context  field  order  Field  to  Sql  to  Sql  to  Sql  visit  Input  Ref  get  Alias  Context  to  Sql  create  Over  Call  to  Sql  create  Sql  Window  Bound  create  Left  Call  create  Balanced  Call  to  Sql  field  List  get  size  add  Order  Item  add  Order  Item  to  Sql  with  Order  to  Sql  implementor  Simple  Context  field  Base  Context  get  Alias  Context  implementor  compute  Field  Count  alias  Context  join  Context  match  Recognize  Context  table  Function  Scan  Context  Match  Recognize  Context  to  Sql  Alias  Context  field  Join  Context  field  Table  Function  Scan  Context  field  Result  Result  builder  field  order  Field  need  New  Sub  Query  has  Nested  Aggregations  max  Clause  as  From  sub  Select  as  Select  strip  Trivial  Aliases  maybe  Strip  as  Statement  as  Query  Or  Values  qualified  Context  reset  Alias  reset  Alias  with  Anon  Builder  set  Select  set  Where  set  Group  By  set  Having  set  Order  By  set  Fetch  set  Offset  add  Order  Item  result,1,0
132,is  Cross  Join,Join,boolean,,get  Join  Type  is  Always  True  get  Condition,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
133,is  Cross  Join,Join,boolean,,get  Join  Type  is  Always  True  get  Condition,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
134,cast  Null  Type,Sql  Node  Rel  Data  Type  Field,Sql  Node,,create  Call  get  Cast  Spec  get  Type,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
135,cast  Null  Type,Sql  Node  Rel  Data  Type  Field,Sql  Node,,create  Call  get  Cast  Spec  get  Type,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
136,build  Agg  Group  List,Aggregate  Builder  List  Sql  Node  List  Sql  Node,void,,get  Group  Set  field  add  Select  get  Row  Type  add,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
137,build  Agg  Group  List,Aggregate  Builder  List  Sql  Node  List  Sql  Node,void,,get  Group  Set  field  add  Select  get  Row  Type  add,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
138,build  Aggregate,Aggregate  Builder  List  Sql  Node  List  Sql  Node,Result,,get  Agg  Call  List  to  Sql  get  Aggregation  rewrite  Single  Value  Expr  add  Select  get  Row  Type  set  Select  is  Empty  is  Empty  get  Agg  Call  List  set  Group  By  result,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
139,build  Aggregate,Aggregate  Builder  List  Sql  Node  List  Sql  Node,Result,,get  Agg  Call  List  to  Sql  get  Aggregation  rewrite  Single  Value  Expr  add  Select  get  Row  Type  set  Select  is  Empty  is  Empty  get  Agg  Call  List  set  Group  By  result,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
140,group  Item,List  Sql  Node  Immutable  Bit  Set  Immutable  Bit  Set,Sql  Node,,collect  map  stream  as  List  get  index  Of  to  List  size  get  create  Call,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
141,group  Item,List  Sql  Node  Immutable  Bit  Set  Immutable  Bit  Set,Sql  Node,,collect  map  stream  as  List  get  index  Of  to  List  size  get  create  Call,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
142,offset  Fetch,Sql  Implementor  Result  Rel  To  Sql  Converter,Sql  Implementor  Result,,builder  set  Fetch  to  Sql  result  builder  set  Offset  to  Sql  result,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms,0,0
143,offset  Fetch,Sql  Implementor  Result  Rel  To  Sql  Converter,Sql  Implementor  Result,,builder  set  Fetch  to  Sql  result  builder  set  Offset  to  Sql  result,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,1
144,has  Tricky  Rollup,Sort  Aggregate,boolean,,supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
145,has  Tricky  Rollup,Sort  Aggregate,boolean,,supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
146,has  Tricky  Rollup,Sort  Aggregate,boolean,,supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
147,has  Tricky  Rollup,Sort  Aggregate,boolean,,supports  Aggregate  Function  supports  Group  By  With  Rollup  get  Group  Type  get  Group  Type  cardinality  get  Group  Set  all  Match  stream  get  Field  Collations  get  Field  Index  cardinality  get  Group  Set,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
148,as,Sql  Node  String,Sql  Call,,create  Call,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep,0,0
149,as,Sql  Node  String,Sql  Call,,create  Call,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
150,visit,Rel  Node,Result,,get  Name  get  Class,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,Table  Function  Scan,rex  Call  element  Type  inputs  column  Mappings,Table  Function  Scan  Table  Function  Scan  copy  copy  get  Inputs  get  Child  Exps  accept  replace  Input  estimate  Row  Count  get  Call  explain  Terms  get  Column  Mappings  get  Element  Type,0,0
151,visit,Rel  Node,Result,,get  Name  get  Class,Table  Function  Scan,rex  Call  element  Type  inputs  column  Mappings,Table  Function  Scan  Table  Function  Scan  copy  copy  get  Inputs  get  Child  Exps  accept  replace  Input  estimate  Row  Count  get  Call  explain  Terms  get  Column  Mappings  get  Element  Type,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  create  As  Full  Operands  add  Select  parse  Correl  Table  Frame,1,0
152,create  As  Full  Operands,Rel  Data  Type  Sql  Node  String,List  Sql  Node,,add  add  for  Each  get  Field  Names  starts  With  to  Lower  Case  add,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  add  Select  parse  Correl  Table  Frame,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
153,create  As  Full  Operands,Rel  Data  Type  Sql  Node  String,List  Sql  Node,,add  add  for  Each  get  Field  Names  starts  With  to  Lower  Case  add,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Rel  To  Sql  Converter,anonymous  row  dispatcher  stack  Alias  Replacement  Shuttle  table  Alias  table  Type  replace  Source  Frame  ordinal  In  Parent  r  anon,Rel  To  Sql  Converter  dispatch  visit  Child  is  Anon  visit  Alias  Replacement  Shuttle  visit  visit  visit  Anti  Or  Semi  Join  is  Cross  Join  visit  visit  visit  cast  Null  Type  visit  visit  visit  Aggregate  get  Aggregate  Builder  build  Agg  Group  List  build  Aggregate  generate  Group  List  group  Item  visit  visit  visit  visit  visit  visit  get  Dual  create  Always  False  Condition  visit  has  Tricky  Rollup  get  Sql  Target  Table  visit  expr  List  identifier  List  visit  as  visit  visit  add  Select  parse  Correl  Table  Frame,1,0
154,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
155,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
156,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
157,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
158,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Calc,hints  program,Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,0,0
159,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Calc,hints  program,Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
160,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
161,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
162,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms,0,0
163,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,1
164,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
165,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
166,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
167,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
168,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
169,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
170,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
171,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
172,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
173,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
174,average  Join  Column  Sizes,Join  Rel  Metadata  Query,List  Double,,projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
175,average  Join  Column  Sizes,Join  Rel  Metadata  Query,List  Double,,projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
176,average  Join  Column  Sizes,Join  Rel  Metadata  Query,List  Double,,projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
177,average  Join  Column  Sizes,Join  Rel  Metadata  Query,List  Double,,projects  Right  get  Join  Type  get  Left  get  Right  get  Average  Column  Sizes  get  Average  Column  Sizes  get  Field  Count  get  Row  Type  to  Array  get  Field  Count  get  Row  Type  size  get  copy  Of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
178,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
179,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
180,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
181,average  Column  Sizes,Rel  Metadata  Query  Rel  Md  Size,List  Double,,get  Field  List  get  Row  Type  builder  size  get  is  Empty  get  Tuples  average  Type  Value  Size  get  Type  get  Tuples  type  Value  Size  get  Type  get  Value  As  get  size  get  Tuples  add  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size  average  Rex  Size,1,0
182,average  Rex  Size,Rex  Node  List  Double,Double,,get  Kind  get  get  Index  type  Value  Size  get  Type  get  Value  As  get  Operands  get  Sql  Type  Name  get  Type  get  Sql  Type  Name  get  Type  average  Rex  Size  average  Type  Value  Size  get  Type,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
183,average  Rex  Size,Rex  Node  List  Double,Double,,get  Kind  get  get  Index  type  Value  Size  get  Type  get  Value  As  get  Operands  get  Sql  Type  Name  get  Type  get  Sql  Type  Name  get  Type  average  Rex  Size  average  Type  Value  Size  get  Type,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Size,source  bytes  per  character,Rel  Md  Size  get  Def  average  Row  Size  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Join  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Column  Sizes  average  Field  Value  Size  average  Type  Value  Size  type  Value  Size,1,0
184,cumulative  Memory  Within  Phase,Rel  Node  Rel  Metadata  Query,Double,,memory  is  Phase  Transition  get  Inputs  cumulative  Memory  Within  Phase,Rel  Md  Memory,source,Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase  Split,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
185,cumulative  Memory  Within  Phase,Rel  Node  Rel  Metadata  Query,Double,,memory  is  Phase  Transition  get  Inputs  cumulative  Memory  Within  Phase,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Memory,source,Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase  Split,1,0
186,cumulative  Memory  Within  Phase  Split,Rel  Node  Rel  Metadata  Query,Double,,cumulative  Memory  Within  Phase  split  Count,Rel  Md  Memory,source,Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
187,cumulative  Memory  Within  Phase  Split,Rel  Node  Rel  Metadata  Query,Double,,cumulative  Memory  Within  Phase  split  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Memory,source,Rel  Md  Memory  get  Def  memory  cumulative  Memory  Within  Phase,1,0
188,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
189,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,1
190,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
191,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
192,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
193,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
194,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
195,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
196,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Intersect,,Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count,0,0
197,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Intersect,,Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
198,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
199,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
200,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Minus,,Minus  Minus  estimate  Row  Count,0,0
201,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Minus,,Minus  Minus  estimate  Row  Count,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
202,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
203,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
204,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
205,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
206,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
207,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
208,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Enumerable  Limit,offset  fetch,Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count,0,0
209,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Enumerable  Limit,offset  fetch,Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
210,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
211,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
212,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
213,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
214,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
215,get  Row  Count,Rel  Metadata  Query  Rel  Md  Row  Count,Double,,get  Row  Count  first  get  Best  get  Original  get  Rels  min  get  Row  Count  print  Stack  Trace  first,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Row  Count,source,get  Def  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count,1,0
216,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
217,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
218,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
219,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
220,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
221,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
222,project  Predicate,Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set,Rex  Node,,bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
223,project  Predicate,Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set,Rex  Node,,bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
224,project  Predicate,Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set,Rex  Node,,bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
225,project  Predicate,Rex  Builder  Rel  Node  Rex  Node  Immutable  Bit  Set,Rex  Node,,bits  contains  intersects  intersect  is  Nullable  get  Type  get  get  Field  List  get  Row  Type  is  Null  of  add  make  Call  make  Input  Ref  is  Empty  compose  Disjunction  make  Literal,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
226,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
227,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
228,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
229,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
230,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
231,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
232,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
233,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
234,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
235,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
236,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
237,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
238,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count,0,0
239,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,1
240,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
241,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
242,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Intersect,,Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count,0,0
243,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Intersect,,Intersect  Intersect  estimate  Row  Count  get  Max  Row  Count,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
244,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
245,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
246,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
247,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
248,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
249,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
250,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Exchange,distribution,Exchange  Exchange  copy  copy  get  Distribution  compute  Self  Cost  explain  Terms,0,0
251,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Exchange,distribution,Exchange  Exchange  copy  copy  get  Distribution  compute  Self  Cost  explain  Terms,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
252,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
253,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
254,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
255,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
256,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
257,get  Predicates,Rel  Metadata  Query  Rel  Md  Predicates,Rel  Opt  Predicate  List,,get  Rex  Builder  get  Cluster  zip  get  Inputs  get  Pulled  Up  Predicates  is  Empty  add  contains  add  add  add  compose  Conjunction  contains  set  compose  Conjunction  as  List  get  get  Cluster  first  get  Executor  get  Planner  simplify  Unknown  As  make  Call  is  Always  True  add  of,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Predicates,source  empty  list  Join  Condition  Based  Predicate  Inference  join  Rel  n  Sys  Fields  n  Fields  Left  n  Fields  Right  left  Fields  Bit  Set  right  Fields  Bit  Set  all  Fields  Bit  Set  equivalence  expr  Fields  all  Exprs  equality  Predicates  left  Child  Predicates  right  Child  Predicates  simplify  Equivalence  Finder  Exprs  Itr  columns  column  Sets  iteration  Idx  next  Mapping  first  Call,get  Def  get  Predicates  get  Predicates  get  Predicates  project  Predicate  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  get  Predicates  Join  Condition  Based  Predicate  Inference  infer  Predicates  left  right  infer  mappings  check  Target  mark  As  Equivalent  compose  Equivalence  Finder  visit  Call  Exprs  Itr  has  Next  next  remove  compute  Next  Mapping  initialize  Mapping  pos  is  Always  True,1,0
258,get  Project  Unique  Keys,Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys,Set  Immutable  Bit  Set,,builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Single  Rel,input,Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type,0,0
259,get  Project  Unique  Keys,Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys,Set  Immutable  Bit  Set,,builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build,Single  Rel,input,Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,1
260,get  Project  Unique  Keys,Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys,Set  Immutable  Bit  Set,,builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
261,get  Project  Unique  Keys,Rel  Metadata  Query  boolean  List  Rex  Node  Rel  Md  Unique  Keys,Set  Immutable  Bit  Set,,builder  builder  size  get  get  Index  put  set  build  is  Empty  of  get  Unique  Keys  get  Input  of  transform  Values  as  Map  build  builder  builder  contains  product  transform  filter  power  Set  get  is  Empty  add  All  transform  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
262,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
263,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
264,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
265,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
266,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Set  Op,inputs  kind  all,Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins,0,0
267,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Set  Op,inputs  kind  all,Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
268,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
269,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
270,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
271,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
272,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
273,get  Unique  Keys,Filter  Rel  Metadata  Query  boolean,Set  Immutable  Bit  Set,,get  Unique  Keys  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Unique  Keys,source,Rel  Md  Unique  Keys  get  Def  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys  get  Unique  Keys,1,0
274,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
275,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
276,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
277,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
278,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Intersect,,Intersect  Intersect  estimate  Row  Count,0,0
279,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Intersect,,Intersect  Intersect  estimate  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,1
280,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
281,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
282,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
283,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
284,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
285,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
286,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
287,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
288,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
289,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
290,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Enumerable  Limit,offset  fetch,Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count,0,0
291,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Enumerable  Limit,offset  fetch,Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression  get  Min  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
292,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
293,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
294,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
295,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
296,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
297,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
298,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
299,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
300,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
301,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
302,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
303,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
304,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
305,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
306,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
307,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
308,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
309,get  Max  Row  Count,Rel  Metadata  Query  Rel  Md  Max  Row  Count,Double,,get  Inputs  get  Max  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Max  Row  Count,source,get  Def  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  all  Group  Keys  Are  Constant  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count  get  Max  Row  Count,1,0
310,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
311,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
312,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
313,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
314,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Calc,hints  program,Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,0,0
315,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Calc,hints  program,Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
316,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
317,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
318,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,0,0
319,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Sort,collation  field  Exps  offset  fetch,Sort  Sort  Sort  copy  copy  copy  compute  Self  Cost  get  Child  Exps  accept  is  Enforcer  get  Collation  get  Collation  List  explain  Terms  offset  Fetch,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
320,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
321,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
322,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Enumerable  Limit,offset  fetch,Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression,0,0
323,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Enumerable  Limit,offset  fetch,Enumerable  Limit  create  copy  explain  Terms  implement  get  Expression,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,1
324,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
325,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
326,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
327,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
328,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
329,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
330,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
331,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
332,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
333,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
334,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
335,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
336,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
337,get  Min  Row  Count,Rel  Metadata  Query  Rel  Md  Min  Row  Count,Double,offset  offset,get  Min  Row  Count  get  Input  int  Value  max  int  Value,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Min  Row  Count,source,get  Def  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count  get  Min  Row  Count,1,0
338,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
339,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
340,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
341,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
342,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
343,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
344,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
345,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
346,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
347,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
348,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
349,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
350,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
351,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
352,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Calc,hints  program,Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,0,0
353,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Calc,hints  program,Calc  Calc  Calc  copy  copy  is  Valid  get  Program  get  Hints  estimate  Row  Count  compute  Self  Cost  explain  Terms  accept,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
354,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
355,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
356,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
357,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
358,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
359,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
360,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
361,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
362,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
363,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
364,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
365,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
366,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
367,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
368,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
369,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
370,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
371,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
372,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
373,get  Selectivity,Union  Rel  Metadata  Query  Rex  Node,Double,,size  get  Inputs  get  Field  Count  get  Row  Type  get  Rex  Builder  get  Cluster  get  Inputs  get  Row  Count  accept  get  Field  List  get  Row  Type  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Selectivity,source,Rel  Md  Selectivity  get  Def  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity  get  Selectivity,1,0
374,distribution,Rel  Node  Rel  Metadata  Query,Rel  Distribution,,,Rel  Md  Distribution,source,Rel  Md  Distribution  get  Def  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  table  snapshot  sort  filter  limit  calc  project  values  exchange,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
375,distribution,Rel  Node  Rel  Metadata  Query,Rel  Distribution,,,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distribution,source,Rel  Md  Distribution  get  Def  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  distribution  table  snapshot  sort  filter  limit  calc  project  values  exchange,1,0
376,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
377,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
378,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
379,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
380,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
381,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
382,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
383,get  All  Predicates,Rel  Node  Rel  Metadata  Query,Rel  Opt  Predicate  List,,,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  All  Predicates,source,get  Def  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates  get  All  Predicates,1,0
384,get  Column  Origins,Rel  Metadata  Query  int  Rel  Md  Column  Origins,Set  Rel  Column  Origin,,get  Inputs  get  Column  Origins  add  All,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,Set  Op,inputs  kind  all,Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous,0,0
385,get  Column  Origins,Rel  Metadata  Query  int  Rel  Md  Column  Origins,Set  Rel  Column  Origin,,get  Inputs  get  Column  Origins  add  All,Set  Op,inputs  kind  all,Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,1,1
386,get  Column  Origins,Rel  Metadata  Query  int  Rel  Md  Column  Origins,Set  Rel  Column  Origin,,get  Inputs  get  Column  Origins  add  All,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
387,get  Column  Origins,Rel  Metadata  Query  int  Rel  Md  Column  Origins,Set  Rel  Column  Origin,,get  Inputs  get  Column  Origins  add  All,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,1,0
388,get  Column  Origins,Rel  Metadata  Query  int  Rel  Md  Column  Origins,Set  Rel  Column  Origin,,get  Inputs  get  Column  Origins  add  All,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
389,get  Column  Origins,Rel  Metadata  Query  int  Rel  Md  Column  Origins,Set  Rel  Column  Origin,,get  Inputs  get  Column  Origins  add  All,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  get  Multiple  Columns  visit  Input  Ref,1,0
390,get  Multiple  Columns,Rex  Node  Rel  Node  Rel  Metadata  Query,Set  Rel  Column  Origin,,,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
391,get  Multiple  Columns,Rex  Node  Rel  Node  Rel  Metadata  Query,Set  Rel  Column  Origin,,,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref,1,0
392,get  Multiple  Columns,Rex  Node  Rel  Node  Rel  Metadata  Query,Set  Rel  Column  Origin,,,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
393,get  Multiple  Columns,Rex  Node  Rel  Node  Rel  Metadata  Query,Set  Rel  Column  Origin,,,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Column  Origins,source,Rel  Md  Column  Origins  get  Def  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  visit  Local  Ref  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  get  Column  Origins  create  Derived  Column  Origins  visit  Input  Ref,1,0
394,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
395,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
396,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
397,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
398,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
399,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
400,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
401,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
402,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
403,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
404,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
405,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
406,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
407,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
408,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
409,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
410,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
411,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
412,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
413,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
414,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
415,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
416,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
417,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
418,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
419,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
420,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
421,get  Population  Size,Filter  Rel  Metadata  Query  Immutable  Bit  Set,Double,,get  Population  Size  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Population  Size,source,Rel  Md  Population  Size  get  Def  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size  get  Population  Size,1,0
422,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
423,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
424,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
425,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
426,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,Set  Op,inputs  kind  all,Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins,0,0
427,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Set  Op,inputs  kind  all,Set  Op  Set  Op  copy  copy  replace  Input  get  Inputs  explain  Terms  derive  Row  Type  is  Homogeneous  get  Column  Origins,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
428,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
429,get  Table  References,Rel  Node  Rel  Metadata  Query,Set  Rel  Table  Ref,,,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Table  References,source,Rel  Md  Table  References  get  Def  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References  get  Table  References,1,0
430,are  Columns  Unique,Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean,Boolean,,is  Key  get  Table,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
431,are  Columns  Unique,Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean,Boolean,,is  Key  get  Table,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
432,are  Columns  Unique,Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean,Boolean,,is  Key  get  Table,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,0,0
433,are  Columns  Unique,Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean,Boolean,,is  Key  get  Table,Table  Scan,table  hints,Table  Scan  Table  Scan  Table  Scan  estimate  Row  Count  get  Table  get  Collation  List  compute  Self  Cost  derive  Row  Type  identity  identity  explain  Terms  project  accept  get  Hints  apply,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
434,are  Columns  Unique,Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean,Boolean,,is  Key  get  Table,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
435,are  Columns  Unique,Table  Scan  Rel  Metadata  Query  Immutable  Bit  Set  boolean,Boolean,,is  Key  get  Table,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
436,are  Project  Columns  Unique,Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node,Boolean,,get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
437,are  Project  Columns  Unique,Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node,Boolean,,get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
438,are  Project  Columns  Unique,Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node,Boolean,,get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,Single  Rel,input,Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type  get  Project  Unique  Keys,0,0
439,are  Project  Columns  Unique,Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node,Boolean,,get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build,Single  Rel,input,Single  Rel  get  Input  get  Inputs  estimate  Row  Count  children  Accept  explain  Terms  replace  Input  derive  Row  Type  get  Project  Unique  Keys,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
440,are  Project  Columns  Unique,Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node,Boolean,,get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
441,are  Project  Columns  Unique,Single  Rel  Rel  Metadata  Query  Immutable  Bit  Set  boolean  List  Rex  Node,Boolean,,get  Type  Factory  get  Cluster  builder  get  set  get  Index  get  Operator  get  get  Operands  create  Type  With  Nullability  get  Type  create  Type  With  Nullability  get  Type  equals  set  get  Index  cardinality  are  Columns  Unique  get  Input  build,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  simply  Projects  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
442,simply  Projects,Rel  Node  Immutable  Bit  Set,boolean,,get  Projects  size  get  get  get  Index,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
443,simply  Projects,Rel  Node  Immutable  Bit  Set,boolean,,get  Projects  size  get  get  get  Index,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Column  Uniqueness,source,Rel  Md  Column  Uniqueness  get  Def  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Project  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  are  Columns  Unique  split  Left  And  Right  Columns  decorate  With  Constant  Columns  From  Predicates,1,0
444,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
445,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
446,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
447,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
448,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
449,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
450,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
451,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
452,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
453,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
454,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,0,0
455,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Union,,Union  Union  estimate  Row  Count  estimate  Row  Count  get  Predicates,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
456,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
457,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
458,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,0,0
459,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Filter,condition,Filter  Filter  copy  copy  get  Child  Exps  accept  get  Condition  is  Valid  compute  Self  Cost  estimate  Row  Count  estimate  Filtered  Rows  estimate  Filtered  Rows  explain  Terms  get  Conjunctions,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
460,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
461,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
462,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
463,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
464,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
465,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
466,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,0,0
467,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Aggregate,hints  is  simple  no  indicator  is  not  grand  total  indicator  agg  Calls  group  Set  group  Sets  Group  Agg  Call  Binding  operands  group  Count  filter,is  Simple  check  Indicator  Aggregate  type  Matches  Inferred  Aggregate  Aggregate  is  Not  Grand  Total  no  Indicator  is  Predicate  Aggregate  copy  copy  get  Agg  Call  List  get  Named  Agg  Calls  get  Group  Count  get  Indicator  Count  get  Group  Set  get  Group  Sets  explain  Terms  estimate  Row  Count  compute  Self  Cost  derive  Row  Type  derive  Row  Type  all  Contain  is  Valid  type  Matches  Inferred  contains  Distinct  Call  get  Hints  get  Group  Type  induce  is  Rollup  get  Rollup  Agg  Call  Binding  get  Group  Count  has  Filter  get  Operand  Count  get  Operand  Type  new  Error,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
468,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
469,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
470,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
471,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
472,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
473,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
474,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,0,0
475,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Values,is  empty  j  is  empty  is  not  empty  tuples,Values  Values  is  Empty  is  Not  Empty  get  Tuples  get  Tuples  assert  Row  Type  derive  Row  Type  compute  Self  Cost  estimate  Row  Count  explain  Terms  average  Column  Sizes,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
476,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
477,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
478,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
479,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
480,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
481,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
482,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,0,0
483,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Project,exps  hints  Flags  anon  fields  boxed  none,Project  Project  Project  Project  copy  copy  is  Boxed  get  Child  Exps  accept  get  Projects  get  Named  Projects  get  Hints  get  Flags  is  Valid  compute  Self  Cost  count  Trivial  explain  Terms  get  Mapping  get  Mapping  get  Partial  Mapping  get  Permutation  get  Permutation  is  Mapping,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
484,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
485,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
486,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
487,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
488,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
489,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
490,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,0,0
491,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  build  Cheapest  Plan  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
492,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
493,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
494,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
495,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
496,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
497,get  Distinct  Row  Count,Rel  Node  Rel  Metadata  Query  Immutable  Bit  Set  Rex  Node,Double,,are  Columns  Definitely  Unique  multiply  get  Row  Count  get  Selectivity,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Distinct  Row  Count,source,Rel  Md  Distinct  Row  Count  get  Def  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count  get  Distinct  Row  Count,1,0
498,get  Percentage  Original  Rows,Aggregate  Rel  Metadata  Query,Double,,get  Percentage  Original  Rows  get  Input,Rel  Md  Percentage  Original  Rows,instance  source,Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,0,0
499,get  Percentage  Original  Rows,Aggregate  Rel  Metadata  Query,Double,,get  Percentage  Original  Rows  get  Input,Join,condition  variables  Set  hints  join  Type  join  Info,Join  Join  Join  get  Child  Exps  accept  get  Condition  get  Join  Type  is  Valid  compute  Self  Cost  estimate  Joined  Rows  estimate  Row  Count  get  Variables  Set  explain  Terms  derive  Row  Type  is  Semi  Join  Done  is  Semi  Join  get  System  Field  List  derive  Join  Row  Type  create  Join  Type  copy  copy  analyze  Condition  get  Hints  is  Join  Supported,Rel  Md  Percentage  Original  Rows,instance  source,Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,1,0
500,get  Percentage  Original  Rows,Aggregate  Rel  Metadata  Query,Double,,get  Percentage  Original  Rows  get  Input,Rel  Md  Percentage  Original  Rows,instance  source,Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
501,get  Percentage  Original  Rows,Aggregate  Rel  Metadata  Query,Double,,get  Percentage  Original  Rows  get  Input,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Cumulative  Cost  get  Non  Cumulative  Cost  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Percentage  Original  Rows,instance  source,Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,1,0
502,get  Cumulative  Cost,Rel  Node  Rel  Metadata  Query,Rel  Opt  Cost,,get  Non  Cumulative  Cost  get  Inputs  plus  get  Cumulative  Cost,Rel  Md  Percentage  Original  Rows,instance  source,Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,0,0
503,get  Cumulative  Cost,Rel  Node  Rel  Metadata  Query,Rel  Opt  Cost,,get  Non  Cumulative  Cost  get  Inputs  plus  get  Cumulative  Cost,Rel  Metadata  Query,empty  collation  Handler  column  Origin  Handler  expression  Lineage  Handler  table  References  Handler  column  Uniqueness  Handler  cumulative  Cost  Handler  distinct  Row  Count  Handler  distribution  Handler  explain  Visibility  Handler  max  Row  Count  Handler  min  Row  Count  Handler  memory  Handler  non  Cumulative  Cost  Handler  parallelism  Handler  percentage  Original  Rows  Handler  population  Size  Handler  predicates  Handler  all  Predicates  Handler  node  Types  Handler  row  Count  Handler  selectivity  Handler  size  Handler  unique  Keys  Handler,Rel  Metadata  Query  Rel  Metadata  Query  Rel  Metadata  Query  instance  get  Node  Types  get  Row  Count  get  Max  Row  Count  get  Min  Row  Count  get  Non  Cumulative  Cost  get  Percentage  Original  Rows  get  Column  Origins  get  Column  Origin  get  Expression  Lineage  get  Table  References  get  Table  Origin  get  Selectivity  get  Unique  Keys  get  Unique  Keys  are  Rows  Unique  are  Columns  Unique  are  Columns  Unique  collations  distribution  get  Population  Size  get  Average  Row  Size  get  Average  Column  Sizes  get  Average  Column  Sizes  Not  Null  is  Phase  Transition  split  Count  memory  cumulative  Memory  Within  Phase  cumulative  Memory  Within  Phase  Split  get  Distinct  Row  Count  get  Pulled  Up  Predicates  get  All  Predicates  is  Visible  In  Explain  get  Distribution  is  Valid  Rel  Node  Plan,Rel  Md  Percentage  Original  Rows,instance  source,Rel  Md  Percentage  Original  Rows  get  Def  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Percentage  Original  Rows  get  Cumulative  Cost  get  Non  Cumulative  Cost  quotient  For  Percentage,1,0
504,normalize,Rex  Builder  Rex  Simplify,Rex  Program,,,Rex  Program,exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter,Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  get  Partial  Mapping  copy  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref,Rex  Simplify,paranoid  rex  Builder  predicates  default  Unknown  As  predicate  Elimination  executor  strong  Case  Branch  cond  value  Safe  Rex  Visitor  safe  Ops  Comparison  ref  kind  literal  Is  Predicate  ref  kind,Rex  Simplify  Rex  Simplify  Rex  Simplify  Rex  Simplify  with  Unknown  As  False  with  Predicates  with  Paranoid  with  Predicate  Elimination  simplify  Preserving  Type  simplify  Preserving  Type  simplify  simplify  Unknown  As  False  simplify  Unknown  As  simplify  simplify  Generic  Node  simplify  Comparison  simplify  Comparison  simplify  Ands  simplify  Ands  simplify  List  simplify  And  Terms  simplify  Or  Terms  allowed  As  Predicate  During  Or  Simplification  simplify  Not  simplify  Unary  Minus  simplify  Unary  Plus  simplify  Is  simplify  Is  Predicate  simplify  Is  simplify  Is  Not  Null  simplify  Is  Null  validate  Strong  Policy  has  Custom  Nullability  Rules  simplify  Coalesce  simplify  Case  generate  Branch  same  Type  Or  Narrows  Nullability  Case  Branch  to  String  from  Case  Operands  to  Case  Operands  Safe  Rex  Visitor  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  is  Safe  Expression  simplify  Boolean  Case  simplify  Boolean  Case  Generic  simplify  And  simplify  And  simplify  And  simplify  And  For  Unknown  As  False  simplify  And  For  Unknown  As  False  simplify  Not  Equal  simplify  Using  Predicates  residue  simplify  Or  simplify  Or  simplify  Ors  ensure  Paranoid  Off  simplify  Ors  verify  simplify  Cast  simplify  Ceil  Floor  can  Roll  Up  remove  Nullability  Cast  process  Range  range  of  Comparison  of  of  Is  Predicate  of  is  Upper  Bound  is  Lower  Bound  simplify  Filter  Predicates  replace  Last,0,0
505,normalize,Rex  Builder  Rex  Simplify,Rex  Program,,,Rex  Simplify,paranoid  rex  Builder  predicates  default  Unknown  As  predicate  Elimination  executor  strong  Case  Branch  cond  value  Safe  Rex  Visitor  safe  Ops  Comparison  ref  kind  literal  Is  Predicate  ref  kind,Rex  Simplify  Rex  Simplify  Rex  Simplify  Rex  Simplify  with  Unknown  As  False  with  Predicates  with  Paranoid  with  Predicate  Elimination  simplify  Preserving  Type  simplify  Preserving  Type  simplify  simplify  Unknown  As  False  simplify  Unknown  As  simplify  simplify  Generic  Node  simplify  Comparison  simplify  Comparison  simplify  Ands  simplify  Ands  simplify  List  simplify  And  Terms  simplify  Or  Terms  allowed  As  Predicate  During  Or  Simplification  simplify  Not  simplify  Unary  Minus  simplify  Unary  Plus  simplify  Is  simplify  Is  Predicate  simplify  Is  simplify  Is  Not  Null  simplify  Is  Null  validate  Strong  Policy  has  Custom  Nullability  Rules  simplify  Coalesce  simplify  Case  generate  Branch  same  Type  Or  Narrows  Nullability  Case  Branch  to  String  from  Case  Operands  to  Case  Operands  Safe  Rex  Visitor  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  is  Safe  Expression  simplify  Boolean  Case  simplify  Boolean  Case  Generic  simplify  And  simplify  And  simplify  And  simplify  And  For  Unknown  As  False  simplify  And  For  Unknown  As  False  simplify  Not  Equal  simplify  Using  Predicates  residue  simplify  Or  simplify  Or  simplify  Ors  ensure  Paranoid  Off  simplify  Ors  verify  simplify  Cast  simplify  Ceil  Floor  can  Roll  Up  remove  Nullability  Cast  process  Range  range  of  Comparison  of  of  Is  Predicate  of  is  Upper  Bound  is  Lower  Bound  simplify  Filter  Predicates  replace  Last,Rex  Program,exprs  projects  condition  input  Row  Type  output  Row  Type  ref  Counts  Checker  internal  Expr  Type  List  Expansion  Shuttle  exprs  Constant  Finder  Marshaller  Reference  Counter,Rex  Program  get  Expr  List  get  Project  List  get  Named  Projects  size  get  get  Condition  create  create  create  to  String  explain  Calc  collect  Explain  Terms  collect  Explain  Terms  count  Trivial  get  Expr  Count  create  Identity  create  Identity  get  Input  Row  Type  contains  Aggs  get  Output  Row  Type  is  Valid  is  Null  expand  Local  Ref  split  get  Collations  deduce  Collations  projects  Identity  projects  Only  Identity  is  Trivial  get  Reference  Counts  is  Constant  gather  Expr  get  Source  Field  is  Permutation  get  Permutation  get  Correl  Variable  Names  visit  Correl  Variable  is  Normalized  normalize  get  Partial  Mapping  copy  Checker  visit  Local  Ref  Expansion  Shuttle  visit  Local  Ref  visit  Local  Ref  visit  Over  visit  Correl  Variable  Marshaller  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Call  visit  Over  visit  Correl  Variable  visit  Dynamic  Param  visit  Range  Ref  visit  Field  Access  Reference  Counter  visit  Local  Ref,1,0
506,apply,List  T,List  T,,mutate,Rex  Shuttle,,visit  Over  visit  Window  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  visit  Call  visit  Array  visit  List  visit  List  visit  Field  Collations  visit  Correl  Variable  visit  Field  Access  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Dynamic  Param  visit  Range  Ref  mutate  apply  apply,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
507,apply,List  T,List  T,,mutate,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rex  Shuttle,,visit  Over  visit  Window  visit  Sub  Query  visit  Table  Input  Ref  visit  Pattern  Field  Ref  visit  Call  visit  Array  visit  List  visit  List  visit  Field  Collations  visit  Correl  Variable  visit  Field  Access  visit  Input  Ref  visit  Local  Ref  visit  Literal  visit  Dynamic  Param  visit  Range  Ref  mutate  apply  apply,1,0
508,is  Boolean,Rex  Node,boolean,,get  Type  in  Boolean  Family,Rex  Transformer,root  rex  Builder  is  Parents  Count  transformable  Operators,Rex  Transformer  is  Nullable  is  Transformable  transform  Null  Semantics  transform  Null  Semantics,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
509,is  Boolean,Rex  Node,boolean,,get  Type  in  Boolean  Family,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rex  Transformer,root  rex  Builder  is  Parents  Count  transformable  Operators,Rex  Transformer  is  Nullable  is  Transformable  transform  Null  Semantics  transform  Null  Semantics,1,0
510,is  Nullable,Rex  Node,boolean,,is  Nullable  get  Type,Rex  Transformer,root  rex  Builder  is  Parents  Count  transformable  Operators,Rex  Transformer  is  Boolean  is  Transformable  transform  Null  Semantics  transform  Null  Semantics,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
511,is  Nullable,Rex  Node,boolean,,is  Nullable  get  Type,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rex  Transformer,root  rex  Builder  is  Parents  Count  transformable  Operators,Rex  Transformer  is  Boolean  is  Transformable  transform  Null  Semantics  transform  Null  Semantics,1,0
512,infer  Type  From  Validator,Sql  Case  Operator,Rel  Data  Type,,get  Call  get  Then  Operands  get  When  Operands  get  Type  Factory  size  get  List  get  derive  Type  get  Validator  get  Scope  get  get  Kind  is  Nullable  equals  Deep  get  get  Operand  List  create  Type  With  Nullability  add  is  Null  Literal  add  get  Else  Operand  add  derive  Type  get  Validator  get  Scope  get  Else  Operand  is  Null  Literal  add  least  Restrictive  is  Type  Coercion  Enabled  get  Type  Coercion  get  Validator  get  Wider  Type  For  case  When  Coercion  derive  Type  get  Validator  get  Scope  get  Call  new  Validation  Error  illegal  Mixing  Of  Types  get  Validator  set  Validated  Node  Type,Sql  Case  Operator,instance,Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  infer  Type  From  Operands  get  Operand  Count  Range  get  Syntax  create  Call  unparse,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled,0,0
513,infer  Type  From  Validator,Sql  Case  Operator,Rel  Data  Type,,get  Call  get  Then  Operands  get  When  Operands  get  Type  Factory  size  get  List  get  derive  Type  get  Validator  get  Scope  get  get  Kind  is  Nullable  equals  Deep  get  get  Operand  List  create  Type  With  Nullability  add  is  Null  Literal  add  get  Else  Operand  add  derive  Type  get  Validator  get  Scope  get  Else  Operand  is  Null  Literal  add  least  Restrictive  is  Type  Coercion  Enabled  get  Type  Coercion  get  Validator  get  Wider  Type  For  case  When  Coercion  derive  Type  get  Validator  get  Scope  get  Call  new  Validation  Error  illegal  Mixing  Of  Types  get  Validator  set  Validated  Node  Type,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled,Sql  Case  Operator,instance,Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  infer  Type  From  Operands  get  Operand  Count  Range  get  Syntax  create  Call  unparse,1,1
514,infer  Type  From  Operands,Sql  Operator  Binding,Rel  Data  Type,,,Sql  Case  Operator,instance,Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  get  Operand  Count  Range  get  Syntax  create  Call  unparse,Sql  Operator  Binding,type  Factory  sql  Operator,Sql  Operator  Binding  get  Group  Count  has  Filter  get  Operator  get  Type  Factory  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Operand  Monotonicity  collect  Operand  Types  get  size  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  allow  Alias  Unnest  Items,0,0
515,infer  Type  From  Operands,Sql  Operator  Binding,Rel  Data  Type,,,Sql  Operator  Binding,type  Factory  sql  Operator,Sql  Operator  Binding  get  Group  Count  has  Filter  get  Operator  get  Type  Factory  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Operand  Monotonicity  collect  Operand  Types  get  size  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  allow  Alias  Unnest  Items,Sql  Case  Operator,instance,Sql  Case  Operator  validate  Call  derive  Type  check  Operand  Types  infer  Return  Type  get  Operand  Count  Range  get  Syntax  create  Call  unparse,1,0
516,arg,Sql  Writer  int  int  int  Sql  Overlaps  Operator,void,,is  Call  To  operand  operand  keyword  sep  unparse  operand  sep  unparse  operand  sep  unparse  operand,Sql  Overlaps  Operator,,Sql  Overlaps  Operator  unparse  get  Operand  Count  Range  get  Allowed  Signatures  check  Operand  Types,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier,0,0
517,arg,Sql  Writer  int  int  int  Sql  Overlaps  Operator,void,,is  Call  To  operand  operand  keyword  sep  unparse  operand  sep  unparse  operand  sep  unparse  operand,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier,Sql  Overlaps  Operator,,Sql  Overlaps  Operator  unparse  get  Operand  Count  Range  get  Allowed  Signatures  check  Operand  Types,1,1
518,get  Enum  Value,Sql  Node,e,,get  Value,Sql  Json  Array  Function,,Sql  Json  Array  Function  get  Operand  Count  Range  check  Operand  Count  create  Call  get  Signature  Template  unparse,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
519,get  Enum  Value,Sql  Node,e,,get  Value,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Json  Array  Function,,Sql  Json  Array  Function  get  Operand  Count  Range  check  Operand  Count  create  Call  get  Signature  Template  unparse,1,0
520,get  Enum  Value,Sql  Node,e,,get  Value,Sql  Json  Query  Function,,Sql  Json  Query  Function  get  Signature  Template  unparse  create  Call,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
521,get  Enum  Value,Sql  Node,e,,get  Value,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Json  Query  Function,,Sql  Json  Query  Function  get  Signature  Template  unparse  create  Call,1,0
522,get  Enum  Value,Sql  Node,e,,get  Value,Sql  Json  Object  Function,,Sql  Json  Object  Function  get  Operand  Count  Range  check  Operand  Count  check  Operand  Types  create  Call  get  Signature  Template  unparse,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
523,get  Enum  Value,Sql  Node,e,,get  Value,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Json  Object  Function,,Sql  Json  Object  Function  get  Operand  Count  Range  check  Operand  Count  check  Operand  Types  create  Call  get  Signature  Template  unparse,1,0
524,arg  Types  Valid,Sql  Call  Binding,boolean,,get  Operand  Count  zip  operands  derive  Type  get  Validator  get  Scope  same  Named  Type,Sql  Literal  Chain  Operator,,Sql  Literal  Chain  Operator  check  Operand  Types  infer  Return  Type  get  Allowed  Signatures  validate  Call  unparse  concatenate  Operands,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,0,0
525,arg  Types  Valid,Sql  Call  Binding,boolean,,get  Operand  Count  zip  operands  derive  Type  get  Validator  get  Scope  same  Named  Type,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,Sql  Literal  Chain  Operator,,Sql  Literal  Chain  Operator  check  Operand  Types  infer  Return  Type  get  Allowed  Signatures  validate  Call  unparse  concatenate  Operands,1,0
530,coerce  Operands,Sql  Call  Binding  boolean,boolean,,,Composite  Operand  Type  Checker,range  Composition  allowed  Rules  composition  allowed  Signatures,Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  check  Without  Type  Coercion,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,0,0
531,coerce  Operands,Sql  Call  Binding  boolean,boolean,,,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,Composite  Operand  Type  Checker,range  Composition  allowed  Rules  composition  allowed  Signatures,Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  check  Without  Type  Coercion,1,0
532,check  Without  Type  Coercion,Sql  Call  Binding,boolean,,is  Type  Coercion  Enabled  check  Operand  Types  Without  Type  Coercion,Composite  Operand  Type  Checker,range  Composition  allowed  Rules  composition  allowed  Signatures,Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  coerce  Operands,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,0,0
533,check  Without  Type  Coercion,Sql  Call  Binding,boolean,,is  Type  Coercion  Enabled  check  Operand  Types  Without  Type  Coercion,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,Composite  Operand  Type  Checker,range  Composition  allowed  Rules  composition  allowed  Signatures,Composite  Operand  Type  Checker  is  Optional  get  Rules  get  Consistency  get  Allowed  Signatures  get  Operand  Count  Range  get  size  is  Valid  Count  get  Min  get  Max  min  Min  max  Max  check  Operand  Types  check  coerce  Operands,1,0
534,add  If,Sql  Node,Span,,add,Span,pos  List,Span  of  of  of  of  of  add  add  add  All  add  pos  end  clear,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
535,add  If,Sql  Node,Span,,add,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Span,pos  List,Span  of  of  of  of  of  add  add  add  All  add  pos  end  clear,1,0
536,end,Span,Sql  Parser  Pos,,pos  add,Span,pos  List,Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear,Sql  Abstract  Parser  Impl,sql  reserved  word  set  Expr  Context  accept  subquery  accept  nonquery  n  Dynamic  Params  original  Sql  warnings  Metadata  Impl  reserved  Function  Names  context  Variable  Names  non  Reserved  Key  Word  Set  token  Set  token  List  reserved  Words  sql  Reserved  Words,get  Sql  Reserved  Words  create  Call  create  Call  get  Metadata  normalize  Exception  get  Pos  Re  Init  parse  Sql  Expression  Eof  parse  Sql  Stmt  Eof  parse  Sql  Stmt  List  set  Tab  Size  set  Quoted  Casing  set  Unquoted  Casing  set  Identifier  Max  Length  set  Conformance  set  Original  Sql  get  Original  Sql  switch  To  is  Non  Reserved  Keyword  is  Context  Variable  Name  is  Reserved  Function  Name  is  Keyword  is  Reserved  Word  is  Sql  Reserved  Word  get  Jdbc  Keywords  get  Tokens  Metadata  Impl  init  List  virtual  Call  construct  Sql  Reserved  Word  List  get  Tokens  is  Sql  Reserved  Word  get  Jdbc  Keywords  is  Keyword  is  Non  Reserved  Keyword  is  Reserved  Function  Name  is  Context  Variable  Name  is  Reserved  Word,0,0
537,end,Span,Sql  Parser  Pos,,pos  add,Sql  Abstract  Parser  Impl,sql  reserved  word  set  Expr  Context  accept  subquery  accept  nonquery  n  Dynamic  Params  original  Sql  warnings  Metadata  Impl  reserved  Function  Names  context  Variable  Names  non  Reserved  Key  Word  Set  token  Set  token  List  reserved  Words  sql  Reserved  Words,get  Sql  Reserved  Words  create  Call  create  Call  get  Metadata  normalize  Exception  get  Pos  Re  Init  parse  Sql  Expression  Eof  parse  Sql  Stmt  Eof  parse  Sql  Stmt  List  set  Tab  Size  set  Quoted  Casing  set  Unquoted  Casing  set  Identifier  Max  Length  set  Conformance  set  Original  Sql  get  Original  Sql  switch  To  is  Non  Reserved  Keyword  is  Context  Variable  Name  is  Reserved  Function  Name  is  Keyword  is  Reserved  Word  is  Sql  Reserved  Word  get  Jdbc  Keywords  get  Tokens  Metadata  Impl  init  List  virtual  Call  construct  Sql  Reserved  Word  List  get  Tokens  is  Sql  Reserved  Word  get  Jdbc  Keywords  is  Keyword  is  Non  Reserved  Keyword  is  Reserved  Function  Name  is  Context  Variable  Name  is  Reserved  Word,Span,pos  List,Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear,1,1
538,end,Span,Sql  Parser  Pos,,pos  add,Span,pos  List,Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
539,end,Span,Sql  Parser  Pos,,pos  add,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Span,pos  List,Span  of  of  of  of  of  add  add  If  add  add  All  add  pos  clear,1,0
540,set  Format  Options,Sql  Pretty  Writer,void,,set  Always  Use  Parentheses  is  Always  Use  Parentheses  set  Case  Clauses  On  New  Lines  is  Case  Clauses  On  New  Lines  set  Clause  Starts  Line  is  Clause  Starts  Line  set  Keywords  Lower  Case  is  Keywords  Lowercase  set  Quote  All  Identifiers  is  Quote  All  Identifiers  set  Select  List  Items  On  Separate  Lines  is  Select  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Window  Newline  is  Window  Declaration  Starts  Line  set  Window  Decl  List  Newline  is  Window  List  Items  On  Separate  Lines  set  Indentation  get  Indentation  set  Line  Length  get  Line  Length,Sql  Pretty  Writer,logger  default  bean  nl  dialect  buf  list  Stack  dynamic  Parameters  frame  need  Whitespace  next  Whitespace  config  bean  current  Indent  line  Start  Frame  Impl  frame  Type  keyword  open  close  left  extra  Indent  sep  Indent  item  Count  newline  Before  Sep  newline  After  Sep  newline  Before  Close  newline  After  Close  newline  After  Open  chop  Limit  line  Folding  Save  buf  Length  Bean  o  getter  Methods  setter  Methods,Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  config  set  Case  Clauses  On  New  Lines  set  Sub  Query  Style  set  Window  Newline  set  Window  Decl  List  Newline  get  Indentation  is  Always  Use  Parentheses  in  Query  is  Quote  All  Identifiers  is  Clause  Starts  Line  is  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  is  Select  List  Extra  Indent  Flag  is  Keywords  Lower  Case  get  Line  Length  reset  Settings  reset  get  Bean  set  Indentation  describe  set  Settings  set  Clause  Starts  Line  set  Select  List  Items  On  Separate  Lines  set  Select  List  Extra  Indent  Flag  set  Keywords  Lower  Case  set  Where  List  Items  On  Separate  Lines  set  Always  Use  Parentheses  newline  And  Indent  newline  And  Indent  indent  set  Quote  All  Identifiers  create  List  Frame  before  before  sep  fold  f  start  List  end  List  format  to  String  to  Sql  String  get  Dialect  literal  keyword  maybe  Whitespace  need  Whitespace  Before  need  Whitespace  After  white  Space  column  too  Long  print  print  identifier  dynamic  Param  fetch  Offset  top  N  start  Fun  Call  end  Fun  Call  start  List  start  List  start  List  list  list  sep  sep  set  Need  Whitespace  set  Line  Length  Frame  Impl  before  after  sep  extra  Indent  list  list  Save  restore  Bean  strip  Prefix  set  get  get  Property  Names,Sql  Format  Options,always  Use  Parentheses  case  Clauses  On  New  Lines  clause  Starts  Line  keywords  Lowercase  quote  All  Identifiers  select  List  Items  On  Separate  Lines  where  List  Items  On  Separate  Lines  window  Declaration  Starts  Line  window  List  Items  On  Separate  Lines  indentation  line  Length,Sql  Format  Options  Sql  Format  Options  is  Always  Use  Parentheses  set  Always  Use  Parentheses  is  Case  Clauses  On  New  Lines  set  Case  Clauses  On  New  Lines  is  Clause  Starts  Line  set  Clause  Starts  Line  is  Keywords  Lowercase  set  Keywords  Lowercase  is  Quote  All  Identifiers  set  Quote  All  Identifiers  is  Select  List  Items  On  Separate  Lines  set  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Window  Declaration  Starts  Line  set  Window  Declaration  Starts  Line  is  Window  List  Items  On  Separate  Lines  set  Window  List  Items  On  Separate  Lines  get  Line  Length  set  Line  Length  get  Indentation  set  Indentation,0,0
541,set  Format  Options,Sql  Pretty  Writer,void,,set  Always  Use  Parentheses  is  Always  Use  Parentheses  set  Case  Clauses  On  New  Lines  is  Case  Clauses  On  New  Lines  set  Clause  Starts  Line  is  Clause  Starts  Line  set  Keywords  Lower  Case  is  Keywords  Lowercase  set  Quote  All  Identifiers  is  Quote  All  Identifiers  set  Select  List  Items  On  Separate  Lines  is  Select  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Window  Newline  is  Window  Declaration  Starts  Line  set  Window  Decl  List  Newline  is  Window  List  Items  On  Separate  Lines  set  Indentation  get  Indentation  set  Line  Length  get  Line  Length,Sql  Format  Options,always  Use  Parentheses  case  Clauses  On  New  Lines  clause  Starts  Line  keywords  Lowercase  quote  All  Identifiers  select  List  Items  On  Separate  Lines  where  List  Items  On  Separate  Lines  window  Declaration  Starts  Line  window  List  Items  On  Separate  Lines  indentation  line  Length,Sql  Format  Options  Sql  Format  Options  is  Always  Use  Parentheses  set  Always  Use  Parentheses  is  Case  Clauses  On  New  Lines  set  Case  Clauses  On  New  Lines  is  Clause  Starts  Line  set  Clause  Starts  Line  is  Keywords  Lowercase  set  Keywords  Lowercase  is  Quote  All  Identifiers  set  Quote  All  Identifiers  is  Select  List  Items  On  Separate  Lines  set  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  set  Where  List  Items  On  Separate  Lines  is  Window  Declaration  Starts  Line  set  Window  Declaration  Starts  Line  is  Window  List  Items  On  Separate  Lines  set  Window  List  Items  On  Separate  Lines  get  Line  Length  set  Line  Length  get  Indentation  set  Indentation,Sql  Pretty  Writer,logger  default  bean  nl  dialect  buf  list  Stack  dynamic  Parameters  frame  need  Whitespace  next  Whitespace  config  bean  current  Indent  line  Start  Frame  Impl  frame  Type  keyword  open  close  left  extra  Indent  sep  Indent  item  Count  newline  Before  Sep  newline  After  Sep  newline  Before  Close  newline  After  Close  newline  After  Open  chop  Limit  line  Folding  Save  buf  Length  Bean  o  getter  Methods  setter  Methods,Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  Sql  Pretty  Writer  config  set  Case  Clauses  On  New  Lines  set  Sub  Query  Style  set  Window  Newline  set  Window  Decl  List  Newline  get  Indentation  is  Always  Use  Parentheses  in  Query  is  Quote  All  Identifiers  is  Clause  Starts  Line  is  Select  List  Items  On  Separate  Lines  is  Where  List  Items  On  Separate  Lines  is  Select  List  Extra  Indent  Flag  is  Keywords  Lower  Case  get  Line  Length  reset  Settings  reset  get  Bean  set  Indentation  describe  set  Settings  set  Clause  Starts  Line  set  Select  List  Items  On  Separate  Lines  set  Select  List  Extra  Indent  Flag  set  Keywords  Lower  Case  set  Where  List  Items  On  Separate  Lines  set  Always  Use  Parentheses  newline  And  Indent  newline  And  Indent  indent  set  Quote  All  Identifiers  create  List  Frame  before  before  sep  fold  f  start  List  end  List  format  to  String  to  Sql  String  get  Dialect  literal  keyword  maybe  Whitespace  need  Whitespace  Before  need  Whitespace  After  white  Space  column  too  Long  print  print  identifier  dynamic  Param  fetch  Offset  top  N  start  Fun  Call  end  Fun  Call  start  List  start  List  start  List  list  list  sep  sep  set  Need  Whitespace  set  Line  Length  Frame  Impl  before  after  sep  extra  Indent  list  list  Save  restore  Bean  strip  Prefix  set  get  get  Property  Names,1,1
542,unparse  Sql  Interval  Literal  Mssql,Sql  Writer  int  Mssql  Sql  Dialect,void,,get  Value  unparse  Sql  Interval  Qualifier  get  Interval  Qualifier  sep  get  Sign  print  literal  to  String  get  Value,Mssql  Sql  Dialect,default  context  default  mssql  substring  top,Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  unparse  Floor  With  Unit,Sql  Interval  Literal,Interval  Value  interval  Qualifier  interval  Str  sign,Sql  Interval  Literal  Sql  Interval  Literal  clone  unparse  signum  Interval  Value  equals  hash  Code  get  Interval  Qualifier  get  Interval  Literal  get  Sign  signum  to  String,0,0
543,unparse  Sql  Interval  Literal  Mssql,Sql  Writer  int  Mssql  Sql  Dialect,void,,get  Value  unparse  Sql  Interval  Qualifier  get  Interval  Qualifier  sep  get  Sign  print  literal  to  String  get  Value,Sql  Interval  Literal,Interval  Value  interval  Qualifier  interval  Str  sign,Sql  Interval  Literal  Sql  Interval  Literal  clone  unparse  signum  Interval  Value  equals  hash  Code  get  Interval  Qualifier  get  Interval  Literal  get  Sign  signum  to  String,Mssql  Sql  Dialect,default  context  default  mssql  substring  top,Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  unparse  Floor  With  Unit,1,1
544,unparse  Floor  With  Unit,Sql  Writer  Sql  Call  int  String,void,,print  start  List  print  unparse  operand  print  length  print  end  List,Mssql  Sql  Dialect,default  context  default  mssql  substring  top,Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
545,unparse  Floor  With  Unit,Sql  Writer  Sql  Call  int  String,void,,print  start  List  print  unparse  operand  print  length  print  end  List,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Mssql  Sql  Dialect,default  context  default  mssql  substring  top,Mssql  Sql  Dialect  emulate  Null  Direction  unparse  Offset  Fetch  unparse  Top  N  unparse  Date  Time  Literal  unparse  Call  supports  Char  Set  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  unparse  Floor  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal,1,0
546,unparse  Floor,Sql  Writer  Sql  Call,void,,operand  get  Value  print  start  List  print  unparse  operand  print  end  List  print  start  List  unparse  operand  sep  print  end  List,Mysql  Sql  Dialect,mysql  type  system  default  context  default  isnull  function  major  Version,get  Max  Precision  Mysql  Sql  Dialect  supports  Char  Set  requires  Alias  For  From  Items  supports  Aliased  Values  unparse  Offset  Fetch  emulate  Null  Direction  supports  Aggregate  Function  supports  Nested  Aggregations  supports  Group  By  With  Rollup  get  Calendar  Policy  get  Cast  Spec  rewrite  Single  Value  Expr  unparse  Call  unparse  Sql  Interval  Qualifier  validate,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
547,unparse  Floor,Sql  Writer  Sql  Call,void,,operand  get  Value  print  start  List  print  unparse  operand  print  end  List  print  start  List  unparse  operand  sep  print  end  List,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Mysql  Sql  Dialect,mysql  type  system  default  context  default  isnull  function  major  Version,get  Max  Precision  Mysql  Sql  Dialect  supports  Char  Set  requires  Alias  For  From  Items  supports  Aliased  Values  unparse  Offset  Fetch  emulate  Null  Direction  supports  Aggregate  Function  supports  Nested  Aggregations  supports  Group  By  With  Rollup  get  Calendar  Policy  get  Cast  Spec  rewrite  Single  Value  Expr  unparse  Call  unparse  Sql  Interval  Qualifier  validate,1,0
548,unparse  Trim,Sql  Writer  Sql  Call  int  int,void,,operand  operand  get  Value  As  get  Name  get  Operator  start  Fun  Call  unparse  operand  matches  to  Value  literal  unparse  operand  end  Fun  Call,Big  Query  Sql  Dialect,default  context  default  reserved  keywords  identifier  regex  union  distinct  except  distinct  intersect  distinct,Big  Query  Sql  Dialect  identifier  Needs  Quote  emulate  Null  Direction  supports  Implicit  Type  Coercion  supports  Nested  Aggregations  unparse  Offset  Fetch  unparse  Call  unparse  Sql  Interval  Literal  unparse  Sql  Interval  Qualifier  validate  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
549,unparse  Trim,Sql  Writer  Sql  Call  int  int,void,,operand  operand  get  Value  As  get  Name  get  Operator  start  Fun  Call  unparse  operand  matches  to  Value  literal  unparse  operand  end  Fun  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Big  Query  Sql  Dialect,default  context  default  reserved  keywords  identifier  regex  union  distinct  except  distinct  intersect  distinct,Big  Query  Sql  Dialect  identifier  Needs  Quote  emulate  Null  Direction  supports  Implicit  Type  Coercion  supports  Nested  Aggregations  unparse  Offset  Fetch  unparse  Call  unparse  Sql  Interval  Literal  unparse  Sql  Interval  Qualifier  validate  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name,1,0
554,unparse  Floor,Sql  Writer  Sql  Call,void,,operand  get  Value  print  start  List  unparse  operand  end  List,Click  House  Sql  Dialect,default  context  default  clickhouse  substring,unparse  Click  House  Sql  Dialect  supports  Char  Set  supports  Nested  Aggregations  supports  Window  Functions  get  Calendar  Policy  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name  unparse  unparse  Date  Time  Literal  unparse  Offset  Fetch  unparse  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
555,unparse  Floor,Sql  Writer  Sql  Call,void,,operand  get  Value  print  start  List  unparse  operand  end  List,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Click  House  Sql  Dialect,default  context  default  clickhouse  substring,unparse  Click  House  Sql  Dialect  supports  Char  Set  supports  Nested  Aggregations  supports  Window  Functions  get  Calendar  Policy  get  Cast  Spec  create  Sql  Data  Type  Spec  By  Name  unparse  unparse  Date  Time  Literal  unparse  Offset  Fetch  unparse  Call,1,0
556,cast  To,Sql  Node  Rel  Data  Type,Sql  Node,,create  Call  with  Nullable  convert  Type  To  Spec  is  Nullable,Abstract  Type  Coercion,validator  factory,Abstract  Type  Coercion  coerce  Operand  Type  coerce  Operands  Type  coerce  Column  Type  sync  Attributes  need  To  Cast  update  Inferred  Type  update  Inferred  Column  Type  get  Tightest  Common  Type  promote  To  Var  Char  common  Type  For  Binary  Comparison  get  Wider  Type  For  Two  get  Wider  Type  For  Decimal  get  Wider  Type  For  partition  By  Character  can  Implicit  Type  Cast  implicit  Cast,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
557,cast  To,Sql  Node  Rel  Data  Type,Sql  Node,,create  Call  with  Nullable  convert  Type  To  Spec  is  Nullable,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Abstract  Type  Coercion,validator  factory,Abstract  Type  Coercion  coerce  Operand  Type  coerce  Operands  Type  coerce  Column  Type  sync  Attributes  need  To  Cast  update  Inferred  Type  update  Inferred  Column  Type  get  Tightest  Common  Type  promote  To  Var  Char  common  Type  For  Binary  Comparison  get  Wider  Type  For  Two  get  Wider  Type  For  Decimal  get  Wider  Type  For  partition  By  Character  can  Implicit  Type  Cast  implicit  Cast,1,0
558,using  Names,Sql  Validator  Impl,List  String,,get  Condition  Type  builder  create  Set  name  Matcher  get  Catalog  Reader  get  Condition  get  Simple  add  add  build  is  Natural  get  Validated  Node  Type  get  Left  get  Validated  Node  Type  get  Right  derive  Natural  Join  Column  List  name  Matcher  get  Catalog  Reader  create,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Join,operator  left  natural  join  Type  right  condition  Type  condition  Sql  Join  Operator  frame  type,Sql  Join  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Condition  get  Condition  Type  get  Condition  Type  Node  get  Join  Type  get  Join  Type  Node  get  Left  set  Left  is  Natural  is  Natural  Node  get  Right  set  Right  Sql  Join  Operator  get  Syntax  create  Call  unparse,0,0
559,using  Names,Sql  Validator  Impl,List  String,,get  Condition  Type  builder  create  Set  name  Matcher  get  Catalog  Reader  get  Condition  get  Simple  add  add  build  is  Natural  get  Validated  Node  Type  get  Left  get  Validated  Node  Type  get  Right  derive  Natural  Join  Column  List  name  Matcher  get  Catalog  Reader  create,Sql  Join,operator  left  natural  join  Type  right  condition  Type  condition  Sql  Join  Operator  frame  type,Sql  Join  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Condition  get  Condition  Type  get  Condition  Type  Node  get  Join  Type  get  Join  Type  Node  get  Left  set  Left  is  Natural  is  Natural  Node  get  Right  set  Right  Sql  Join  Operator  get  Syntax  create  Call  unparse,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,1
560,maybe  Cast,Sql  Node  Rel  Data  Type  Rel  Data  Type,Sql  Node,,equal  Sans  Nullability  create  Call  convert  Type  To  Spec,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
561,maybe  Cast,Sql  Node  Rel  Data  Type  Rel  Data  Type,Sql  Node,,equal  Sans  Nullability  create  Call  convert  Type  To  Spec,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
562,get  Namespace,Sql  Node  Sql  Validator  Scope,Sql  Validator  Namespace,,get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Delegating  Scope,parent  validator,Delegating  Scope  add  Child  resolve  resolve  In  Namespace  add  Column  Names  find  All  Column  Names  find  Aliases  find  Qualifying  Table  Name  find  Qualifying  Table  Names  resolve  Column  nullify  Type  get  Table  Namespace  resolve  Table  get  Operand  Scope  get  Validator  fully  Qualify  validate  Expr  lookup  Window  get  Monotonicity  get  Order  List  has  Ambiguous  Field  get  Parent,0,0
563,get  Namespace,Sql  Node  Sql  Validator  Scope,Sql  Validator  Namespace,,get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace,Delegating  Scope,parent  validator,Delegating  Scope  add  Child  resolve  resolve  In  Namespace  add  Column  Names  find  All  Column  Names  find  Aliases  find  Qualifying  Table  Name  find  Qualifying  Table  Names  resolve  Column  nullify  Type  get  Table  Namespace  resolve  Table  get  Operand  Scope  get  Validator  fully  Qualify  validate  Expr  lookup  Window  get  Monotonicity  get  Order  List  has  Ambiguous  Field  get  Parent,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
564,get  Namespace,Sql  Node  Sql  Validator  Scope,Sql  Validator  Namespace,,get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,0,0
565,get  Namespace,Sql  Node  Sql  Validator  Scope,Sql  Validator  Namespace,,get  Parent  get  Namespace  get  Kind  get  Operator  get  Namespace  operand  get  get  Operand  List  get  Kind  operand  get  Namespace  get  get  Operand  List  get  Kind  get  Namespace  get  Namespace,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
566,handle  Offset  Fetch,Sql  Node  Sql  Node,void,,set  Validated  Node  Type  create  Sql  Type  set  Validated  Node  Type  create  Sql  Type,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
567,handle  Offset  Fetch,Sql  Node  Sql  Node,void,,set  Validated  Node  Type  create  Sql  Type  set  Validated  Node  Type  create  Sql  Type,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
568,rewrite  Merge,Sql  Merge,void,,get  Update  Call  clone  get  Select  List  get  Source  Select  add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Source  Table  Ref  get  Insert  Call  clone  create  Boolean  symbol  symbol  get  Condition  set  Source  Select  get  Source  operand  get  Operand  List  clone  set  Source,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Merge,operator  target  Table  condition  source  update  Call  insert  Call  source  Select  alias,Sql  Merge  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Source  Table  Ref  set  Source  Table  Ref  get  Update  Call  get  Insert  Call  get  Condition  get  Source  Select  set  Source  Select  unparse  validate,0,0
569,rewrite  Merge,Sql  Merge,void,,get  Update  Call  clone  get  Select  List  get  Source  Select  add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Source  Table  Ref  get  Insert  Call  clone  create  Boolean  symbol  symbol  get  Condition  set  Source  Select  get  Source  operand  get  Operand  List  clone  set  Source,Sql  Merge,operator  target  Table  condition  source  update  Call  insert  Call  source  Select  alias,Sql  Merge  get  Operator  get  Kind  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Source  Table  Ref  set  Source  Table  Ref  get  Update  Call  get  Insert  Call  get  Condition  get  Source  Select  set  Source  Select  unparse  validate,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
570,create  Source  Select  For  Update,Sql  Update,Sql  Select,,add  star  get  Source  Expression  List  derive  Alias  From  Ordinal  add  add  Alias  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Update,operator  target  Table  target  Column  List  source  Expression  List  condition  source  Select  alias,Sql  Update  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  set  Alias  get  Target  Column  List  get  Source  Expression  List  get  Condition  get  Source  Select  set  Source  Select  unparse  validate,0,0
571,create  Source  Select  For  Update,Sql  Update,Sql  Select,,add  star  get  Source  Expression  List  derive  Alias  From  Ordinal  add  add  Alias  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition,Sql  Update,operator  target  Table  target  Column  List  source  Expression  List  condition  source  Select  alias,Sql  Update  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  set  Alias  get  Target  Column  List  get  Source  Expression  List  get  Condition  get  Source  Select  set  Source  Select  unparse  validate,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
572,create  Source  Select  For  Delete,Sql  Delete,Sql  Select,,add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Delete,operator  target  Table  condition  source  Select  alias,Sql  Delete  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Condition  get  Source  Select  unparse  validate  set  Source  Select,0,0
573,create  Source  Select  For  Delete,Sql  Delete,Sql  Select,,add  star  get  Target  Table  get  Alias  add  Alias  get  Simple  get  Alias  get  Condition,Sql  Delete,operator  target  Table  condition  source  Select  alias,Sql  Delete  get  Kind  get  Operator  get  Operand  List  set  Operand  get  Target  Table  get  Alias  get  Condition  get  Source  Select  unparse  validate  set  Source  Select,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
574,get  Table  Constructor  Row  Type,Sql  Call  Sql  Validator  Scope,Rel  Data  Type,,,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
575,get  Table  Constructor  Row  Type,Sql  Call  Sql  Validator  Scope,Rel  Data  Type,,,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
576,add  To  Select  List,List  Sql  Node  Set  String  List  Map  Entry  String  Rel  Data  Type  Sql  Node  Select  Scope  boolean,void,,get  Alias  uniquify  equals  add  Alias  add  of  derive  Type  add,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Select  Scope,select  window  Names  expanded  Select  List  order  List  window  Parent,Select  Scope  get  Table  get  Node  lookup  Window  get  Monotonicity  get  Order  List  add  Window  Name  existing  Window  Name  get  Expanded  Select  List  set  Expanded  Select  List,0,0
577,add  To  Select  List,List  Sql  Node  Set  String  List  Map  Entry  String  Rel  Data  Type  Sql  Node  Select  Scope  boolean,void,,get  Alias  uniquify  equals  add  Alias  add  of  derive  Type  add,Select  Scope,select  window  Names  expanded  Select  List  order  List  window  Parent,Select  Scope  get  Table  get  Node  lookup  Window  get  Monotonicity  get  Order  List  add  Window  Name  existing  Window  Name  get  Expanded  Select  List  set  Expanded  Select  List,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
578,validate  Literal  As  Double,Sql  Literal,void,,get  Value  double  Value  is  Infinite  is  Na  N  new  Validation  Error  number  Literal  Out  Of  Range  to  Scientific  Notation,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Literal,type  Name  value,Sql  Literal  get  Type  Name  value  Matches  Type  clone  get  Kind  get  Value  get  Value  As  symbolvalue  symbol  Value  boolean  Value  sample  Value  value  string  Value  unchain  to  Value  validate  accept  equals  Deep  get  Monotonicity  create  Null  create  Boolean  create  Unknown  create  Symbol  create  Sample  equals  hash  Code  int  Value  long  Value  signum  big  Decimal  Value  get  String  Value  unparse  create  Sql  Type  create  Date  create  Date  create  Timestamp  create  Timestamp  create  Time  create  Time  create  Interval  create  Negative  create  Exact  Numeric  create  Approx  Numeric  create  Binary  String  create  Binary  String  create  Char  String  create  Char  String  unescape  Unicode  name  ordinal,0,0
579,validate  Literal  As  Double,Sql  Literal,void,,get  Value  double  Value  is  Infinite  is  Na  N  new  Validation  Error  number  Literal  Out  Of  Range  to  Scientific  Notation,Sql  Literal,type  Name  value,Sql  Literal  get  Type  Name  value  Matches  Type  clone  get  Kind  get  Value  get  Value  As  symbolvalue  symbol  Value  boolean  Value  sample  Value  value  string  Value  unchain  to  Value  validate  accept  equals  Deep  get  Monotonicity  create  Null  create  Boolean  create  Unknown  create  Symbol  create  Sample  equals  hash  Code  int  Value  long  Value  signum  big  Decimal  Value  get  String  Value  unparse  create  Sql  Type  create  Date  create  Date  create  Timestamp  create  Timestamp  create  Time  create  Time  create  Interval  create  Negative  create  Exact  Numeric  create  Approx  Numeric  create  Binary  String  create  Binary  String  create  Char  String  create  Char  String  unescape  Unicode  name  ordinal,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
580,validate  Unnest,Sql  Call  Sql  Validator  Scope  Rel  Data  Type,void,,operand  Count  expand  operand  set  Operand  validate  Query,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
581,validate  Unnest,Sql  Call  Sql  Validator  Scope  Rel  Data  Type,void,,operand  Count  expand  operand  set  Operand  validate  Query,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
582,validate  No  Aggs,Agg  Finder  Sql  Node  String,void,,find  Agg  get  Operator  new  Validation  Error  windowed  Aggregate  Illegal  In  Clause  is  Group  is  Group  Auxiliary  new  Validation  Error  group  Function  Must  Appear  In  Group  By  Clause  get  Name  new  Validation  Error  aggregate  Illegal  In  Clause,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
583,validate  No  Aggs,Agg  Finder  Sql  Node  String,void,,find  Agg  get  Operator  new  Validation  Error  windowed  Aggregate  Illegal  In  Clause  is  Group  is  Group  Auxiliary  new  Validation  Error  group  Function  Must  Appear  In  Group  By  Clause  get  Name  new  Validation  Error  aggregate  Illegal  In  Clause,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
584,validate  Using  Col,Sql  Identifier  Sql  Node,Rel  Data  Type,,size  get  get  Namespace  get  Row  Type  name  Matcher  field  frequency  get  Field  Names  new  Validation  Error  column  In  Using  Not  Unique  to  String  get  Type  new  Validation  Error  column  Not  Found  to  String,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,0,0
585,validate  Using  Col,Sql  Identifier  Sql  Node,Rel  Data  Type,,size  get  get  Namespace  get  Row  Type  name  Matcher  field  frequency  get  Field  Names  new  Validation  Error  column  In  Using  Not  Unique  to  String  get  Type  new  Validation  Error  column  Not  Found  to  String,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
586,validate  Using  Col,Sql  Identifier  Sql  Node,Rel  Data  Type,,size  get  get  Namespace  get  Row  Type  name  Matcher  field  frequency  get  Field  Names  new  Validation  Error  column  In  Using  Not  Unique  to  String  get  Type  new  Validation  Error  column  Not  Found  to  String,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
587,validate  Using  Col,Sql  Identifier  Sql  Node,Rel  Data  Type,,size  get  get  Namespace  get  Row  Type  name  Matcher  field  frequency  get  Field  Names  new  Validation  Error  column  In  Using  Not  Unique  to  String  get  Type  new  Validation  Error  column  Not  Found  to  String,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
588,get  Window  In  Over,Sql  Node,Sql  Window,,get  Kind  get  get  Operand  List,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
589,get  Window  In  Over,Sql  Node,Sql  Window,,get  Kind  get  get  Operand  List,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
590,find  Table  Column  Pair,Sql  Identifier  Sql  Validator  Scope,Pair  String,,make  Nullary  Call  fully  Qualify  size  get  size  last,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,0,0
591,find  Table  Column  Pair,Sql  Identifier  Sql  Validator  Scope,Pair  String,,make  Nullary  Call  fully  Qualify  size  get  size  last,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
592,should  Check  For  Roll  Up,Sql  Node,boolean,,get  Kind  strip  As,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
593,should  Check  For  Roll  Up,Sql  Node,boolean,,get  Kind  strip  As,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
594,validate  Window  Clause,Sql  Select,void,,,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Select,from  operand  where  operand  having  operand  keyword  List  select  List  from  where  group  By  having  window  Decls  order  By  offset  fetch  hints,Sql  Select  get  Operator  get  Kind  get  Operand  List  set  Operand  is  Distinct  get  Modifier  Node  get  From  set  From  get  Group  set  Group  By  get  Having  set  Having  get  Select  List  set  Select  List  get  Where  set  Where  get  Window  List  get  Order  List  set  Order  By  get  Offset  set  Offset  get  Fetch  set  Fetch  set  Hints  get  Hints  has  Hints  validate  unparse  has  Order  By  has  Where,0,0
595,validate  Window  Clause,Sql  Select,void,,,Sql  Select,from  operand  where  operand  having  operand  keyword  List  select  List  from  where  group  By  having  window  Decls  order  By  offset  fetch  hints,Sql  Select  get  Operator  get  Kind  get  Operand  List  set  Operand  is  Distinct  get  Modifier  Node  get  From  set  From  get  Group  set  Group  By  get  Having  set  Having  get  Select  List  set  Select  List  get  Where  set  Where  get  Window  List  get  Order  List  set  Order  By  get  Offset  set  Offset  get  Fetch  set  Fetch  set  Hints  get  Hints  has  Hints  validate  unparse  has  Order  By  has  Where,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
596,validate  Group  By  Item,Sql  Select  Sql  Node,void,,get  Group  Scope  validate  Expr,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Select,from  operand  where  operand  having  operand  keyword  List  select  List  from  where  group  By  having  window  Decls  order  By  offset  fetch  hints,Sql  Select  get  Operator  get  Kind  get  Operand  List  set  Operand  is  Distinct  get  Modifier  Node  get  From  set  From  get  Group  set  Group  By  get  Having  set  Having  get  Select  List  set  Select  List  get  Where  set  Where  get  Window  List  get  Order  List  set  Order  By  get  Offset  set  Offset  get  Fetch  set  Fetch  set  Hints  get  Hints  has  Hints  validate  unparse  has  Order  By  has  Where,0,0
597,validate  Group  By  Item,Sql  Select  Sql  Node,void,,get  Group  Scope  validate  Expr,Sql  Select,from  operand  where  operand  having  operand  keyword  List  select  List  from  where  group  By  having  window  Decls  order  By  offset  fetch  hints,Sql  Select  get  Operator  get  Kind  get  Operand  List  set  Operand  is  Distinct  get  Modifier  Node  get  From  set  From  get  Group  set  Group  By  get  Having  set  Having  get  Select  List  set  Select  List  get  Where  set  Where  get  Window  List  get  Order  List  set  Order  By  get  Offset  set  Offset  get  Fetch  set  Fetch  set  Hints  get  Hints  has  Hints  validate  unparse  has  Order  By  has  Where,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
598,validate  Group  By  Item,Sql  Select  Sql  Node,void,,get  Group  Scope  validate  Expr,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
599,validate  Group  By  Item,Sql  Select  Sql  Node,void,,get  Group  Scope  validate  Expr,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
600,validate  Expr,Sql  Node  Sql  Validator  Scope,void,,get  Operator  is  Aggregator  requires  Over  new  Validation  Error  absent  Over  Clause  validate  Expr  validate  Expr,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
601,validate  Expr,Sql  Node  Sql  Validator  Scope,void,,get  Operator  is  Aggregator  requires  Over  new  Validation  Error  absent  Over  Clause  validate  Expr  validate  Expr,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
602,handle  Scalar  Sub  Query,Sql  Select  Sql  Select  List  Sql  Node  Set  String  List  Map  Entry  String  Rel  Data  Type,void,,,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Select,from  operand  where  operand  having  operand  keyword  List  select  List  from  where  group  By  having  window  Decls  order  By  offset  fetch  hints,Sql  Select  get  Operator  get  Kind  get  Operand  List  set  Operand  is  Distinct  get  Modifier  Node  get  From  set  From  get  Group  set  Group  By  get  Having  set  Having  get  Select  List  set  Select  List  get  Where  set  Where  get  Window  List  get  Order  List  set  Order  By  get  Offset  set  Offset  get  Fetch  set  Fetch  set  Hints  get  Hints  has  Hints  validate  unparse  has  Order  By  has  Where,0,0
603,handle  Scalar  Sub  Query,Sql  Select  Sql  Select  List  Sql  Node  Set  String  List  Map  Entry  String  Rel  Data  Type,void,,,Sql  Select,from  operand  where  operand  having  operand  keyword  List  select  List  from  where  group  By  having  window  Decls  order  By  offset  fetch  hints,Sql  Select  get  Operator  get  Kind  get  Operand  List  set  Operand  is  Distinct  get  Modifier  Node  get  From  set  From  get  Group  set  Group  By  get  Having  set  Having  get  Select  List  set  Select  List  get  Where  set  Where  get  Window  List  get  Order  List  set  Order  By  get  Offset  set  Offset  get  Fetch  set  Fetch  set  Hints  get  Hints  has  Hints  validate  unparse  has  Order  By  has  Where,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
604,create  Target  Row  Type,Sql  Validator  Table  Sql  Node  List  boolean,Rel  Data  Type,,get  Row  Type  get  Field  List  add  of  derive  Alias  From  Ordinal  size  get  Type  get  Target  Field  new  Validation  Error  unknown  Target  Column  to  String  add  get  Index  new  Validation  Error  duplicate  Target  Column  get  Name  add  create  Struct  Type,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node  List,empty  singleton  empty  singleton  star  list,add  Sql  Node  List  Sql  Node  List  iterator  get  List  add  clone  get  set  size  unparse  comma  List  and  Or  List  validate  accept  equals  Deep  to  Array  is  Empty  List  of  of  of  validate  Expr,0,0
605,create  Target  Row  Type,Sql  Validator  Table  Sql  Node  List  boolean,Rel  Data  Type,,get  Row  Type  get  Field  List  add  of  derive  Alias  From  Ordinal  size  get  Type  get  Target  Field  new  Validation  Error  unknown  Target  Column  to  String  add  get  Index  new  Validation  Error  duplicate  Target  Column  get  Name  add  create  Struct  Type,Sql  Node  List,empty  singleton  empty  singleton  star  list,add  Sql  Node  List  Sql  Node  List  iterator  get  List  add  clone  get  set  size  unparse  comma  List  and  Or  List  validate  accept  equals  Deep  to  Array  is  Empty  List  of  of  of  validate  Expr,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
606,is  Row  With  Default,Sql  Node  int,boolean,,get  Kind  size  get  Operand  List  get  Kind  get  get  Operand  List,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
607,is  Row  With  Default,Sql  Node  int,boolean,,get  Kind  size  get  Operand  List  get  Kind  get  get  Operand  List,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
608,validate  Access,Sql  Node  Sql  Validator  Table  Sql  Access  Enum,void,,get  Allowed  Access  allows  Access  new  Validation  Error  access  Not  Allowed  name  to  String  get  Qualified  Name,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
609,validate  Access,Sql  Node  Sql  Validator  Table  Sql  Access  Enum,void,,get  Allowed  Access  allows  Access  new  Validation  Error  access  Not  Allowed  name  to  String  get  Qualified  Name,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
610,validate  Snapshot,Sql  Node  Sql  Validator  Scope  Sql  Validator  Namespace,void,,get  Kind  get  Period  derive  Type  get  Sql  Type  Name  new  Validation  Error  illegal  Expression  For  Temporal  get  Name  get  Sql  Type  Name  is  Temporal  get  Table  get  Qualified  Name  get  Table  get  size  new  Validation  Error  get  Table  Ref  not  Temporal  Table,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
611,validate  Snapshot,Sql  Node  Sql  Validator  Scope  Sql  Validator  Namespace,void,,get  Kind  get  Period  derive  Type  get  Sql  Type  Name  new  Validation  Error  illegal  Expression  For  Temporal  get  Name  get  Sql  Type  Name  is  Temporal  get  Table  get  Qualified  Name  get  Table  get  size  new  Validation  Error  get  Table  Ref  not  Temporal  Table,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  get  Window  By  Name  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
612,get  Window  By  Name,Sql  Identifier  Sql  Validator  Scope,Sql  Window,,is  Simple  get  Simple  lookup  Window  new  Validation  Error  window  Not  Found  to  String,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,0,0
613,get  Window  By  Name,Sql  Identifier  Sql  Validator  Scope,Sql  Window,,is  Simple  get  Simple  lookup  Window  new  Validation  Error  window  Not  Found  to  String,Sql  Identifier,star  names  collation  component  Positions,Sql  Identifier  Sql  Identifier  Sql  Identifier  Sql  Identifier  star  star  get  Kind  clone  to  String  get  String  to  Star  set  Names  set  Name  add  get  Component  Parser  Position  assign  Names  From  get  Component  get  Component  plus  plus  Star  skip  Last  unparse  validate  validate  Expr  equals  Deep  accept  get  Collation  get  Simple  is  Star  is  Simple  is  Component  Quoted  get  Monotonicity,Sql  Validator  Impl,tracer  update  src  alias  update  tgt  alias  update  anon  prefix  op  Tab  catalog  Reader  id  Positions  scopes  where  Scopes  group  By  Scopes  select  Scopes  order  Scopes  cursor  Scopes  table  Scope  namespaces  cursor  Set  function  Call  Stack  next  Generated  Id  type  Factory  unknown  Type  boolean  Type  node  To  Type  Map  agg  Finder  agg  Or  Over  Finder  agg  Or  Over  Or  Group  Finder  group  Finder  over  Finder  config  original  Exprs  top  null  Collation  validating  Sql  Merge  in  Window  validation  Error  Function  type  Coercion  Validation  Error  sql  Node  validator  Exception  Validation  Error  Function  Dml  Namespace  Insert  Namespace  node  Update  Namespace  node  Delete  Namespace  node  Merge  Namespace  node  Pattern  Var  Visitor  scope  Derive  Type  Visitor  scope  Expander  validator  Order  Expression  Expander  alias  List  select  root  Select  Expander  select  Extended  Expander  select  root  having  Expr  Id  Info  scope  id  Function  Param  Info  cursor  Pos  To  Select  Map  column  List  Param  To  Parent  Cursor  Map  Navigation  Modifier  Navigation  Expander  op  offset  Navigation  Replacer  alpha  Pattern  Validator  is  Measure  first  Last  Count  prev  Next  Count  aggregate  Count  Permute  sources  row  Type  trivial  Status,Sql  Validator  Impl  Sql  Validator  Impl  get  Conformance  get  Catalog  Reader  get  Operator  Table  get  Type  Factory  get  Unknown  Type  expand  Star  declare  Cursor  push  Function  Call  pop  Function  Call  get  Parent  Cursor  expand  Select  Item  expand  Expr  From  Join  expand  Common  Column  validate  Qualified  Common  Column  expand  Star  maybe  Cast  add  Or  Expand  Field  validate  lookup  Hints  lookup  Qualified  Name  lookup  Select  Hints  lookup  Select  Hints  lookup  From  Hints  lookup  Join  Hints  lookup  Name  Completion  Hints  find  All  Valid  Udf  Names  find  All  Valid  Function  Names  validate  Parameterized  Expression  validate  Scoped  Expression  validate  Query  validate  Namespace  get  Empty  Scope  get  Cursor  Scope  get  Where  Scope  get  Select  Scope  get  Raw  Select  Scope  get  Having  Scope  get  Group  Scope  get  From  Scope  get  Order  Scope  get  Match  Recognize  Scope  get  Join  Scope  get  Over  Scope  get  Namespace  get  Namespace  get  Namespace  handle  Offset  Fetch  perform  Unconditional  Rewrites  get  Inner  Select  rewrite  Merge  rewrite  Update  To  Merge  get  Self  Join  Expr  For  Update  create  Source  Select  For  Update  create  Source  Select  For  Delete  get  Table  Constructor  Row  Type  get  Validated  Node  Type  get  Validated  Node  Type  If  Known  set  Validated  Node  Type  remove  Validated  Node  Type  make  Nullary  Call  derive  Type  derive  Type  Impl  derive  Constructor  Type  handle  Unresolved  Function  infer  Unknown  Types  add  To  Select  List  derive  Alias  set  Identifier  Expansion  set  Column  Reference  Expansion  get  Column  Reference  Expansion  set  Default  Null  Collation  get  Default  Null  Collation  set  Call  Rewrite  should  Expand  Identifiers  should  Allow  Intermediate  Order  By  register  Match  Recognize  create  Match  Recognize  Name  Space  register  Namespace  register  From  is  Lateral  should  Allow  Over  Relation  create  Select  Namespace  create  Setop  Namespace  register  Query  register  Query  register  Setop  register  With  is  Aggregate  is  Nested  Aggregate  Window  is  Over  Aggregate  Window  get  Aggregate  get  Agg  is  Aggregate  validate  Node  Feature  register  Sub  Queries  register  Operand  Sub  Queries  validate  Identifier  validate  Literal  validate  Literal  As  Double  validate  Interval  Qualifier  validate  From  validate  Over  validate  Unnest  check  Roll  Up  In  Using  validate  Join  validate  No  Aggs  validate  Using  Col  validate  Select  check  Roll  Up  In  Select  List  check  Roll  Up  In  Group  By  check  Roll  Up  In  Order  By  check  Roll  Up  In  Window  check  Roll  Up  In  Window  Decl  strip  Dot  check  Roll  Up  check  Roll  Up  get  Window  In  Over  strip  Over  find  Table  Column  Pair  is  Rolled  Up  Column  Allowed  In  Agg  is  Rolled  Up  Column  should  Check  For  Roll  Up  validate  Modality  deduce  Modality  validate  Modality  has  Sorted  Prefix  is  Sort  Compatible  validate  Window  Clause  validate  With  validate  With  Item  validate  Sequence  Value  get  With  Scope  set  Lenient  Operator  Lookup  is  Lenient  Operator  Lookup  set  Enable  Type  Coercion  is  Type  Coercion  Enabled  set  Type  Coercion  get  Type  Coercion  set  Sql  Type  Coercion  Rules  config  transform  validate  Order  List  validate  Group  By  Item  validate  Order  Item  expand  Order  Expr  validate  Group  Clause  validate  Group  Item  validate  Grouping  Sets  validate  Where  Clause  validate  Where  Or  On  validate  Having  Clause  validate  Select  List  validate  Expr  handle  Scalar  Sub  Query  create  Target  Row  Type  validate  Insert  check  Constraint  check  Constraint  check  Field  Count  is  Values  With  Default  is  Row  With  Default  get  Logical  Target  Row  Type  get  Logical  Source  Row  Type  check  Type  Assignment  get  Nth  Expr  validate  Delete  validate  Update  validate  Merge  validate  Access  validate  Snapshot  validate  Values  validate  Data  Type  validate  Dynamic  Param  Validation  Error  get  apply  get  Validation  Error  Function  new  Validation  Error  resolve  Window  get  Original  set  Original  lookup  Field  Namespace  validate  Window  validate  Match  Recognize  validate  Measure  navigation  In  Measure  validate  Definitions  alias  navigation  In  Define  validate  Aggregate  Params  validate  Call  validate  Feature  expand  Select  Expr  expand  expand  Group  By  Or  Having  Expr  is  System  Field  get  Field  Origins  get  Field  Origin  get  Parameter  Row  Type  visit  get  size  validate  Column  List  Params  is  Physical  Navigation  is  Logical  Navigation  is  Aggregation  is  Running  Or  Final  is  Single  Var  Required  Dml  Namespace  Insert  Namespace  get  Node  Update  Namespace  get  Node  Delete  Namespace  get  Node  Merge  Namespace  get  Node  Pattern  Var  Visitor  visit  visit  visit  visit  visit  visit  visit  Derive  Type  Visitor  visit  visit  visit  visit  visit  visit  visit  Expander  visit  visit  Scoped  expand  Dynamic  Star  Order  Expression  Expander  go  visit  nth  Select  Item  visit  visit  Scoped  Select  Expander  visit  Extended  Expander  visit  visit  Id  Info  Function  Param  Info  go  Navigation  Expander  Navigation  Expander  visit  visit  Navigation  Replacer  visit  visit  Pattern  Validator  Pattern  Validator  visit  visit  visit  visit  visit  visit  Permute  field  permute,1,0
614,unparse  Fetch  Using  Ansi,Sql  Writer  Sql  Node  Sql  Node,void,,check  Argument  newline  And  Indent  start  List  keyword  unparse  keyword  end  List  newline  And  Indent  start  List  keyword  keyword  unparse  keyword  keyword  end  List,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
615,unparse  Fetch  Using  Ansi,Sql  Writer  Sql  Node  Sql  Node,void,,check  Argument  newline  And  Indent  start  List  keyword  unparse  keyword  end  List  newline  And  Indent  start  List  keyword  keyword  unparse  keyword  keyword  end  List,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,1,0
616,unparse  Fetch  Using  Limit,Sql  Writer  Sql  Node  Sql  Node,void,,check  Argument  newline  And  Indent  start  List  keyword  unparse  end  List  newline  And  Indent  start  List  keyword  unparse  end  List,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
617,unparse  Fetch  Using  Limit,Sql  Writer  Sql  Node  Sql  Node,void,,check  Argument  newline  And  Indent  start  List  keyword  unparse  end  List  newline  And  Indent  start  List  keyword  unparse  end  List,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,1,0
618,validate  Quantifier,Sql  Validator  Sql  Call,void,,get  Function  Quantifier  is  Quantifier  Allowed  new  Validation  Error  get  Function  Quantifier  function  Quantifier  Not  Allowed  get  Name  get  Operator,Sql  Function,category  sql  Identifier  param  Types,Sql  Function  Sql  Function  Sql  Function  get  Syntax  get  Sql  Identifier  get  Name  As  Id  get  Param  Types  get  Param  Names  unparse  get  Function  Type  is  Quantifier  Allowed  validate  Call  derive  Type  derive  Type  contains  Row  Arg,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
619,validate  Quantifier,Sql  Validator  Sql  Call,void,,get  Function  Quantifier  is  Quantifier  Allowed  new  Validation  Error  get  Function  Quantifier  function  Quantifier  Not  Allowed  get  Name  get  Operator,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  Function,category  sql  Identifier  param  Types,Sql  Function  Sql  Function  Sql  Function  get  Syntax  get  Sql  Identifier  get  Name  As  Id  get  Param  Types  get  Param  Names  unparse  get  Function  Type  is  Quantifier  Allowed  validate  Call  derive  Type  derive  Type  contains  Row  Arg,1,0
620,construct  Arg  Name  List,Sql  Call,List  String,,builder  get  Operand  List  get  Kind  get  Operand  List  add  get  Simple  get  build  is  Empty,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
621,construct  Arg  Name  List,Sql  Call,List  String,,builder  get  Operand  List  get  Kind  get  Operand  List  add  get  Simple  get  build  is  Empty,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,1,0
622,construct  Operand  List,Sql  Validator  Sql  Call  List  String,List  Sql  Node,,get  Operand  List  size  size  get  Operand  List  new  Validation  Error  some  But  Not  All  Arguments  Are  Named  first  Duplicate  new  Validation  Error  duplicate  Argument  Name  get  builder  get  Operand  List  get  Kind  get  Operand  List  add  get  build,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
623,construct  Operand  List,Sql  Validator  Sql  Call  List  String,List  Sql  Node,,get  Operand  List  size  size  get  Operand  List  new  Validation  Error  some  But  Not  All  Arguments  Are  Named  first  Duplicate  new  Validation  Error  duplicate  Argument  Name  get  builder  get  Operand  List  get  Kind  get  Operand  List  add  get  build,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,1,0
624,construct  Arg  Type  List,Sql  Validator  Sql  Validator  Scope  Sql  Call  List  Sql  Node  boolean,List  Rel  Data  Type,,get  Operand  Scope  builder  get  Kind  get  Type  Factory  create  Sql  Type  set  Validated  Node  Type  derive  Type  add  build,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
625,construct  Arg  Type  List,Sql  Validator  Sql  Validator  Scope  Sql  Call  List  Sql  Node  boolean,List  Rel  Data  Type,,get  Operand  Scope  builder  get  Kind  get  Type  Factory  create  Sql  Type  set  Validated  Node  Type  derive  Type  add  build,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,1,0
626,accept  Call,Sql  Visitor  R  Sql  Call,r,,get  Operand  List  accept,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
627,accept  Call,Sql  Visitor  R  Sql  Call,r,,get  Operand  List  accept,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,1,0
628,allow  Alias  Unnest  Items,Sql  Unnest  Operator,boolean,,allow  Alias  Unnest  Items  sql  Conformance  config  get  Validator,Sql  Unnest  Operator,with  Ordinality  ordinality  column  name  map  key  column  name  map  value  column  name,Sql  Unnest  Operator  infer  Return  Type  unparse  argument  Must  Be  Scalar,Sql  Operator  Binding,type  Factory  sql  Operator,Sql  Operator  Binding  get  Group  Count  has  Filter  get  Operator  get  Type  Factory  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Operand  Monotonicity  collect  Operand  Types  get  size  get  Cursor  Operand  get  Column  List  Param  Info  new  Error,0,0
629,allow  Alias  Unnest  Items,Sql  Unnest  Operator,boolean,,allow  Alias  Unnest  Items  sql  Conformance  config  get  Validator,Sql  Operator  Binding,type  Factory  sql  Operator,Sql  Operator  Binding  get  Group  Count  has  Filter  get  Operator  get  Type  Factory  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Operand  Monotonicity  collect  Operand  Types  get  size  get  Cursor  Operand  get  Column  List  Param  Info  new  Error,Sql  Unnest  Operator,with  Ordinality  ordinality  column  name  map  key  column  name  map  value  column  name,Sql  Unnest  Operator  infer  Return  Type  unparse  argument  Must  Be  Scalar,1,1
632,field  Exceeds  Precision  Exception,Sql  Parser  Pos  int  Big  Decimal  Time  Unit  int,Calcite  Context  Exception,,negate  new  Context  Exception  interval  Field  Exceeds  Precision  name,Sql  Interval  Qualifier,zero  thousand  int  max  value  plus  one  start  Precision  time  Unit  Range  fractional  Second  Precision  powers,Sql  Interval  Qualifier  Sql  Interval  Qualifier  type  Name  validate  accept  equals  Deep  get  Start  Precision  get  Start  Precision  Preserving  Default  use  Default  Start  Precision  combine  Start  Precision  Preserving  Default  get  Fractional  Second  Precision  get  Fractional  Second  Precision  Preserving  Default  use  Default  Fractional  Second  Precision  combine  Fractional  Second  Precision  Preserving  Default  get  Start  Unit  get  End  Unit  get  Unit  clone  unparse  is  Single  Datetime  Field  is  Year  Month  get  Interval  Sign  strip  Leading  Sign  is  Lead  Field  In  Range  check  Lead  Field  In  Range  is  Fractional  Second  Field  In  Range  is  Secondary  Field  In  Range  normalize  Second  Fraction  fill  Interval  Value  Array  fill  Interval  Value  Array  evaluate  Interval  Literal  As  Year  evaluate  Interval  Literal  As  Year  To  Month  evaluate  Interval  Literal  As  Month  evaluate  Interval  Literal  As  Day  evaluate  Interval  Literal  As  Day  To  Hour  evaluate  Interval  Literal  As  Day  To  Minute  evaluate  Interval  Literal  As  Day  To  Second  evaluate  Interval  Literal  As  Hour  evaluate  Interval  Literal  As  Hour  To  Minute  evaluate  Interval  Literal  As  Hour  To  Second  evaluate  Interval  Literal  As  Minute  evaluate  Interval  Literal  As  Minute  To  Second  evaluate  Interval  Literal  As  Second  evaluate  Interval  Literal  parse  Field  invalid  Value  Exception,Sql  Parser  Pos,zero  quoted  zero  serial  Version  U  I  D  line  Number  column  Number  end  Line  Number  end  Column  Number  Quoted  Parser  Pos,Sql  Parser  Pos  Sql  Parser  Pos  hash  Code  equals  get  Line  Num  get  Column  Num  get  End  Line  Num  get  End  Column  Num  with  Quoting  is  Quoted  to  String  plus  plus  All  plus  All  sum  to  Pos  get  size  to  Pos  sum  sum  sum  get  size  sum  overlaps  starts  Before  ends  After  starts  At  create  Literal  Quoted  Parser  Pos  is  Quoted,0,0
633,field  Exceeds  Precision  Exception,Sql  Parser  Pos  int  Big  Decimal  Time  Unit  int,Calcite  Context  Exception,,negate  new  Context  Exception  interval  Field  Exceeds  Precision  name,Sql  Parser  Pos,zero  quoted  zero  serial  Version  U  I  D  line  Number  column  Number  end  Line  Number  end  Column  Number  Quoted  Parser  Pos,Sql  Parser  Pos  Sql  Parser  Pos  hash  Code  equals  get  Line  Num  get  Column  Num  get  End  Line  Num  get  End  Column  Num  with  Quoting  is  Quoted  to  String  plus  plus  All  plus  All  sum  to  Pos  get  size  to  Pos  sum  sum  sum  get  size  sum  overlaps  starts  Before  ends  After  starts  At  create  Literal  Quoted  Parser  Pos  is  Quoted,Sql  Interval  Qualifier,zero  thousand  int  max  value  plus  one  start  Precision  time  Unit  Range  fractional  Second  Precision  powers,Sql  Interval  Qualifier  Sql  Interval  Qualifier  type  Name  validate  accept  equals  Deep  get  Start  Precision  get  Start  Precision  Preserving  Default  use  Default  Start  Precision  combine  Start  Precision  Preserving  Default  get  Fractional  Second  Precision  get  Fractional  Second  Precision  Preserving  Default  use  Default  Fractional  Second  Precision  combine  Fractional  Second  Precision  Preserving  Default  get  Start  Unit  get  End  Unit  get  Unit  clone  unparse  is  Single  Datetime  Field  is  Year  Month  get  Interval  Sign  strip  Leading  Sign  is  Lead  Field  In  Range  check  Lead  Field  In  Range  is  Fractional  Second  Field  In  Range  is  Secondary  Field  In  Range  normalize  Second  Fraction  fill  Interval  Value  Array  fill  Interval  Value  Array  evaluate  Interval  Literal  As  Year  evaluate  Interval  Literal  As  Year  To  Month  evaluate  Interval  Literal  As  Month  evaluate  Interval  Literal  As  Day  evaluate  Interval  Literal  As  Day  To  Hour  evaluate  Interval  Literal  As  Day  To  Minute  evaluate  Interval  Literal  As  Day  To  Second  evaluate  Interval  Literal  As  Hour  evaluate  Interval  Literal  As  Hour  To  Minute  evaluate  Interval  Literal  As  Hour  To  Second  evaluate  Interval  Literal  As  Minute  evaluate  Interval  Literal  As  Minute  To  Second  evaluate  Interval  Literal  As  Second  evaluate  Interval  Literal  parse  Field  invalid  Value  Exception,1,0
634,throw  Validation  Signature  Error  Or  Return  False,Sql  Call  Binding  boolean,boolean,,new  Validation  Signature  Error,Sql  Window  Table  Function,arg  table  function  windowing,Sql  Window  Table  Function  validate  Column  Names  argument  Must  Be  Scalar,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,0,0
635,throw  Validation  Signature  Error  Or  Return  False,Sql  Call  Binding  boolean,boolean,,new  Validation  Signature  Error,Sql  Call  Binding,default  call  validator  scope  call,Sql  Call  Binding  get  Group  Count  get  Validator  get  Scope  get  Call  operands  has  Assignment  permuted  Operands  operand  permuted  Call  get  Operand  Monotonicity  get  String  Literal  Operand  get  Int  Literal  Operand  get  Operand  Literal  Value  is  Operand  Null  is  Operand  Literal  get  Operand  Count  get  Operand  Type  get  Cursor  Operand  get  Column  List  Param  Info  new  Error  new  Validation  Signature  Error  new  Validation  Error  is  Type  Coercion  Enabled  infer  Type  From  Validator,Sql  Window  Table  Function,arg  table  function  windowing,Sql  Window  Table  Function  validate  Column  Names  argument  Must  Be  Scalar,1,0
636,connect,Java  Type  Factory  Driver,Calcite  Connection,,new  Connection,Driver,connect  string  prefix  prepare  Factory,Driver  create  Prepare  Factory  get  Connect  String  Prefix  get  Factory  Class  Name  create  Driver  Version  create  Handler  on  Connection  Init  model  get  Connection  Properties  create  Meta,Calcite  Schema,parent  schema  name  table  Map  function  Map  type  Map  lattice  Map  function  Names  nullary  Function  Map  sub  Schema  Map  path  Entry  schema  name  Table  Entry  sqls  Type  Entry  Function  Entry  Lattice  Entry  Schema  Plus  Impl  Table  Entry  Impl  table  Type  Entry  Impl  proto  Data  Type  Function  Entry  Impl  function  Lattice  Entry  Impl  lattice  star  Table  Entry,Calcite  Schema  get  Implicit  Sub  Schema  get  Implicit  Table  get  Implicit  Type  get  Implicit  Table  Based  On  Nullary  Function  add  Implicit  Sub  Schema  To  Builder  add  Implicit  Table  To  Builder  add  Implicit  Functions  To  Builder  add  Implicit  Func  Names  To  Builder  add  Implicit  Type  Names  To  Builder  add  Implicit  Tables  Based  On  Nullary  Functions  To  Builder  snapshot  is  Cache  Enabled  set  Cache  table  Entry  type  Entry  add  add  add  add  add  root  is  Root  path  get  Sub  Schema  add  get  Table  By  Sql  get  Table  get  Name  plus  from  get  Path  get  Sub  Schema  Map  get  Lattice  Map  get  Table  Names  get  Type  Names  get  Type  get  Functions  get  Function  Names  get  Tables  Based  On  Nullary  Functions  get  Table  Based  On  Nullary  Function  create  Snapshot  find  find  create  Root  Schema  create  Root  Schema  create  Root  Schema  create  Root  Schema  remove  Sub  Schema  remove  Table  remove  Function  remove  Type  Entry  path  Table  Entry  get  Table  Type  Entry  get  Type  Function  Entry  get  Function  is  Materialization  Lattice  Entry  get  Lattice  get  Star  Table  calcite  Schema  get  Parent  Schema  get  Name  is  Mutable  set  Cache  Enabled  is  Cache  Enabled  snapshot  get  Expression  get  Table  get  Table  Names  get  Type  get  Type  Names  get  Functions  get  Function  Names  get  Sub  Schema  get  Sub  Schema  Names  add  unwrap  set  Path  add  add  add  add  Table  Entry  Impl  get  Table  Type  Entry  Impl  get  Type  Function  Entry  Impl  get  Function  is  Materialization  Lattice  Entry  Impl  get  Lattice  get  Star  Table,0,0
637,connect,Java  Type  Factory  Driver,Calcite  Connection,,new  Connection,Calcite  Schema,parent  schema  name  table  Map  function  Map  type  Map  lattice  Map  function  Names  nullary  Function  Map  sub  Schema  Map  path  Entry  schema  name  Table  Entry  sqls  Type  Entry  Function  Entry  Lattice  Entry  Schema  Plus  Impl  Table  Entry  Impl  table  Type  Entry  Impl  proto  Data  Type  Function  Entry  Impl  function  Lattice  Entry  Impl  lattice  star  Table  Entry,Calcite  Schema  get  Implicit  Sub  Schema  get  Implicit  Table  get  Implicit  Type  get  Implicit  Table  Based  On  Nullary  Function  add  Implicit  Sub  Schema  To  Builder  add  Implicit  Table  To  Builder  add  Implicit  Functions  To  Builder  add  Implicit  Func  Names  To  Builder  add  Implicit  Type  Names  To  Builder  add  Implicit  Tables  Based  On  Nullary  Functions  To  Builder  snapshot  is  Cache  Enabled  set  Cache  table  Entry  type  Entry  add  add  add  add  add  root  is  Root  path  get  Sub  Schema  add  get  Table  By  Sql  get  Table  get  Name  plus  from  get  Path  get  Sub  Schema  Map  get  Lattice  Map  get  Table  Names  get  Type  Names  get  Type  get  Functions  get  Function  Names  get  Tables  Based  On  Nullary  Functions  get  Table  Based  On  Nullary  Function  create  Snapshot  find  find  create  Root  Schema  create  Root  Schema  create  Root  Schema  create  Root  Schema  remove  Sub  Schema  remove  Table  remove  Function  remove  Type  Entry  path  Table  Entry  get  Table  Type  Entry  get  Type  Function  Entry  get  Function  is  Materialization  Lattice  Entry  get  Lattice  get  Star  Table  calcite  Schema  get  Parent  Schema  get  Name  is  Mutable  set  Cache  Enabled  is  Cache  Enabled  snapshot  get  Expression  get  Table  get  Table  Names  get  Type  get  Type  Names  get  Functions  get  Function  Names  get  Sub  Schema  get  Sub  Schema  Names  add  unwrap  set  Path  add  add  add  add  Table  Entry  Impl  get  Table  Type  Entry  Impl  get  Type  Function  Entry  Impl  get  Function  is  Materialization  Lattice  Entry  Impl  get  Lattice  get  Star  Table,Driver,connect  string  prefix  prepare  Factory,Driver  create  Prepare  Factory  get  Connect  String  Prefix  get  Factory  Class  Name  create  Driver  Version  create  Handler  on  Connection  Init  model  get  Connection  Properties  create  Meta,1,1
638,connect,Java  Type  Factory  Driver,Calcite  Connection,,new  Connection,Driver,connect  string  prefix  prepare  Factory,Driver  create  Prepare  Factory  get  Connect  String  Prefix  get  Factory  Class  Name  create  Driver  Version  create  Handler  on  Connection  Init  model  get  Connection  Properties  create  Meta,Calcite  Schema,parent  schema  name  table  Map  function  Map  type  Map  lattice  Map  function  Names  nullary  Function  Map  sub  Schema  Map  path  Entry  schema  name  Table  Entry  sqls  Type  Entry  Function  Entry  Lattice  Entry  Schema  Plus  Impl  Table  Entry  Impl  table  Type  Entry  Impl  proto  Data  Type  Function  Entry  Impl  function  Lattice  Entry  Impl  lattice  star  Table  Entry,Calcite  Schema  get  Implicit  Sub  Schema  get  Implicit  Table  get  Implicit  Type  get  Implicit  Table  Based  On  Nullary  Function  add  Implicit  Sub  Schema  To  Builder  add  Implicit  Table  To  Builder  add  Implicit  Functions  To  Builder  add  Implicit  Func  Names  To  Builder  add  Implicit  Type  Names  To  Builder  add  Implicit  Tables  Based  On  Nullary  Functions  To  Builder  snapshot  is  Cache  Enabled  set  Cache  table  Entry  type  Entry  add  add  add  add  add  root  is  Root  path  get  Sub  Schema  add  get  Table  By  Sql  get  Table  get  Name  plus  from  get  Path  get  Sub  Schema  Map  get  Lattice  Map  get  Table  Names  get  Type  Names  get  Type  get  Functions  get  Function  Names  get  Tables  Based  On  Nullary  Functions  get  Table  Based  On  Nullary  Function  create  Snapshot  find  find  create  Root  Schema  create  Root  Schema  create  Root  Schema  create  Root  Schema  remove  Sub  Schema  remove  Table  remove  Function  remove  Type  Entry  path  Table  Entry  get  Table  Type  Entry  get  Type  Function  Entry  get  Function  is  Materialization  Lattice  Entry  get  Lattice  get  Star  Table  calcite  Schema  get  Parent  Schema  get  Name  is  Mutable  set  Cache  Enabled  is  Cache  Enabled  snapshot  get  Expression  get  Table  get  Table  Names  get  Type  get  Type  Names  get  Functions  get  Function  Names  get  Sub  Schema  get  Sub  Schema  Names  add  unwrap  set  Path  add  add  add  add  Table  Entry  Impl  get  Table  Type  Entry  Impl  get  Type  Function  Entry  Impl  get  Function  is  Materialization  Lattice  Entry  Impl  get  Lattice  get  Star  Table,0,0
639,connect,Java  Type  Factory  Driver,Calcite  Connection,,new  Connection,Calcite  Schema,parent  schema  name  table  Map  function  Map  type  Map  lattice  Map  function  Names  nullary  Function  Map  sub  Schema  Map  path  Entry  schema  name  Table  Entry  sqls  Type  Entry  Function  Entry  Lattice  Entry  Schema  Plus  Impl  Table  Entry  Impl  table  Type  Entry  Impl  proto  Data  Type  Function  Entry  Impl  function  Lattice  Entry  Impl  lattice  star  Table  Entry,Calcite  Schema  get  Implicit  Sub  Schema  get  Implicit  Table  get  Implicit  Type  get  Implicit  Table  Based  On  Nullary  Function  add  Implicit  Sub  Schema  To  Builder  add  Implicit  Table  To  Builder  add  Implicit  Functions  To  Builder  add  Implicit  Func  Names  To  Builder  add  Implicit  Type  Names  To  Builder  add  Implicit  Tables  Based  On  Nullary  Functions  To  Builder  snapshot  is  Cache  Enabled  set  Cache  table  Entry  type  Entry  add  add  add  add  add  root  is  Root  path  get  Sub  Schema  add  get  Table  By  Sql  get  Table  get  Name  plus  from  get  Path  get  Sub  Schema  Map  get  Lattice  Map  get  Table  Names  get  Type  Names  get  Type  get  Functions  get  Function  Names  get  Tables  Based  On  Nullary  Functions  get  Table  Based  On  Nullary  Function  create  Snapshot  find  find  create  Root  Schema  create  Root  Schema  create  Root  Schema  create  Root  Schema  remove  Sub  Schema  remove  Table  remove  Function  remove  Type  Entry  path  Table  Entry  get  Table  Type  Entry  get  Type  Function  Entry  get  Function  is  Materialization  Lattice  Entry  get  Lattice  get  Star  Table  calcite  Schema  get  Parent  Schema  get  Name  is  Mutable  set  Cache  Enabled  is  Cache  Enabled  snapshot  get  Expression  get  Table  get  Table  Names  get  Type  get  Type  Names  get  Functions  get  Function  Names  get  Sub  Schema  get  Sub  Schema  Names  add  unwrap  set  Path  add  add  add  add  Table  Entry  Impl  get  Table  Type  Entry  Impl  get  Type  Function  Entry  Impl  get  Function  is  Materialization  Lattice  Entry  Impl  get  Lattice  get  Star  Table,Driver,connect  string  prefix  prepare  Factory,Driver  create  Prepare  Factory  get  Connect  String  Prefix  get  Factory  Class  Name  create  Driver  Version  create  Handler  on  Connection  Init  model  get  Connection  Properties  create  Meta,1,1
640,build  Cheapest  Plan,Volcano  Planner,Rel  Node,,visit  get  Listener  rel  Chosen  get  Listener,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,Volcano  Planner,root  class  Operands  all  Sets  map  Digest  To  Rel  map  Rel  Subset  pruned  Nodes  registered  Schemas  rule  Queue  trait  Defs  next  Set  Id  original  Root  locked  none  Convention  Has  Infinite  Cost  materializations  lattice  By  Name  provenance  Map  rule  Call  Stack  zero  Cost  tasks  next  Task  Id  top  Down  Opt  Deferring  Rule  Call  Provenance  empty  Unknown  Provenance  Direct  Provenance  source  Rule  Provenance  rule  rels  call  Id,Volcano  Planner  Volcano  Planner  Volcano  Planner  get  Phase  Rule  Mapping  Initializer  set  Top  Down  Opt  is  Registered  set  Root  get  Root  get  Materializations  add  Materialization  add  Lattice  get  Lattice  register  Materializations  get  Set  add  Rel  Trait  Def  clear  Rel  Trait  Defs  get  Rel  Trait  Defs  empty  Trait  Set  clear  add  Rule  remove  Rule  on  New  Class  change  Traits  choose  Delegate  find  Best  Exp  check  Cancel  register  Metadata  Rels  ensure  Root  Converters  register  ensure  Registered  is  Valid  register  Abstract  Relational  Rules  register  Schema  set  None  Convention  Has  Infinite  Cost  get  Cost  get  Subset  get  Subset  get  Subset  is  Seed  Node  change  Traits  Using  Converters  set  Importance  prune  dump  to  Dot  rename  reregister  check  Pruned  canonize  fire  Rules  fix  Up  Inputs  merge  equiv  Root  forward  forward  register  Impl  add  Rel  To  Set  register  Subset  register  Metadata  Providers  get  Rel  Metadata  Timestamp  normalize  Plan  set  Locked  Deferring  Rule  Call  on  Match  Direct  Provenance  Rule  Provenance,0,0
641,build  Cheapest  Plan,Volcano  Planner,Rel  Node,,visit  get  Listener  rel  Chosen  get  Listener,Volcano  Planner,root  class  Operands  all  Sets  map  Digest  To  Rel  map  Rel  Subset  pruned  Nodes  registered  Schemas  rule  Queue  trait  Defs  next  Set  Id  original  Root  locked  none  Convention  Has  Infinite  Cost  materializations  lattice  By  Name  provenance  Map  rule  Call  Stack  zero  Cost  tasks  next  Task  Id  top  Down  Opt  Deferring  Rule  Call  Provenance  empty  Unknown  Provenance  Direct  Provenance  source  Rule  Provenance  rule  rels  call  Id,Volcano  Planner  Volcano  Planner  Volcano  Planner  get  Phase  Rule  Mapping  Initializer  set  Top  Down  Opt  is  Registered  set  Root  get  Root  get  Materializations  add  Materialization  add  Lattice  get  Lattice  register  Materializations  get  Set  add  Rel  Trait  Def  clear  Rel  Trait  Defs  get  Rel  Trait  Defs  empty  Trait  Set  clear  add  Rule  remove  Rule  on  New  Class  change  Traits  choose  Delegate  find  Best  Exp  check  Cancel  register  Metadata  Rels  ensure  Root  Converters  register  ensure  Registered  is  Valid  register  Abstract  Relational  Rules  register  Schema  set  None  Convention  Has  Infinite  Cost  get  Cost  get  Subset  get  Subset  get  Subset  is  Seed  Node  change  Traits  Using  Converters  set  Importance  prune  dump  to  Dot  rename  reregister  check  Pruned  canonize  fire  Rules  fix  Up  Inputs  merge  equiv  Root  forward  forward  register  Impl  add  Rel  To  Set  register  Subset  register  Metadata  Providers  get  Rel  Metadata  Timestamp  normalize  Plan  set  Locked  Deferring  Rule  Call  on  Match  Direct  Provenance  Rule  Provenance,Rel  Subset,logger  delivered  required  task  State  best  Cost  set  best  timestamp  state  trigger  Rule  Dead  End  Finder  dead  Ends  visited  Nodes  active  Nodes  Cheapest  Plan  Replacer  planner,Rel  Subset  compute  Best  Cost  set  Delivered  set  Required  is  Delivered  is  Required  get  Best  get  Original  copy  compute  Self  Cost  estimate  Row  Count  explain  compute  Digest  derive  Row  Type  get  Parents  get  Parent  Subsets  input  Subsets  get  Parent  Rels  get  Set  add  propagate  Cost  Improvements  propagate  Cost  Improvements  collect  Variables  Used  collect  Variables  Set  get  Rels  get  Rel  List  get  Subsets  Satisfying  This  get  Satisfying  Subsets  get  Row  Count  visit  visit  Subset  visit  Rel  Cheapest  Plan  Replacer  trait  Diff  visit,1,0
642,change  Traits  Using  Converters,Rel  Node  Rel  Trait  Set,Rel  Node,,,Volcano  Planner,root  class  Operands  all  Sets  map  Digest  To  Rel  map  Rel  Subset  pruned  Nodes  registered  Schemas  rule  Queue  trait  Defs  next  Set  Id  original  Root  locked  none  Convention  Has  Infinite  Cost  materializations  lattice  By  Name  provenance  Map  rule  Call  Stack  zero  Cost  tasks  next  Task  Id  top  Down  Opt  Deferring  Rule  Call  Provenance  empty  Unknown  Provenance  Direct  Provenance  source  Rule  Provenance  rule  rels  call  Id,Volcano  Planner  Volcano  Planner  Volcano  Planner  get  Phase  Rule  Mapping  Initializer  set  Top  Down  Opt  is  Registered  set  Root  get  Root  get  Materializations  add  Materialization  add  Lattice  get  Lattice  register  Materializations  get  Set  add  Rel  Trait  Def  clear  Rel  Trait  Defs  get  Rel  Trait  Defs  empty  Trait  Set  clear  add  Rule  remove  Rule  on  New  Class  change  Traits  choose  Delegate  find  Best  Exp  check  Cancel  register  Metadata  Rels  ensure  Root  Converters  register  ensure  Registered  is  Valid  register  Abstract  Relational  Rules  register  Schema  set  None  Convention  Has  Infinite  Cost  get  Cost  get  Subset  get  Subset  get  Subset  is  Seed  Node  set  Importance  prune  dump  to  Dot  rename  reregister  check  Pruned  canonize  fire  Rules  fix  Up  Inputs  merge  equiv  Root  forward  forward  register  Impl  add  Rel  To  Set  register  Subset  register  Metadata  Providers  get  Rel  Metadata  Timestamp  normalize  Plan  set  Locked  Deferring  Rule  Call  on  Match  Direct  Provenance  Rule  Provenance,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  copy  Cache  get  Or  Add,0,0
643,change  Traits  Using  Converters,Rel  Node  Rel  Trait  Set,Rel  Node,,,Rel  Trait  Set,empty  traits  cache  traits  string  Cache  map,Rel  Trait  Set  create  Empty  get  Trait  get  Traits  get  is  Enabled  get  Trait  get  Traits  replace  replace  contains  Shallow  replace  replace  replace  Ifs  replace  If  apply  is  Default  is  Default  Sans  Convention  equals  Sans  Convention  get  Default  get  Default  Sans  Convention  get  Convention  get  Distribution  get  Collation  size  canonize  equals  hash  Code  satisfies  matches  contains  contains  If  Applicable  comprises  to  String  compute  String  find  Index  plus  plus  All  merge  difference  all  Simple  simplify  copy  Cache  get  Or  Add,Volcano  Planner,root  class  Operands  all  Sets  map  Digest  To  Rel  map  Rel  Subset  pruned  Nodes  registered  Schemas  rule  Queue  trait  Defs  next  Set  Id  original  Root  locked  none  Convention  Has  Infinite  Cost  materializations  lattice  By  Name  provenance  Map  rule  Call  Stack  zero  Cost  tasks  next  Task  Id  top  Down  Opt  Deferring  Rule  Call  Provenance  empty  Unknown  Provenance  Direct  Provenance  source  Rule  Provenance  rule  rels  call  Id,Volcano  Planner  Volcano  Planner  Volcano  Planner  get  Phase  Rule  Mapping  Initializer  set  Top  Down  Opt  is  Registered  set  Root  get  Root  get  Materializations  add  Materialization  add  Lattice  get  Lattice  register  Materializations  get  Set  add  Rel  Trait  Def  clear  Rel  Trait  Defs  get  Rel  Trait  Defs  empty  Trait  Set  clear  add  Rule  remove  Rule  on  New  Class  change  Traits  choose  Delegate  find  Best  Exp  check  Cancel  register  Metadata  Rels  ensure  Root  Converters  register  ensure  Registered  is  Valid  register  Abstract  Relational  Rules  register  Schema  set  None  Convention  Has  Infinite  Cost  get  Cost  get  Subset  get  Subset  get  Subset  is  Seed  Node  set  Importance  prune  dump  to  Dot  rename  reregister  check  Pruned  canonize  fire  Rules  fix  Up  Inputs  merge  equiv  Root  forward  forward  register  Impl  add  Rel  To  Set  register  Subset  register  Metadata  Providers  get  Rel  Metadata  Timestamp  normalize  Plan  set  Locked  Deferring  Rule  Call  on  Match  Direct  Provenance  Rule  Provenance,1,0
644,get  Aggregate,Rel  Opt  Planner  Immutable  Bit  Set  List  Lattice  Measure,Pair  Calcite  Schema  Table  Entry,,unwrap  get  Context  instance  create  Materializations  unwrap  define  Tile,Rel  Opt  Lattice,lattice  star  Rel  Opt  Table,Rel  Opt  Lattice  root  Table  rewrite,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
645,get  Aggregate,Rel  Opt  Planner  Immutable  Bit  Set  List  Lattice  Measure,Pair  Calcite  Schema  Table  Entry,,unwrap  get  Context  instance  create  Materializations  unwrap  define  Tile,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Opt  Lattice,lattice  star  Rel  Opt  Table,Rel  Opt  Lattice  root  Table  rewrite,1,0
646,row  Types  Are  Equivalent,Mutable  Rel  Litmus  Substitution  Visitor,boolean,,get  Field  Count  get  Field  Count  fail  of  zip  get  Field  List  get  Field  List  equals  get  Type  get  Type  fail  of  succeed,Substitution  Visitor,debug  logger  default  rules  rel  Builder  rules  rule  Map  cluster  simplify  query  target  target  Leaves  query  Leaves  replacement  Map  equivalents  slots  Replacement  before  after  stop  Trying  Match  Failed  instance  Unify  Rule  slot  Count  query  Operand  target  Operand  Unify  Rule  Call  rule  query  target  slots  Unify  Result  call  result  stop  Trying  Abstract  Unify  Rule  Trivial  Rule  instance  Scan  To  Calc  Unify  Rule  instance  Calc  To  Calc  Unify  Rule  instance  Join  On  Left  Calc  To  Join  Unify  Rule  instance  Join  On  Right  Calc  To  Join  Unify  Rule  instance  Join  On  Calcs  To  Join  Unify  Rule  instance  Aggregate  On  Calc  To  Aggregate  Unify  Rule  instance  Aggregate  To  Aggregate  Unify  Rule  instance  Union  To  Union  Unify  Rule  instance  Union  On  Calcs  To  Union  Unify  Rule  instance  Intersect  To  Intersect  Unify  Rule  instance  Intersect  On  Calcs  To  Intersect  Unify  Rule  instance  Operand  clazz  Internal  Operand  inputs  Any  Operand  Query  Operand  ordinal  Target  Operand  ordinal  Slot  Counter  query  Count  target  Count,Substitution  Visitor  Substitution  Visitor  Substitution  Visitor  visit  register  split  Filter  canonize  Node  split  Or  is  Equivalent  may  Be  Satisfiable  go  go  go  Replacement  Replacement  replace  replace  Recurse  undo  Replacement  redo  Replacement  reverse  Substitute  match  Recurse  apply  applicable  Rules  might  Match  Unify  Rule  apply  match  copy  Unify  Rule  Call  result  result  create  get  Cluster  get  Simplify  Unify  Result  Abstract  Unify  Rule  is  Valid  operand  any  query  target  Trivial  Rule  apply  Scan  To  Calc  Unify  Rule  apply  Calc  To  Calc  Unify  Rule  apply  Join  On  Left  Calc  To  Join  Unify  Rule  apply  visit  Input  Ref  Join  On  Right  Calc  To  Join  Unify  Rule  apply  visit  Input  Ref  Join  On  Calcs  To  Join  Unify  Rule  apply  visit  Input  Ref  Aggregate  On  Calc  To  Aggregate  Unify  Rule  apply  visit  Input  Ref  Aggregate  To  Aggregate  Unify  Rule  apply  Union  To  Union  Unify  Rule  apply  Union  On  Calcs  To  Union  Unify  Rule  apply  Intersect  To  Intersect  Unify  Rule  apply  Intersect  On  Calcs  To  Intersect  Unify  Rule  apply  set  Op  Apply  same  Rel  Collection  No  Order  Considered  field  Cnt  explain  Calc  try  Merge  Parent  Calc  And  Gen  Result  merge  Calc  get  Expand  Shuttle  visit  Local  Ref  implies  reference  By  Mapping  visit  Input  Ref  same  Join  Type  permute  unify  Aggregates  get  Rollup  get  Rex  Shuttle  visit  Input  Ref  visit  Call  visit  Literal  is  Weaker  equal  Type  Operand  matches  is  Weaker  Internal  Operand  matches  is  Weaker  all  Match  all  Weaker  Any  Operand  matches  Query  Operand  matches  Target  Operand  matches  is  Weaker  visit,Mutable  Rel,string  equivalence  pairwise  string  equivalence  cluster  row  Type  type  parent  ordinal  In  Parent  Mutable  Rel  Dumper  buf  level,do  Equivalent  do  Hash  Mutable  Rel  get  Parent  set  Input  get  Inputs  clone  children  Accept  replace  In  Parent  digest  deep  to  String  visit  apply,0,0
647,row  Types  Are  Equivalent,Mutable  Rel  Litmus  Substitution  Visitor,boolean,,get  Field  Count  get  Field  Count  fail  of  zip  get  Field  List  get  Field  List  equals  get  Type  get  Type  fail  of  succeed,Mutable  Rel,string  equivalence  pairwise  string  equivalence  cluster  row  Type  type  parent  ordinal  In  Parent  Mutable  Rel  Dumper  buf  level,do  Equivalent  do  Hash  Mutable  Rel  get  Parent  set  Input  get  Inputs  clone  children  Accept  replace  In  Parent  digest  deep  to  String  visit  apply,Substitution  Visitor,debug  logger  default  rules  rel  Builder  rules  rule  Map  cluster  simplify  query  target  target  Leaves  query  Leaves  replacement  Map  equivalents  slots  Replacement  before  after  stop  Trying  Match  Failed  instance  Unify  Rule  slot  Count  query  Operand  target  Operand  Unify  Rule  Call  rule  query  target  slots  Unify  Result  call  result  stop  Trying  Abstract  Unify  Rule  Trivial  Rule  instance  Scan  To  Calc  Unify  Rule  instance  Calc  To  Calc  Unify  Rule  instance  Join  On  Left  Calc  To  Join  Unify  Rule  instance  Join  On  Right  Calc  To  Join  Unify  Rule  instance  Join  On  Calcs  To  Join  Unify  Rule  instance  Aggregate  On  Calc  To  Aggregate  Unify  Rule  instance  Aggregate  To  Aggregate  Unify  Rule  instance  Union  To  Union  Unify  Rule  instance  Union  On  Calcs  To  Union  Unify  Rule  instance  Intersect  To  Intersect  Unify  Rule  instance  Intersect  On  Calcs  To  Intersect  Unify  Rule  instance  Operand  clazz  Internal  Operand  inputs  Any  Operand  Query  Operand  ordinal  Target  Operand  ordinal  Slot  Counter  query  Count  target  Count,Substitution  Visitor  Substitution  Visitor  Substitution  Visitor  visit  register  split  Filter  canonize  Node  split  Or  is  Equivalent  may  Be  Satisfiable  go  go  go  Replacement  Replacement  replace  replace  Recurse  undo  Replacement  redo  Replacement  reverse  Substitute  match  Recurse  apply  applicable  Rules  might  Match  Unify  Rule  apply  match  copy  Unify  Rule  Call  result  result  create  get  Cluster  get  Simplify  Unify  Result  Abstract  Unify  Rule  is  Valid  operand  any  query  target  Trivial  Rule  apply  Scan  To  Calc  Unify  Rule  apply  Calc  To  Calc  Unify  Rule  apply  Join  On  Left  Calc  To  Join  Unify  Rule  apply  visit  Input  Ref  Join  On  Right  Calc  To  Join  Unify  Rule  apply  visit  Input  Ref  Join  On  Calcs  To  Join  Unify  Rule  apply  visit  Input  Ref  Aggregate  On  Calc  To  Aggregate  Unify  Rule  apply  visit  Input  Ref  Aggregate  To  Aggregate  Unify  Rule  apply  Union  To  Union  Unify  Rule  apply  Union  On  Calcs  To  Union  Unify  Rule  apply  Intersect  To  Intersect  Unify  Rule  apply  Intersect  On  Calcs  To  Intersect  Unify  Rule  apply  set  Op  Apply  same  Rel  Collection  No  Order  Considered  field  Cnt  explain  Calc  try  Merge  Parent  Calc  And  Gen  Result  merge  Calc  get  Expand  Shuttle  visit  Local  Ref  implies  reference  By  Mapping  visit  Input  Ref  same  Join  Type  permute  unify  Aggregates  get  Rollup  get  Rex  Shuttle  visit  Input  Ref  visit  Call  visit  Literal  is  Weaker  equal  Type  Operand  matches  is  Weaker  Internal  Operand  matches  is  Weaker  all  Match  all  Weaker  Any  Operand  matches  Query  Operand  matches  Target  Operand  matches  is  Weaker  visit,1,1
648,as  Sql,boolean  boolean  Nls  String,String,,quote  String  Literal  get  Charset  Name  get  Value  get  Collation  append  append  to  String  get  Collation  to  String,Nls  String,decode  map  string  Value  bytes  Value  charset  Name  charset  collation,load  Nls  String  Nls  String  Nls  String  clone  hash  Code  equals  compare  To  get  Charset  Name  get  Charset  get  Collation  get  Value  rtrim  to  String  concat  copy  get  Value  Bytes,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,0,0
649,as  Sql,boolean  boolean  Nls  String,String,,quote  String  Literal  get  Charset  Name  get  Value  get  Collation  append  append  to  String  get  Collation  to  String,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,Nls  String,decode  map  string  Value  bytes  Value  charset  Name  charset  collation,load  Nls  String  Nls  String  Nls  String  clone  hash  Code  equals  compare  To  get  Charset  Name  get  Charset  get  Collation  get  Value  rtrim  to  String  concat  copy  get  Value  Bytes,1,1
650,visit  Children,Json  Lattice,void,,accept  accept,Json  Lattice,name  sql  auto  algorithm  algorithm  Max  Millis  row  Count  Estimate  statistic  Provider  tiles  default  Measures,accept  to  String  get  Sql  to  String  concatenate,Model  Handler,json  mapper  yaml  mapper  connection  schema  Stack  model  Uri  lattice  Builder  tile  Builder  Extra  Operand  camel  Name,Model  Handler  create  add  Functions  check  Required  Attributes  visit  visit  string  List  List  string  List  populate  Schema  visit  operand  Map  visit  visit  visit  populate  Lattice  visit  visit  visit  current  Schema  Path  current  Schema  current  Schema  Name  current  Mutable  Schema  visit  visit  visit  visit  Extra  Operand,0,0
651,visit  Children,Json  Lattice,void,,accept  accept,Model  Handler,json  mapper  yaml  mapper  connection  schema  Stack  model  Uri  lattice  Builder  tile  Builder  Extra  Operand  camel  Name,Model  Handler  create  add  Functions  check  Required  Attributes  visit  visit  string  List  List  string  List  populate  Schema  visit  operand  Map  visit  visit  visit  populate  Lattice  visit  visit  visit  current  Schema  Path  current  Schema  current  Schema  Name  current  Mutable  Schema  visit  visit  visit  visit  Extra  Operand,Json  Lattice,name  sql  auto  algorithm  algorithm  Max  Millis  row  Count  Estimate  statistic  Provider  tiles  default  Measures,accept  to  String  get  Sql  to  String  concatenate,1,1
652,to  Indexes  Table  Expression,Jdbc  To  Enumerable  Converter,List  Constant  Expression,,collect  map  stream  get  Dynamic  Parameters  to  List,Jdbc  To  Enumerable  Converter,,Jdbc  To  Enumerable  Converter  copy  compute  Self  Cost  implement  get  Time  Zone  Expression  generate  Get  get  Method  get  Method  jdbc  Get  Method  generate  Sql,Sql  String,sql  dialect  dynamic  Parameters,Sql  String  Sql  String  hash  Code  equals  to  String  get  Sql  get  Dynamic  Parameters  get  Dialect,0,0
653,to  Indexes  Table  Expression,Jdbc  To  Enumerable  Converter,List  Constant  Expression,,collect  map  stream  get  Dynamic  Parameters  to  List,Sql  String,sql  dialect  dynamic  Parameters,Sql  String  Sql  String  hash  Code  equals  to  String  get  Sql  get  Dynamic  Parameters  get  Dialect,Jdbc  To  Enumerable  Converter,,Jdbc  To  Enumerable  Converter  copy  compute  Self  Cost  implement  get  Time  Zone  Expression  generate  Get  get  Method  get  Method  jdbc  Get  Method  generate  Sql,1,1
658,generate  Sql,Sql  Dialect,Sql  String,,get  Type  Factory  get  Cluster  visit  Child  get  Input  to  Sql  String  as  Statement,Jdbc  To  Enumerable  Converter,,Jdbc  To  Enumerable  Converter  copy  compute  Self  Cost  implement  get  Time  Zone  Expression  generate  Get  get  Method  get  Method  jdbc  Get  Method,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,0,0
659,generate  Sql,Sql  Dialect,Sql  String,,get  Type  Factory  get  Cluster  visit  Child  get  Input  to  Sql  String  as  Statement,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,Jdbc  To  Enumerable  Converter,,Jdbc  To  Enumerable  Converter  copy  compute  Self  Cost  implement  get  Time  Zone  Expression  generate  Get  get  Method  get  Method  jdbc  Get  Method,1,0
660,implement  Add,List  Agg  Imp  State  Block  Builder  final  final  Function  Block  Builderfinal  Win  Agg  Frame  Result  Context  Win  Agg  Frame  Result  Contextframe  Win  Agg  Frame  Result  Context  final  final  Function  Agg  Imp  Statefinal  List  Rex  Node  List  Rex  Noderex  Arguments  List  Rex  Node  Enumerable  Window,void,,,Enumerable  Window,Window  Rel  Input  Getter  row  row  Phys  Type  actual  Input  Field  Count  constants,Enumerable  Window  copy  compute  Self  Cost  Window  Rel  Input  Getter  field  sample  Of  The  Generated  Windowed  Aggregate  implement  get  Block  Builder  Win  Agg  Frame  Result  Context  Function  row  Translator  compute  Index  check  Bounds  row  In  Frame  row  In  Partition  compare  Rows  get  Row  index  start  Index  end  Index  has  Rows  get  Frame  Row  Count  get  Partition  Row  Count  get  Partition  Iterator  get  Row  Collation  Key  declare  And  Reset  State  aggregation  return  Rel  Type  return  Type  parameter  Types  parameter  Rel  Types  group  Sets  key  Ordinals  key  Rel  Types  key  Types  implement  Result  rex  Arguments  translate  Bound,Declaration  Statement,modifiers  parameter  initializer,Declaration  Statement  accept  accept  accept  accept  equals  hash  Code  current  Position  rex  Arguments  rex  Filter  Argument,0,0
661,implement  Add,List  Agg  Imp  State  Block  Builder  final  final  Function  Block  Builderfinal  Win  Agg  Frame  Result  Context  Win  Agg  Frame  Result  Contextframe  Win  Agg  Frame  Result  Context  final  final  Function  Agg  Imp  Statefinal  List  Rex  Node  List  Rex  Noderex  Arguments  List  Rex  Node  Enumerable  Window,void,,,Declaration  Statement,modifiers  parameter  initializer,Declaration  Statement  accept  accept  accept  accept  equals  hash  Code  current  Position  rex  Arguments  rex  Filter  Argument,Enumerable  Window,Window  Rel  Input  Getter  row  row  Phys  Type  actual  Input  Field  Count  constants,Enumerable  Window  copy  compute  Self  Cost  Window  Rel  Input  Getter  field  sample  Of  The  Generated  Windowed  Aggregate  implement  get  Block  Builder  Win  Agg  Frame  Result  Context  Function  row  Translator  compute  Index  check  Bounds  row  In  Frame  row  In  Partition  compare  Rows  get  Row  index  start  Index  end  Index  has  Rows  get  Frame  Row  Count  get  Partition  Row  Count  get  Partition  Iterator  get  Row  Collation  Key  declare  And  Reset  State  aggregation  return  Rel  Type  return  Type  parameter  Types  parameter  Rel  Types  group  Sets  key  Ordinals  key  Rel  Types  key  Types  implement  Result  rex  Arguments  translate  Bound,1,1
662,translate  Call,Rex  Imp  Table  Null  As  Rex  To  Lix  Translator,Expression,,get  Operator  get  implement,Rex  To  Lix  Translator,java  to  sql  method  map  type  Factory  builder  program  conformance  root  input  Getter  list  expr  Nullable  Map  parent  correlates  Input  Getter  Impl  inputs  Always  Null  instance,find  Method  Rex  To  Lix  Translator  translate  Projects  translate  Table  Function  for  Aggregation  translate  translate  translate  translate  translate  Cast  handle  Null  Unboxing  If  Necessary  handle  Null  handle  Method  Checked  Exceptions  translate  deref  translate  Parameter  translate  Literal  translate  List  translate  List  translate  List  translate  List  translate  Table  Function  translate  Condition  translate  Constructor  is  Nullable  is  Known  Nullable  set  Nullable  set  Nullable  set  Block  set  Correlates  with  Conformance  nullify  Type  java  Primitive  get  Root  scale  Interval  To  Number  field  Input  Getter  Impl  field  Always  Null,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code,0,0
663,translate  Call,Rex  Imp  Table  Null  As  Rex  To  Lix  Translator,Expression,,get  Operator  get  implement,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code,Rex  To  Lix  Translator,java  to  sql  method  map  type  Factory  builder  program  conformance  root  input  Getter  list  expr  Nullable  Map  parent  correlates  Input  Getter  Impl  inputs  Always  Null  instance,find  Method  Rex  To  Lix  Translator  translate  Projects  translate  Table  Function  for  Aggregation  translate  translate  translate  translate  translate  Cast  handle  Null  Unboxing  If  Necessary  handle  Null  handle  Method  Checked  Exceptions  translate  deref  translate  Parameter  translate  Literal  translate  List  translate  List  translate  List  translate  List  translate  Table  Function  translate  Condition  translate  Constructor  is  Nullable  is  Known  Nullable  set  Nullable  set  Nullable  set  Block  set  Correlates  with  Conformance  nullify  Type  java  Primitive  get  Root  scale  Interval  To  Number  field  Input  Getter  Impl  field  Always  Null,1,1
664,translate  Table  Function,Java  Type  Factory  Sql  Conformance  Block  Builder  Expression  Rex  Call  Expression  Phys  Type  Phys  Type,Expression,,translate  Table  Function  empty  Map,Rex  To  Lix  Translator,java  to  sql  method  map  type  Factory  builder  program  conformance  root  input  Getter  list  expr  Nullable  Map  parent  correlates  Input  Getter  Impl  inputs  Always  Null  instance,find  Method  Rex  To  Lix  Translator  translate  Projects  for  Aggregation  translate  translate  translate  translate  translate  Cast  handle  Null  Unboxing  If  Necessary  handle  Null  handle  Method  Checked  Exceptions  translate  deref  translate  Parameter  translate  Literal  translate  List  translate  List  translate  List  translate  List  translate  Table  Function  translate  Condition  translate  Constructor  is  Nullable  is  Known  Nullable  set  Nullable  set  Nullable  set  Block  set  Correlates  with  Conformance  nullify  Type  java  Primitive  get  Root  scale  Interval  To  Number  field  Input  Getter  Impl  field  Always  Null,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code  translate  Call,0,0
665,translate  Table  Function,Java  Type  Factory  Sql  Conformance  Block  Builder  Expression  Rex  Call  Expression  Phys  Type  Phys  Type,Expression,,translate  Table  Function  empty  Map,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code  translate  Call,Rex  To  Lix  Translator,java  to  sql  method  map  type  Factory  builder  program  conformance  root  input  Getter  list  expr  Nullable  Map  parent  correlates  Input  Getter  Impl  inputs  Always  Null  instance,find  Method  Rex  To  Lix  Translator  translate  Projects  for  Aggregation  translate  translate  translate  translate  translate  Cast  handle  Null  Unboxing  If  Necessary  handle  Null  handle  Method  Checked  Exceptions  translate  deref  translate  Parameter  translate  Literal  translate  List  translate  List  translate  List  translate  List  translate  Table  Function  translate  Condition  translate  Constructor  is  Nullable  is  Known  Nullable  set  Nullable  set  Nullable  set  Block  set  Correlates  with  Conformance  nullify  Type  java  Primitive  get  Root  scale  Interval  To  Number  field  Input  Getter  Impl  field  Always  Null,1,0
666,implement  Lambda  Factory,Block  Builder  Phys  Type  List  Agg  Imp  State  Expression  boolean  Enumerable  Aggregate,void,,parameter  new  Name  add  declare  new  equals  add  statement  call  new  generate  Collation  Key  get  Field  Collations  add  statement  call  new  add  declare  new  parameter  new  Name  add  declare  new  add  statement  call  add  declare  new,Enumerable  Aggregate,Agg  Context  Impl  agg  type  Factory,Enumerable  Aggregate  Enumerable  Aggregate  copy  implement  rex  Arguments  rex  Filter  Argument  row  Translator  has  Ordered  Call  declare  Parent  Accumulator  Agg  Context  Impl  aggregation  return  Rel  Type  return  Type  parameter  Rel  Types  parameter  Types  group  Sets  key  Ordinals  key  Rel  Types  key  Types,Parameter  Expression,seq  modifier  name,Parameter  Expression  Parameter  Expression  accept  accept  evaluate  accept  decl  String  decl  String  equals  hash  Code,0,0
667,implement  Lambda  Factory,Block  Builder  Phys  Type  List  Agg  Imp  State  Expression  boolean  Enumerable  Aggregate,void,,parameter  new  Name  add  declare  new  equals  add  statement  call  new  generate  Collation  Key  get  Field  Collations  add  statement  call  new  add  declare  new  parameter  new  Name  add  declare  new  add  statement  call  add  declare  new,Parameter  Expression,seq  modifier  name,Parameter  Expression  Parameter  Expression  accept  accept  evaluate  accept  decl  String  decl  String  equals  hash  Code,Enumerable  Aggregate,Agg  Context  Impl  agg  type  Factory,Enumerable  Aggregate  Enumerable  Aggregate  copy  implement  rex  Arguments  rex  Filter  Argument  row  Translator  has  Ordered  Call  declare  Parent  Accumulator  Agg  Context  Impl  aggregation  return  Rel  Type  return  Type  parameter  Rel  Types  parameter  Types  group  Sets  key  Ordinals  key  Rel  Types  key  Types,1,1
668,is  Implementor  Defined,Rex  Call,boolean,,get  Operator  get  get  Operator,Enumerable  Table  Function  Scan,,Enumerable  Table  Function  Scan  copy  implement  is  Queryable  default  Table  Function  Implement,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code  translate  Call,0,0
669,is  Implementor  Defined,Rex  Call,boolean,,get  Operator  get  get  Operator,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code  translate  Call,Enumerable  Table  Function  Scan,,Enumerable  Table  Function  Scan  copy  implement  is  Queryable  default  Table  Function  Implement,1,0
670,tvf  Implementor  Based  Implement,Enumerable  Rel  Prefer  Enumerable  Table  Function  Scan,Enumerable  Rel  Result,,get  Type  Factory  get  get  Inputs  visit  Child  of  get  Row  Type  prefer  append  get  Or  Default  add  translate  Table  Function  get  Call  result  to  Block,Enumerable  Table  Function  Scan,,Enumerable  Table  Function  Scan  copy  implement  is  Implementor  Defined  is  Queryable  default  Table  Function  Implement,Enumerable  Rel  Implementor,map  corr  Vars  stashed  Parameters  all  Correlate  Variables  Type  Finder  types  Type  Registrar  member  Declarations  seen,Enumerable  Rel  Implementor  visit  Child  implement  Root  class  Decl  stash  register  Correl  Variable  clear  Correl  Variable  get  Correl  Variable  Getter  result  get  Conformance  Type  Finder  visit  visit  visit  visit  visit  Type  Registrar  register  go,0,0
671,tvf  Implementor  Based  Implement,Enumerable  Rel  Prefer  Enumerable  Table  Function  Scan,Enumerable  Rel  Result,,get  Type  Factory  get  get  Inputs  visit  Child  of  get  Row  Type  prefer  append  get  Or  Default  add  translate  Table  Function  get  Call  result  to  Block,Enumerable  Rel  Implementor,map  corr  Vars  stashed  Parameters  all  Correlate  Variables  Type  Finder  types  Type  Registrar  member  Declarations  seen,Enumerable  Rel  Implementor  visit  Child  implement  Root  class  Decl  stash  register  Correl  Variable  clear  Correl  Variable  get  Correl  Variable  Getter  result  get  Conformance  Type  Finder  visit  visit  visit  visit  visit  Type  Registrar  register  go,Enumerable  Table  Function  Scan,,Enumerable  Table  Function  Scan  copy  implement  is  Implementor  Defined  is  Queryable  default  Table  Function  Implement,1,1
672,analyze,Sql  Validator  String  Sql  Node  Rel  Root  boolean,Analyze  View  Result,,,Calcite  Prepare  Impl,enable  enumerable  enable  stream  enumerable  rules  enable  Bindable  simple  sqls  Calcite  Preparing  Stmt  planner  rex  Builder  prepare  schema  type  Factory  convertlet  Table  prefer  cluster  internal  Parameters  expansion  Depth  sql  Validator  Calcite  Prepared  Explain  Empty  Scalar  Translator  rex  Builder  Lambda  Scalar  Translator  parameter  List  values,Calcite  Prepare  Impl  parse  convert  analyze  View  parse  convert  execute  Ddl  create  Parser  create  Parser  create  Parser  Config  create  Convertlet  Table  create  Cluster  create  Planner  Factories  create  Planner  create  Planner  add  Rule  remove  Rule  prepare  Queryable  prepare  Sql  prepare  simple  Prepare  get  Statement  Type  get  Statement  Type  prepare  get  Column  Meta  Data  List  meta  Data  avatica  Type  origin  get  Type  Ordinal  get  Class  Name  get  Scale  get  Precision  get  Type  Name  populate  Materializations  make  Struct  perform  perform  Calcite  Preparing  Stmt  init  prepare  Queryable  prepare  Rel  prepare  get  Sql  To  Rel  Converter  flatten  Types  decorrelate  expand  View  create  Sql  Validator  get  Sql  Validator  create  Prepared  Explanation  implement  get  Code  get  Bindable  get  Element  Type  get  Materializations  get  Lattices  Calcite  Prepared  Explain  get  Bindable  to  Rex  to  Rex  List  to  Rex  bind  Empty  Scalar  Translator  empty  to  Rex  List  to  Rex  simple  List  to  Rex  binary  to  Rex  type  bind  parameter  Lambda  Scalar  Translator  parameter,Rel  Root,rel  validated  Row  Type  kind  fields  collation  hints,Rel  Root  of  of  to  String  with  Rel  with  Collation  with  Hints  project  project  is  Name  Trivial  is  Ref  Trivial  is  Collation  Trivial,0,0
673,analyze,Sql  Validator  String  Sql  Node  Rel  Root  boolean,Analyze  View  Result,,,Rel  Root,rel  validated  Row  Type  kind  fields  collation  hints,Rel  Root  of  of  to  String  with  Rel  with  Collation  with  Hints  project  project  is  Name  Trivial  is  Ref  Trivial  is  Collation  Trivial,Calcite  Prepare  Impl,enable  enumerable  enable  stream  enumerable  rules  enable  Bindable  simple  sqls  Calcite  Preparing  Stmt  planner  rex  Builder  prepare  schema  type  Factory  convertlet  Table  prefer  cluster  internal  Parameters  expansion  Depth  sql  Validator  Calcite  Prepared  Explain  Empty  Scalar  Translator  rex  Builder  Lambda  Scalar  Translator  parameter  List  values,Calcite  Prepare  Impl  parse  convert  analyze  View  parse  convert  execute  Ddl  create  Parser  create  Parser  create  Parser  Config  create  Convertlet  Table  create  Cluster  create  Planner  Factories  create  Planner  create  Planner  add  Rule  remove  Rule  prepare  Queryable  prepare  Sql  prepare  simple  Prepare  get  Statement  Type  get  Statement  Type  prepare  get  Column  Meta  Data  List  meta  Data  avatica  Type  origin  get  Type  Ordinal  get  Class  Name  get  Scale  get  Precision  get  Type  Name  populate  Materializations  make  Struct  perform  perform  Calcite  Preparing  Stmt  init  prepare  Queryable  prepare  Rel  prepare  get  Sql  To  Rel  Converter  flatten  Types  decorrelate  expand  View  create  Sql  Validator  get  Sql  Validator  create  Prepared  Explanation  implement  get  Code  get  Bindable  get  Element  Type  get  Materializations  get  Lattices  Calcite  Prepared  Explain  get  Bindable  to  Rex  to  Rex  List  to  Rex  bind  Empty  Scalar  Translator  empty  to  Rex  List  to  Rex  simple  List  to  Rex  binary  to  Rex  type  bind  parameter  Lambda  Scalar  Translator  parameter,1,0
674,analyze,Sql  Validator  String  Sql  Node  Rel  Root  boolean,Analyze  View  Result,,,Calcite  Prepare  Impl,enable  enumerable  enable  stream  enumerable  rules  enable  Bindable  simple  sqls  Calcite  Preparing  Stmt  planner  rex  Builder  prepare  schema  type  Factory  convertlet  Table  prefer  cluster  internal  Parameters  expansion  Depth  sql  Validator  Calcite  Prepared  Explain  Empty  Scalar  Translator  rex  Builder  Lambda  Scalar  Translator  parameter  List  values,Calcite  Prepare  Impl  parse  convert  analyze  View  parse  convert  execute  Ddl  create  Parser  create  Parser  create  Parser  Config  create  Convertlet  Table  create  Cluster  create  Planner  Factories  create  Planner  create  Planner  add  Rule  remove  Rule  prepare  Queryable  prepare  Sql  prepare  simple  Prepare  get  Statement  Type  get  Statement  Type  prepare  get  Column  Meta  Data  List  meta  Data  avatica  Type  origin  get  Type  Ordinal  get  Class  Name  get  Scale  get  Precision  get  Type  Name  populate  Materializations  make  Struct  perform  perform  Calcite  Preparing  Stmt  init  prepare  Queryable  prepare  Rel  prepare  get  Sql  To  Rel  Converter  flatten  Types  decorrelate  expand  View  create  Sql  Validator  get  Sql  Validator  create  Prepared  Explanation  implement  get  Code  get  Bindable  get  Element  Type  get  Materializations  get  Lattices  Calcite  Prepared  Explain  get  Bindable  to  Rex  to  Rex  List  to  Rex  bind  Empty  Scalar  Translator  empty  to  Rex  List  to  Rex  simple  List  to  Rex  binary  to  Rex  type  bind  parameter  Lambda  Scalar  Translator  parameter,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
675,analyze,Sql  Validator  String  Sql  Node  Rel  Root  boolean,Analyze  View  Result,,,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Calcite  Prepare  Impl,enable  enumerable  enable  stream  enumerable  rules  enable  Bindable  simple  sqls  Calcite  Preparing  Stmt  planner  rex  Builder  prepare  schema  type  Factory  convertlet  Table  prefer  cluster  internal  Parameters  expansion  Depth  sql  Validator  Calcite  Prepared  Explain  Empty  Scalar  Translator  rex  Builder  Lambda  Scalar  Translator  parameter  List  values,Calcite  Prepare  Impl  parse  convert  analyze  View  parse  convert  execute  Ddl  create  Parser  create  Parser  create  Parser  Config  create  Convertlet  Table  create  Cluster  create  Planner  Factories  create  Planner  create  Planner  add  Rule  remove  Rule  prepare  Queryable  prepare  Sql  prepare  simple  Prepare  get  Statement  Type  get  Statement  Type  prepare  get  Column  Meta  Data  List  meta  Data  avatica  Type  origin  get  Type  Ordinal  get  Class  Name  get  Scale  get  Precision  get  Type  Name  populate  Materializations  make  Struct  perform  perform  Calcite  Preparing  Stmt  init  prepare  Queryable  prepare  Rel  prepare  get  Sql  To  Rel  Converter  flatten  Types  decorrelate  expand  View  create  Sql  Validator  get  Sql  Validator  create  Prepared  Explanation  implement  get  Code  get  Bindable  get  Element  Type  get  Materializations  get  Lattices  Calcite  Prepared  Explain  get  Bindable  to  Rex  to  Rex  List  to  Rex  bind  Empty  Scalar  Translator  empty  to  Rex  List  to  Rex  simple  List  to  Rex  binary  to  Rex  type  bind  parameter  Lambda  Scalar  Translator  parameter,1,0
676,create  Sql  Validator,Calcite  Prepare  Context  Calcite  Prepare  Impl,Sql  Validator,,fun  config  instance  of  get  Type  Factory  config  with  Identifier  Expansion  with  Default  Null  Collation  with  Sql  Conformance  with  Lenient  Operator  Lookup  lenient  Operator  Lookup  conformance  default  Null  Collation,Calcite  Prepare  Impl,enable  enumerable  enable  stream  enumerable  rules  enable  Bindable  simple  sqls  Calcite  Preparing  Stmt  planner  rex  Builder  prepare  schema  type  Factory  convertlet  Table  prefer  cluster  internal  Parameters  expansion  Depth  sql  Validator  Calcite  Prepared  Explain  Empty  Scalar  Translator  rex  Builder  Lambda  Scalar  Translator  parameter  List  values,Calcite  Prepare  Impl  parse  convert  analyze  View  parse  convert  analyze  execute  Ddl  create  Parser  create  Parser  create  Parser  Config  create  Convertlet  Table  create  Cluster  create  Planner  Factories  create  Planner  create  Planner  add  Rule  remove  Rule  prepare  Queryable  prepare  Sql  prepare  simple  Prepare  get  Statement  Type  get  Statement  Type  prepare  get  Column  Meta  Data  List  meta  Data  avatica  Type  origin  get  Type  Ordinal  get  Class  Name  get  Scale  get  Precision  get  Type  Name  populate  Materializations  make  Struct  perform  perform  Calcite  Preparing  Stmt  init  prepare  Queryable  prepare  Rel  prepare  get  Sql  To  Rel  Converter  flatten  Types  decorrelate  expand  View  get  Sql  Validator  create  Prepared  Explanation  implement  get  Code  get  Bindable  get  Element  Type  get  Materializations  get  Lattices  Calcite  Prepared  Explain  get  Bindable  to  Rex  to  Rex  List  to  Rex  bind  Empty  Scalar  Translator  empty  to  Rex  List  to  Rex  simple  List  to  Rex  binary  to  Rex  type  bind  parameter  Lambda  Scalar  Translator  parameter,Calcite  Catalog  Reader,root  Schema  type  Factory  schema  Paths  name  Matcher  config,Calcite  Catalog  Reader  Calcite  Catalog  Reader  with  Schema  Path  get  Table  get  Config  get  Functions  From  get  Named  Type  get  All  Schema  Object  Names  moniker  get  Schema  Paths  get  Table  For  Member  field  matches  create  Type  From  Projection  lookup  Operator  Overloads  operator  Table  to  Op  to  Op  infer  infer  to  Sql  to  Sql  get  Operator  List  get  Root  Schema  get  Type  Factory  register  Rules  is  Case  Sensitive  name  Matcher  unwrap,0,0
677,create  Sql  Validator,Calcite  Prepare  Context  Calcite  Prepare  Impl,Sql  Validator,,fun  config  instance  of  get  Type  Factory  config  with  Identifier  Expansion  with  Default  Null  Collation  with  Sql  Conformance  with  Lenient  Operator  Lookup  lenient  Operator  Lookup  conformance  default  Null  Collation,Calcite  Catalog  Reader,root  Schema  type  Factory  schema  Paths  name  Matcher  config,Calcite  Catalog  Reader  Calcite  Catalog  Reader  with  Schema  Path  get  Table  get  Config  get  Functions  From  get  Named  Type  get  All  Schema  Object  Names  moniker  get  Schema  Paths  get  Table  For  Member  field  matches  create  Type  From  Projection  lookup  Operator  Overloads  operator  Table  to  Op  to  Op  infer  infer  to  Sql  to  Sql  get  Operator  List  get  Root  Schema  get  Type  Factory  register  Rules  is  Case  Sensitive  name  Matcher  unwrap,Calcite  Prepare  Impl,enable  enumerable  enable  stream  enumerable  rules  enable  Bindable  simple  sqls  Calcite  Preparing  Stmt  planner  rex  Builder  prepare  schema  type  Factory  convertlet  Table  prefer  cluster  internal  Parameters  expansion  Depth  sql  Validator  Calcite  Prepared  Explain  Empty  Scalar  Translator  rex  Builder  Lambda  Scalar  Translator  parameter  List  values,Calcite  Prepare  Impl  parse  convert  analyze  View  parse  convert  analyze  execute  Ddl  create  Parser  create  Parser  create  Parser  Config  create  Convertlet  Table  create  Cluster  create  Planner  Factories  create  Planner  create  Planner  add  Rule  remove  Rule  prepare  Queryable  prepare  Sql  prepare  simple  Prepare  get  Statement  Type  get  Statement  Type  prepare  get  Column  Meta  Data  List  meta  Data  avatica  Type  origin  get  Type  Ordinal  get  Class  Name  get  Scale  get  Precision  get  Type  Name  populate  Materializations  make  Struct  perform  perform  Calcite  Preparing  Stmt  init  prepare  Queryable  prepare  Rel  prepare  get  Sql  To  Rel  Converter  flatten  Types  decorrelate  expand  View  get  Sql  Validator  create  Prepared  Explanation  implement  get  Code  get  Bindable  get  Element  Type  get  Materializations  get  Lattices  Calcite  Prepared  Explain  get  Bindable  to  Rex  to  Rex  List  to  Rex  bind  Empty  Scalar  Translator  empty  to  Rex  List  to  Rex  simple  List  to  Rex  binary  to  Rex  type  bind  parameter  Lambda  Scalar  Translator  parameter,1,1
678,moniker,Calcite  Schema  String  Sql  Moniker  Type,Sql  Moniker  Impl,name,path  size  equals  root,Calcite  Catalog  Reader,root  Schema  type  Factory  schema  Paths  name  Matcher  config,Calcite  Catalog  Reader  Calcite  Catalog  Reader  with  Schema  Path  get  Table  get  Config  get  Functions  From  get  Named  Type  get  All  Schema  Object  Names  get  Schema  Paths  get  Table  For  Member  field  matches  create  Type  From  Projection  lookup  Operator  Overloads  operator  Table  to  Op  to  Op  infer  infer  to  Sql  to  Sql  get  Operator  List  get  Root  Schema  get  Type  Factory  register  Rules  is  Case  Sensitive  name  Matcher  unwrap  create  Sql  Validator,Calcite  Schema,parent  schema  name  table  Map  function  Map  type  Map  lattice  Map  function  Names  nullary  Function  Map  sub  Schema  Map  path  Entry  schema  name  Table  Entry  sqls  Type  Entry  Function  Entry  Lattice  Entry  Schema  Plus  Impl  Table  Entry  Impl  table  Type  Entry  Impl  proto  Data  Type  Function  Entry  Impl  function  Lattice  Entry  Impl  lattice  star  Table  Entry,Calcite  Schema  get  Implicit  Sub  Schema  get  Implicit  Table  get  Implicit  Type  get  Implicit  Table  Based  On  Nullary  Function  add  Implicit  Sub  Schema  To  Builder  add  Implicit  Table  To  Builder  add  Implicit  Functions  To  Builder  add  Implicit  Func  Names  To  Builder  add  Implicit  Type  Names  To  Builder  add  Implicit  Tables  Based  On  Nullary  Functions  To  Builder  snapshot  is  Cache  Enabled  set  Cache  table  Entry  type  Entry  add  add  add  add  add  root  is  Root  path  get  Sub  Schema  add  get  Table  By  Sql  get  Table  get  Name  plus  from  get  Path  get  Sub  Schema  Map  get  Lattice  Map  get  Table  Names  get  Type  Names  get  Type  get  Functions  get  Function  Names  get  Tables  Based  On  Nullary  Functions  get  Table  Based  On  Nullary  Function  create  Snapshot  find  find  create  Root  Schema  create  Root  Schema  create  Root  Schema  create  Root  Schema  remove  Sub  Schema  remove  Table  remove  Function  remove  Type  connect  Entry  path  Table  Entry  get  Table  Type  Entry  get  Type  Function  Entry  get  Function  is  Materialization  Lattice  Entry  get  Lattice  get  Star  Table  calcite  Schema  get  Parent  Schema  get  Name  is  Mutable  set  Cache  Enabled  is  Cache  Enabled  snapshot  get  Expression  get  Table  get  Table  Names  get  Type  get  Type  Names  get  Functions  get  Function  Names  get  Sub  Schema  get  Sub  Schema  Names  add  unwrap  set  Path  add  add  add  add  Table  Entry  Impl  get  Table  Type  Entry  Impl  get  Type  Function  Entry  Impl  get  Function  is  Materialization  Lattice  Entry  Impl  get  Lattice  get  Star  Table,0,0
679,moniker,Calcite  Schema  String  Sql  Moniker  Type,Sql  Moniker  Impl,name,path  size  equals  root,Calcite  Schema,parent  schema  name  table  Map  function  Map  type  Map  lattice  Map  function  Names  nullary  Function  Map  sub  Schema  Map  path  Entry  schema  name  Table  Entry  sqls  Type  Entry  Function  Entry  Lattice  Entry  Schema  Plus  Impl  Table  Entry  Impl  table  Type  Entry  Impl  proto  Data  Type  Function  Entry  Impl  function  Lattice  Entry  Impl  lattice  star  Table  Entry,Calcite  Schema  get  Implicit  Sub  Schema  get  Implicit  Table  get  Implicit  Type  get  Implicit  Table  Based  On  Nullary  Function  add  Implicit  Sub  Schema  To  Builder  add  Implicit  Table  To  Builder  add  Implicit  Functions  To  Builder  add  Implicit  Func  Names  To  Builder  add  Implicit  Type  Names  To  Builder  add  Implicit  Tables  Based  On  Nullary  Functions  To  Builder  snapshot  is  Cache  Enabled  set  Cache  table  Entry  type  Entry  add  add  add  add  add  root  is  Root  path  get  Sub  Schema  add  get  Table  By  Sql  get  Table  get  Name  plus  from  get  Path  get  Sub  Schema  Map  get  Lattice  Map  get  Table  Names  get  Type  Names  get  Type  get  Functions  get  Function  Names  get  Tables  Based  On  Nullary  Functions  get  Table  Based  On  Nullary  Function  create  Snapshot  find  find  create  Root  Schema  create  Root  Schema  create  Root  Schema  create  Root  Schema  remove  Sub  Schema  remove  Table  remove  Function  remove  Type  connect  Entry  path  Table  Entry  get  Table  Type  Entry  get  Type  Function  Entry  get  Function  is  Materialization  Lattice  Entry  get  Lattice  get  Star  Table  calcite  Schema  get  Parent  Schema  get  Name  is  Mutable  set  Cache  Enabled  is  Cache  Enabled  snapshot  get  Expression  get  Table  get  Table  Names  get  Type  get  Type  Names  get  Functions  get  Function  Names  get  Sub  Schema  get  Sub  Schema  Names  add  unwrap  set  Path  add  add  add  add  Table  Entry  Impl  get  Table  Type  Entry  Impl  get  Type  Function  Entry  Impl  get  Function  is  Materialization  Lattice  Entry  Impl  get  Lattice  get  Star  Table,Calcite  Catalog  Reader,root  Schema  type  Factory  schema  Paths  name  Matcher  config,Calcite  Catalog  Reader  Calcite  Catalog  Reader  with  Schema  Path  get  Table  get  Config  get  Functions  From  get  Named  Type  get  All  Schema  Object  Names  get  Schema  Paths  get  Table  For  Member  field  matches  create  Type  From  Projection  lookup  Operator  Overloads  operator  Table  to  Op  to  Op  infer  infer  to  Sql  to  Sql  get  Operator  List  get  Root  Schema  get  Type  Factory  register  Rules  is  Case  Sensitive  name  Matcher  unwrap  create  Sql  Validator,1,0
680,decorrelate  Rel,Rel  Decorrelator,Rel  Decorrelator  Frame,,contains  Correlation  get  Period  decorrelate  Rel,Rel  Decorrelator,sqlrel  logger  rel  Builder  cm  dispatcher  current  Rel  context  map  generated  Cor  Rels  Decorrelate  Rex  Shuttle  current  Rel  map  cm  Remove  Correlation  Rex  Shuttle  rex  Builder  type  Factory  project  Pulled  Above  Left  Correlator  null  Indicator  is  Count  Remove  Single  Aggregate  Rule  Remove  Correlation  For  Scalar  Project  Rule  Remove  Correlation  For  Scalar  Aggregate  Rule  Adjust  Project  For  Count  Aggregate  Rule  flavor  Cor  Ref  unique  Key  corr  field  Cor  Def  corr  field  Corel  Map  map  Ref  Rel  To  Cor  Ref  map  Cor  To  Cor  Rel  map  Field  Access  To  Cor  Ref  Corel  Map  Builder  map  Cor  To  Cor  Rel  map  Ref  Rel  To  Cor  Ref  map  Field  Access  To  Cor  Var  offset  corr  Id  Generator  Frame  r  cor  Def  Outputs  old  To  New  Outputs,Rel  Decorrelator  decorrelate  Query  decorrelate  Query  set  Current  rel  Builder  Factory  decorrelate  create  Copy  Hook  create  Planner  remove  Correlation  Via  Rule  decorrelate  Expr  remove  Correlation  Expr  remove  Correlation  Expr  remove  Correlation  Expr  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  shift  Mapping  get  Invoke  projected  Literal  decorrelate  Rel  decorrelate  Rel  create  Value  Generator  get  Frame  get  Cor  Rel  maybe  Add  Value  Generator  has  All  has  decorrelate  Input  With  Value  Generator  find  Correlation  Equivalent  references  is  Widening  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  get  New  For  Old  Input  Ref  project  Join  Output  With  Nullability  aggregate  Correlator  Output  check  Cor  Vars  remove  Cor  Var  From  Tree  create  Project  With  Additional  Exprs  identity  Map  register  all  Less  Than  strip  Hep  Decorrelate  Rex  Shuttle  visit  Field  Access  visit  Input  Ref  Remove  Correlation  Rex  Shuttle  create  Case  Expression  visit  Field  Access  visit  Input  Ref  visit  Literal  visit  Call  Remove  Single  Aggregate  Rule  on  Match  Remove  Correlation  For  Scalar  Project  Rule  on  Match  Remove  Correlation  For  Scalar  Aggregate  Rule  on  Match  Adjust  Project  For  Count  Aggregate  Rule  on  Match  on  Match  Cor  Ref  to  String  hash  Code  equals  compare  To  def  Cor  Def  to  String  hash  Code  equals  compare  To  Corel  Map  to  String  equals  hash  Code  of  get  Map  Cor  To  Cor  Rel  has  Correlation  build  visit  visit  Child  visit  Join  rex  Visitor  visit  Field  Access  visit  Sub  Query  Frame,Logical  Snapshot,,Logical  Snapshot  copy  create,0,0
681,decorrelate  Rel,Rel  Decorrelator,Rel  Decorrelator  Frame,,contains  Correlation  get  Period  decorrelate  Rel,Logical  Snapshot,,Logical  Snapshot  copy  create,Rel  Decorrelator,sqlrel  logger  rel  Builder  cm  dispatcher  current  Rel  context  map  generated  Cor  Rels  Decorrelate  Rex  Shuttle  current  Rel  map  cm  Remove  Correlation  Rex  Shuttle  rex  Builder  type  Factory  project  Pulled  Above  Left  Correlator  null  Indicator  is  Count  Remove  Single  Aggregate  Rule  Remove  Correlation  For  Scalar  Project  Rule  Remove  Correlation  For  Scalar  Aggregate  Rule  Adjust  Project  For  Count  Aggregate  Rule  flavor  Cor  Ref  unique  Key  corr  field  Cor  Def  corr  field  Corel  Map  map  Ref  Rel  To  Cor  Ref  map  Cor  To  Cor  Rel  map  Field  Access  To  Cor  Ref  Corel  Map  Builder  map  Cor  To  Cor  Rel  map  Ref  Rel  To  Cor  Ref  map  Field  Access  To  Cor  Var  offset  corr  Id  Generator  Frame  r  cor  Def  Outputs  old  To  New  Outputs,Rel  Decorrelator  decorrelate  Query  decorrelate  Query  set  Current  rel  Builder  Factory  decorrelate  create  Copy  Hook  create  Planner  remove  Correlation  Via  Rule  decorrelate  Expr  remove  Correlation  Expr  remove  Correlation  Expr  remove  Correlation  Expr  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  shift  Mapping  get  Invoke  projected  Literal  decorrelate  Rel  decorrelate  Rel  create  Value  Generator  get  Frame  get  Cor  Rel  maybe  Add  Value  Generator  has  All  has  decorrelate  Input  With  Value  Generator  find  Correlation  Equivalent  references  is  Widening  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  get  New  For  Old  Input  Ref  project  Join  Output  With  Nullability  aggregate  Correlator  Output  check  Cor  Vars  remove  Cor  Var  From  Tree  create  Project  With  Additional  Exprs  identity  Map  register  all  Less  Than  strip  Hep  Decorrelate  Rex  Shuttle  visit  Field  Access  visit  Input  Ref  Remove  Correlation  Rex  Shuttle  create  Case  Expression  visit  Field  Access  visit  Input  Ref  visit  Literal  visit  Call  Remove  Single  Aggregate  Rule  on  Match  Remove  Correlation  For  Scalar  Project  Rule  on  Match  Remove  Correlation  For  Scalar  Aggregate  Rule  on  Match  Adjust  Project  For  Count  Aggregate  Rule  on  Match  on  Match  Cor  Ref  to  String  hash  Code  equals  compare  To  def  Cor  Def  to  String  hash  Code  equals  compare  To  Corel  Map  to  String  equals  hash  Code  of  get  Map  Cor  To  Cor  Rel  has  Correlation  build  visit  visit  Child  visit  Join  rex  Visitor  visit  Field  Access  visit  Sub  Query  Frame,1,1
682,decorrelate  Rel,Rel  Decorrelator,Rel  Decorrelator  Frame,,contains  Correlation  get  Period  decorrelate  Rel,Rel  Decorrelator,sqlrel  logger  rel  Builder  cm  dispatcher  current  Rel  context  map  generated  Cor  Rels  Decorrelate  Rex  Shuttle  current  Rel  map  cm  Remove  Correlation  Rex  Shuttle  rex  Builder  type  Factory  project  Pulled  Above  Left  Correlator  null  Indicator  is  Count  Remove  Single  Aggregate  Rule  Remove  Correlation  For  Scalar  Project  Rule  Remove  Correlation  For  Scalar  Aggregate  Rule  Adjust  Project  For  Count  Aggregate  Rule  flavor  Cor  Ref  unique  Key  corr  field  Cor  Def  corr  field  Corel  Map  map  Ref  Rel  To  Cor  Ref  map  Cor  To  Cor  Rel  map  Field  Access  To  Cor  Ref  Corel  Map  Builder  map  Cor  To  Cor  Rel  map  Ref  Rel  To  Cor  Ref  map  Field  Access  To  Cor  Var  offset  corr  Id  Generator  Frame  r  cor  Def  Outputs  old  To  New  Outputs,Rel  Decorrelator  decorrelate  Query  decorrelate  Query  set  Current  rel  Builder  Factory  decorrelate  create  Copy  Hook  create  Planner  remove  Correlation  Via  Rule  decorrelate  Expr  remove  Correlation  Expr  remove  Correlation  Expr  remove  Correlation  Expr  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  shift  Mapping  get  Invoke  projected  Literal  decorrelate  Rel  decorrelate  Rel  create  Value  Generator  get  Frame  get  Cor  Rel  maybe  Add  Value  Generator  has  All  has  decorrelate  Input  With  Value  Generator  find  Correlation  Equivalent  references  is  Widening  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  get  New  For  Old  Input  Ref  project  Join  Output  With  Nullability  aggregate  Correlator  Output  check  Cor  Vars  remove  Cor  Var  From  Tree  create  Project  With  Additional  Exprs  identity  Map  register  all  Less  Than  strip  Hep  Decorrelate  Rex  Shuttle  visit  Field  Access  visit  Input  Ref  Remove  Correlation  Rex  Shuttle  create  Case  Expression  visit  Field  Access  visit  Input  Ref  visit  Literal  visit  Call  Remove  Single  Aggregate  Rule  on  Match  Remove  Correlation  For  Scalar  Project  Rule  on  Match  Remove  Correlation  For  Scalar  Aggregate  Rule  on  Match  Adjust  Project  For  Count  Aggregate  Rule  on  Match  on  Match  Cor  Ref  to  String  hash  Code  equals  compare  To  def  Cor  Def  to  String  hash  Code  equals  compare  To  Corel  Map  to  String  equals  hash  Code  of  get  Map  Cor  To  Cor  Rel  has  Correlation  build  visit  visit  Child  visit  Join  rex  Visitor  visit  Field  Access  visit  Sub  Query  Frame,Logical  Table  Function  Scan,,Logical  Table  Function  Scan  Logical  Table  Function  Scan  Logical  Table  Function  Scan  create  copy  compute  Self  Cost,0,0
683,decorrelate  Rel,Rel  Decorrelator,Rel  Decorrelator  Frame,,contains  Correlation  get  Period  decorrelate  Rel,Logical  Table  Function  Scan,,Logical  Table  Function  Scan  Logical  Table  Function  Scan  Logical  Table  Function  Scan  create  copy  compute  Self  Cost,Rel  Decorrelator,sqlrel  logger  rel  Builder  cm  dispatcher  current  Rel  context  map  generated  Cor  Rels  Decorrelate  Rex  Shuttle  current  Rel  map  cm  Remove  Correlation  Rex  Shuttle  rex  Builder  type  Factory  project  Pulled  Above  Left  Correlator  null  Indicator  is  Count  Remove  Single  Aggregate  Rule  Remove  Correlation  For  Scalar  Project  Rule  Remove  Correlation  For  Scalar  Aggregate  Rule  Adjust  Project  For  Count  Aggregate  Rule  flavor  Cor  Ref  unique  Key  corr  field  Cor  Def  corr  field  Corel  Map  map  Ref  Rel  To  Cor  Ref  map  Cor  To  Cor  Rel  map  Field  Access  To  Cor  Ref  Corel  Map  Builder  map  Cor  To  Cor  Rel  map  Ref  Rel  To  Cor  Ref  map  Field  Access  To  Cor  Var  offset  corr  Id  Generator  Frame  r  cor  Def  Outputs  old  To  New  Outputs,Rel  Decorrelator  decorrelate  Query  decorrelate  Query  set  Current  rel  Builder  Factory  decorrelate  create  Copy  Hook  create  Planner  remove  Correlation  Via  Rule  decorrelate  Expr  remove  Correlation  Expr  remove  Correlation  Expr  remove  Correlation  Expr  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  shift  Mapping  get  Invoke  projected  Literal  decorrelate  Rel  decorrelate  Rel  create  Value  Generator  get  Frame  get  Cor  Rel  maybe  Add  Value  Generator  has  All  has  decorrelate  Input  With  Value  Generator  find  Correlation  Equivalent  references  is  Widening  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  decorrelate  Rel  get  New  For  Old  Input  Ref  project  Join  Output  With  Nullability  aggregate  Correlator  Output  check  Cor  Vars  remove  Cor  Var  From  Tree  create  Project  With  Additional  Exprs  identity  Map  register  all  Less  Than  strip  Hep  Decorrelate  Rex  Shuttle  visit  Field  Access  visit  Input  Ref  Remove  Correlation  Rex  Shuttle  create  Case  Expression  visit  Field  Access  visit  Input  Ref  visit  Literal  visit  Call  Remove  Single  Aggregate  Rule  on  Match  Remove  Correlation  For  Scalar  Project  Rule  on  Match  Remove  Correlation  For  Scalar  Aggregate  Rule  on  Match  Adjust  Project  For  Count  Aggregate  Rule  on  Match  on  Match  Cor  Ref  to  String  hash  Code  equals  compare  To  def  Cor  Def  to  String  hash  Code  equals  compare  To  Corel  Map  to  String  equals  hash  Code  of  get  Map  Cor  To  Cor  Rel  has  Correlation  build  visit  visit  Child  visit  Join  rex  Visitor  visit  Field  Access  visit  Sub  Query  Frame,1,0
684,create  Mapping,Immutable  Bit  Set  int,Mapping,,create  cardinality  set,Rel  Field  Trimmer,trim  Fields  Dispatcher  rel  Builder  Trim  Result,Rel  Field  Trimmer  Rel  Field  Trimmer  trim  trim  Child  handle  trim  Child  Restore  dispatch  Trim  Fields  result  handle  trim  Fields  trim  Fields  dummy  Project  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  Trim  Result,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
685,create  Mapping,Immutable  Bit  Set  int,Mapping,,create  cardinality  set,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Rel  Field  Trimmer,trim  Fields  Dispatcher  rel  Builder  Trim  Result,Rel  Field  Trimmer  Rel  Field  Trimmer  trim  trim  Child  handle  trim  Child  Restore  dispatch  Trim  Fields  result  handle  trim  Fields  trim  Fields  dummy  Project  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  trim  Fields  Trim  Result,1,0
686,convert  To  Single  Value  Subq,Sql  Node  Rel  Node,Rel  Node,,get  Select  List  get  Group  size  size  get  is  Single  Value  get  Fetch  get  Fetch  get  Fetch  int  Value  get  Value  get  Operator  is  Single  Value  create  Single  Value  Agg  Rel,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
687,convert  To  Single  Value  Subq,Sql  Node  Rel  Node,Rel  Node,,get  Select  List  get  Group  size  size  get  is  Single  Value  get  Fetch  get  Fetch  get  Fetch  int  Value  get  Value  get  Operator  is  Single  Value  create  Single  Value  Agg  Rel,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,1,0
688,ensure  Sql  Type,Rel  Data  Type  Rex  Node,Rex  Node,,get  Sql  Type  Name  get  Sql  Type  Name  get  Type  get  Sql  Type  Name  get  Sql  Type  Name  get  Type  ensure  Type,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
689,ensure  Sql  Type,Rel  Data  Type  Rex  Node,Rex  Node,,get  Sql  Type  Name  get  Sql  Type  Name  get  Type  get  Sql  Type  Name  get  Sql  Type  Name  get  Type  ensure  Type,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,1,0
690,is  Row  Constructor,Sql  Node,boolean,,get  Kind  equals  Ignore  Case  get  Name  get  Operator,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
691,is  Row  Constructor,Sql  Node,boolean,,get  Kind  equals  Ignore  Case  get  Name  get  Operator,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,1,0
692,get  Column  Mappings,Sql  To  Rel  Converter,Set  Rel  Column  Mapping,,get  Return  Type  Inference  get  Column  Mappings,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar,0,0
693,get  Column  Mappings,Sql  To  Rel  Converter,Set  Rel  Column  Mapping,,get  Return  Type  Inference  get  Column  Mappings,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  to  String  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,1,1
694,all,Sql  Call,boolean,,is  All  get  Operator,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
695,all,Sql  Call,boolean,,is  All  get  Operator,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  cast  Null  Literal  If  Needed  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,1,0
696,cast  Null  Literal  If  Needed,Rex  Node  Rel  Data  Type,Rex  Node,,is  Null  Literal  make  Cast,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
697,cast  Null  Literal  If  Needed,Rex  Node  Rel  Data  Type,Rex  Node,,is  Null  Literal  make  Cast,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Sql  To  Rel  Converter,sqlrel  logger  two  default  in  sub  query  threshold  default  in  subquery  threshold  validator  rex  Builder  catalog  Reader  cluster  sub  Query  Converter  leaves  dynamic  Param  Sql  Nodes  op  Tab  type  Factory  expr  Converter  hint  Strategies  explain  Param  Count  config  rel  Builder  map  Correl  To  Deferred  dataset  Stack  map  Converted  Non  Corr  Subqs  view  Expander  attached  Rex  Access  Shuttle  builder  rex  Correl  var  Cols  Blackboard  scope  name  To  Node  Map  root  inputs  map  Correlate  To  Rex  is  Pattern  Var  Ref  cursors  sub  Query  List  agg  window  map  Root  Rel  To  Field  Projection  column  Monotonicities  system  Field  List  top  initializer  Expression  Factory  Deferred  Lookup  bb  original  Rel  Name  No  Op  Sub  Query  Converter  Agg  Converter  bb  aggregating  Select  Scope  name  Map  group  Exprs  auxiliary  Group  Exprs  converted  Input  Exprs  agg  Calls  agg  Mapping  agg  Call  Mapping  in  Over  Lookup  Context  rel  Offset  List  Histogram  Shuttle  enable  histogram  agg  partition  Keys  order  Keys  lower  Bound  upper  Bound  rows  allow  Partial  distinct  ignore  Nulls  Sub  Query  node  logic  expr  Aggregate  Finder  list  filter  List  order  List  Correlation  Use  id  required  Columns  r  default  Config  Builder  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table  Config  Impl  decorrelation  Enabled  trim  Unused  Fields  create  Values  Rel  explain  expand  in  Sub  Query  Threshold  rel  Builder  Factory  hint  Strategy  Table,Sql  To  Rel  Converter  Sql  To  Rel  Converter  Sql  To  Rel  Converter  get  Cluster  get  Rex  Builder  get  Dynamic  Param  Count  get  Dynamic  Param  Type  get  Dynamic  Param  Count  In  Explain  get  Map  Converted  Non  Corr  Subqs  add  Converted  Non  Corr  Subqs  set  Sub  Query  Converter  set  Dynamic  Param  Count  In  Explain  check  Converted  Type  flatten  Types  decorrelate  trim  Unused  Fields  new  Field  Trimmer  convert  Query  is  Stream  is  Ordered  required  Collation  convert  Select  create  Blackboard  convert  Select  Impl  visit  Child  distinctify  convert  Order  contains  In  Operator  visit  push  Down  Not  For  In  reg  convert  Where  replace  Sub  Queries  substitute  Sub  Query  translate  In  contains  Null  Literal  convert  Non  Correlated  Sub  Query  convert  To  Single  Value  Subq  convert  In  To  Or  ensure  Sql  Type  get  In  Subquery  Threshold  convert  Exists  convert  Query  Or  In  List  convert  Row  Values  convert  Literal  In  Values  List  is  Row  Constructor  find  Sub  Queries  convert  Expression  convert  Expression  convert  Extended  Expression  convert  Over  convert  From  convert  From  convert  Unnest  convert  Match  Recognize  convert  Identifier  convert  Collection  Table  after  Table  Function  convert  Temporal  Table  Rex  Access  Shuttle  visit  Input  Ref  create  Join  get  Correlation  Use  is  Sub  Query  Non  Correlated  get  System  Fields  convert  Join  Condition  convert  Using  convert  Join  Type  convert  Agg  create  Agg  Impl  rewrite  Aggregate  With  Group  Id  create  Aggregate  convert  Dynamic  Param  gather  Order  Exprs  convert  Order  Item  desc  enable  Decorrelation  decorrelate  Query  is  Trim  Unused  Fields  convert  Query  Recursive  convert  Set  Op  all  convert  Insert  create  Modify  create  Source  create  To  Rel  Context  to  Rel  get  Target  Table  convert  Column  List  create  Insert  Blackboard  get  Initializer  Factory  unwrap  collect  Insert  Targets  convert  Delete  convert  Update  convert  Merge  convert  Identifier  adjust  Input  Ref  convert  Row  Constructor  convert  Cursor  convert  Multisets  get  Node  convert  Select  List  extra  Select  Items  derive  Alias  convert  With  convert  Values  convert  Values  Impl  Blackboard  set  Pattern  Var  Ref  register  register  set  Root  set  Root  set  Dataset  set  Root  lookup  Exp  lookup  get  Root  Field  flatten  register  Sub  Query  get  Sub  Query  retrieve  Cursors  convert  Expression  convert  Sort  Expression  is  Converted  Subq  get  Group  Count  get  Rex  Builder  validate  Expression  get  Sub  Query  Expr  get  Type  Factory  get  Initializer  Expression  Factory  get  Validator  convert  Literal  convert  Interval  visit  visit  visit  visit  visit  visit  visit  get  Column  Monotonicities  negate  Deferred  Lookup  get  Field  Access  get  Original  Rel  Name  can  Convert  Sub  Query  convert  Sub  Query  Agg  Converter  add  Group  Expr  add  Auxiliary  Group  Expr  add  Expr  visit  visit  visit  visit  visit  visit  visit  translate  Agg  translate  Agg  lookup  Or  Create  Group  Expr  lookup  Group  Expr  lookup  Aggregates  get  Pre  Exprs  get  Agg  Calls  contains  Group  Id  get  Type  Factory  Lookup  Context  find  Rel  Histogram  Shuttle  visit  Call  get  Histogram  Op  compute  Histogram  Type  Sub  Query  visit  Correlation  Use  config  Builder  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table  Config  Builder  with  Config  with  Decorrelation  Enabled  with  Trim  Unused  Fields  with  Create  Values  Rel  with  Explain  with  Expand  with  In  Subquery  Threshold  with  In  Sub  Query  Threshold  with  Rel  Builder  Factory  with  Hint  Strategy  Table  build  Config  Impl  is  Convert  Table  Access  is  Decorrelation  Enabled  is  Trim  Unused  Fields  is  Create  Values  Rel  is  Explain  is  Expand  get  In  Sub  Query  Threshold  get  Rel  Builder  Factory  get  Hint  Strategy  Table,1,0
698,plus,Rex  Builder  Rex  Node  Rex  Node,Rex  Node,,make  Call,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Parser  Pos,zero  quoted  zero  serial  Version  U  I  D  line  Number  column  Number  end  Line  Number  end  Column  Number  Quoted  Parser  Pos,Sql  Parser  Pos  Sql  Parser  Pos  hash  Code  equals  get  Line  Num  get  Column  Num  get  End  Line  Num  get  End  Column  Num  with  Quoting  is  Quoted  to  String  plus  All  plus  All  sum  to  Pos  get  size  to  Pos  sum  sum  sum  get  size  sum  overlaps  starts  Before  ends  After  starts  At  create  Literal  Quoted  Parser  Pos  is  Quoted,0,0
699,plus,Rex  Builder  Rex  Node  Rex  Node,Rex  Node,,make  Call,Sql  Parser  Pos,zero  quoted  zero  serial  Version  U  I  D  line  Number  column  Number  end  Line  Number  end  Column  Number  Quoted  Parser  Pos,Sql  Parser  Pos  Sql  Parser  Pos  hash  Code  equals  get  Line  Num  get  Column  Num  get  End  Line  Num  get  End  Column  Num  with  Quoting  is  Quoted  to  String  plus  All  plus  All  sum  to  Pos  get  size  to  Pos  sum  sum  sum  get  size  sum  overlaps  starts  Before  ends  After  starts  At  create  Literal  Quoted  Parser  Pos  is  Quoted,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
700,plus,Rex  Builder  Rex  Node  Rex  Node,Rex  Node,,make  Call,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,0,0
701,plus,Rex  Builder  Rex  Node  Rex  Node,Rex  Node,,make  Call,Sql  Node,empty  array  pos,Sql  Node  clone  clone  clone  get  Kind  is  A  clone  Array  to  String  to  Sql  String  to  Sql  String  to  Sql  String  unparse  get  Parser  Position  validate  find  Valid  Options  validate  Expr  accept  equals  Deep  equals  Deep  equal  Deep  get  Monotonicity  equal  Deep  as,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
702,convert  Multiset,Sql  Rex  Context  Sql  Call  Standard  Convertlet  Table,Rex  Node,,,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Multiset  Value  Constructor,,Sql  Multiset  Value  Constructor  Sql  Multiset  Value  Constructor  infer  Return  Type  get  Component  Type  check  Operand  Types  unparse,0,0
703,convert  Multiset,Sql  Rex  Context  Sql  Call  Standard  Convertlet  Table,Rex  Node,,,Sql  Multiset  Value  Constructor,,Sql  Multiset  Value  Constructor  Sql  Multiset  Value  Constructor  infer  Return  Type  get  Component  Type  check  Operand  Types  unparse,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,1
704,convert  Multiset,Sql  Rex  Context  Sql  Call  Standard  Convertlet  Table,Rex  Node,,,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
705,convert  Multiset,Sql  Rex  Context  Sql  Call  Standard  Convertlet  Table,Rex  Node,,,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
706,convert  Multiset  Query,Sql  Rex  Context  Sql  Multiset  Query  Constructor  Sql  Call,Rex  Node,,,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
707,convert  Multiset  Query,Sql  Rex  Context  Sql  Multiset  Query  Constructor  Sql  Call,Rex  Node,,,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
708,convert  Multiset  Query,Sql  Rex  Context  Sql  Multiset  Query  Constructor  Sql  Call,Rex  Node,,,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Multiset  Query  Constructor,,Sql  Multiset  Query  Constructor  Sql  Multiset  Query  Constructor  infer  Return  Type  get  Component  Type  check  Operand  Types  derive  Type  unparse  argument  Must  Be  Scalar,0,0
709,convert  Multiset  Query,Sql  Rex  Context  Sql  Multiset  Query  Constructor  Sql  Call,Rex  Node,,,Sql  Multiset  Query  Constructor,,Sql  Multiset  Query  Constructor  Sql  Multiset  Query  Constructor  infer  Return  Type  get  Component  Type  check  Operand  Types  derive  Type  unparse  argument  Must  Be  Scalar,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
710,convert  Jdbc,Sql  Rex  Context  Sql  Jdbc  Function  Call  Sql  Call,Rex  Node,,get  Lookup  Call  convert  Expression,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
711,convert  Jdbc,Sql  Rex  Context  Sql  Jdbc  Function  Call  Sql  Call,Rex  Node,,get  Lookup  Call  convert  Expression,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
712,convert  Jdbc,Sql  Rex  Context  Sql  Jdbc  Function  Call  Sql  Call,Rex  Node,,get  Lookup  Call  convert  Expression,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Jdbc  Function  Call,numeric  functions  string  functions  time  date  functions  system  functions  jdbc  Name  lookup  Make  Call  Obj  lookup  Call  this  Operands  Simple  Make  Call  operator  Permuting  Make  Call  order  Jdbc  To  Internal  Lookup  Table  instance  map,Sql  Jdbc  Function  Call  construct  Func  List  create  Call  rewrite  Call  get  Lookup  Call  get  Allowed  Signatures  derive  Type  infer  Return  Type  unparse  get  Numeric  Functions  get  String  Functions  get  Time  Date  Functions  get  System  Functions  create  Call  get  Operator  is  Valid  Arg  Count  Simple  Make  Call  get  Operator  create  Call  is  Valid  Arg  Count  Permuting  Make  Call  create  Call  is  Valid  Arg  Count  get  Arg  Count  Mismatch  Msg  reorder  Jdbc  To  Internal  Lookup  Table  trim  simple  lookup,0,0
713,convert  Jdbc,Sql  Rex  Context  Sql  Jdbc  Function  Call  Sql  Call,Rex  Node,,get  Lookup  Call  convert  Expression,Sql  Jdbc  Function  Call,numeric  functions  string  functions  time  date  functions  system  functions  jdbc  Name  lookup  Make  Call  Obj  lookup  Call  this  Operands  Simple  Make  Call  operator  Permuting  Make  Call  order  Jdbc  To  Internal  Lookup  Table  instance  map,Sql  Jdbc  Function  Call  construct  Func  List  create  Call  rewrite  Call  get  Lookup  Call  get  Allowed  Signatures  derive  Type  infer  Return  Type  unparse  get  Numeric  Functions  get  String  Functions  get  Time  Date  Functions  get  System  Functions  create  Call  get  Operator  is  Valid  Arg  Count  Simple  Make  Call  get  Operator  create  Call  is  Valid  Arg  Count  Permuting  Make  Call  create  Call  is  Valid  Arg  Count  get  Arg  Count  Mismatch  Msg  reorder  Jdbc  To  Internal  Lookup  Table  trim  simple  lookup,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
714,convert  Cast,Sql  Rex  Context  Sql  Call,Rex  Node,,,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
715,convert  Cast,Sql  Rex  Context  Sql  Call,Rex  Node,,,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
716,mod,Rex  Builder  Rel  Data  Type  Rex  Node  Big  Decimal,Rex  Node,,equals  make  Call  make  Exact  Literal,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
717,mod,Rex  Builder  Rel  Data  Type  Rex  Node  Big  Decimal,Rex  Node,,equals  make  Call  make  Exact  Literal,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
718,convert  Sequence  Value,Sql  Rex  Context  Sql  Sequence  Value  Operator  Sql  Call,Rex  Node,,,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Sequence  Value  Operator,,Sql  Sequence  Value  Operator  is  Deterministic  unparse  derive  Type  validate  Call,0,0
719,convert  Sequence  Value,Sql  Rex  Context  Sql  Sequence  Value  Operator  Sql  Call,Rex  Node,,,Sql  Sequence  Value  Operator,,Sql  Sequence  Value  Operator  is  Deterministic  unparse  derive  Type  validate  Call,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
720,convert  Sequence  Value,Sql  Rex  Context  Sql  Sequence  Value  Operator  Sql  Call,Rex  Node,,,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
721,convert  Sequence  Value,Sql  Rex  Context  Sql  Sequence  Value  Operator  Sql  Call,Rex  Node,,,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
722,convert  Plus,Sql  Rex  Context  Sql  Call,Rex  Node,,convert  Call  get  Sql  Type  Name  get  Type  get  Rex  Builder  get  Operands  size  get  Sql  Type  Name  get  Type  get  of  get  get  make  Call  get  Type,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
723,convert  Plus,Sql  Rex  Context  Sql  Call,Rex  Node,,convert  Call  get  Sql  Type  Name  get  Type  get  Rex  Builder  get  Operands  size  get  Sql  Type  Name  get  Type  get  of  get  get  make  Call  get  Type,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
724,convert  Is  Distinct  From,Sql  Rex  Context  Sql  Call  boolean,Rex  Node,,convert  Expression  operand  convert  Expression  operand  is  Distinct  From  get  Rex  Builder,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
725,convert  Is  Distinct  From,Sql  Rex  Context  Sql  Call  boolean,Rex  Node,,convert  Expression  operand  convert  Expression  operand  is  Distinct  From  get  Rex  Builder,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Between  convert  Literal  Chain  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
726,convert  Literal  Chain,Sql  Rex  Context  Sql  Literal  Chain  Operator  Sql  Call,Rex  Node,,discard  concatenate  Operands  convert  Literal,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Literal  Chain  Operator,,Sql  Literal  Chain  Operator  arg  Types  Valid  check  Operand  Types  infer  Return  Type  get  Allowed  Signatures  validate  Call  unparse  concatenate  Operands,0,0
727,convert  Literal  Chain,Sql  Rex  Context  Sql  Literal  Chain  Operator  Sql  Call,Rex  Node,,discard  concatenate  Operands  convert  Literal,Sql  Literal  Chain  Operator,,Sql  Literal  Chain  Operator  arg  Types  Valid  check  Operand  Types  infer  Return  Type  get  Allowed  Signatures  validate  Call  unparse  concatenate  Operands,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
728,convert  Literal  Chain,Sql  Rex  Context  Sql  Literal  Chain  Operator  Sql  Call,Rex  Node,,discard  concatenate  Operands  convert  Literal,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
729,convert  Literal  Chain,Sql  Rex  Context  Sql  Literal  Chain  Operator  Sql  Call,Rex  Node,,discard  concatenate  Operands  convert  Literal,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Row  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
730,convert  Row,Sql  Rex  Context  Sql  Row  Operator  Sql  Call,Rex  Node,,get  Sql  Type  Name  get  Validated  Node  Type  get  Validator  convert  Call  get  Rex  Builder  get  Operand  List  add  make  Literal  get  Simple  derive  Return  Type  make  Call,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Row  Operator,,Sql  Row  Operator  infer  Return  Type  get  size  unparse  requires  Decimal  Expansion,0,0
731,convert  Row,Sql  Rex  Context  Sql  Row  Operator  Sql  Call,Rex  Node,,get  Sql  Type  Name  get  Validated  Node  Type  get  Validator  convert  Call  get  Rex  Builder  get  Operand  List  add  make  Literal  get  Simple  derive  Return  Type  make  Call,Sql  Row  Operator,,Sql  Row  Operator  infer  Return  Type  get  size  unparse  requires  Decimal  Expansion,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
732,convert  Row,Sql  Rex  Context  Sql  Row  Operator  Sql  Call,Rex  Node,,get  Sql  Type  Name  get  Validated  Node  Type  get  Validator  convert  Call  get  Rex  Builder  get  Operand  List  add  make  Literal  get  Simple  derive  Return  Type  make  Call,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
733,convert  Row,Sql  Rex  Context  Sql  Row  Operator  Sql  Call,Rex  Node,,get  Sql  Type  Name  get  Validated  Node  Type  get  Validator  convert  Call  get  Rex  Builder  get  Operand  List  add  make  Literal  get  Simple  derive  Return  Type  make  Call,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Standard  Convertlet  Table,instance  Regr  Covariance  Convertlet  kind  Avg  Variance  Convertlet  kind  Trim  Convertlet  flag  Greatest  Convertlet  Floor  Ceil  Convertlet  Timestamp  Add  Convertlet  Timestamp  Diff  Convertlet,Standard  Convertlet  Table  or  eq  ge  le  and  divide  Int  plus  minus  multiply  case  plus  convert  Case  convert  Array  convert  Map  convert  Multiset  Query  convert  Jdbc  convert  Cast  convert  Floor  Ceil  convert  Extract  mod  divide  convert  Datetime  Minus  convert  Function  convert  Window  Function  convert  Json  Value  Function  convert  Sequence  Value  convert  Aggregate  Function  get  Group  Count  make  Constructor  Call  get  Rex  Builder  validate  Expression  convert  Expression  convert  Call  convert  Call  else  Args  convert  Expression  List  consistent  Type  convert  Plus  convert  Is  Distinct  From  convert  Between  convert  Literal  Chain  convert  Overlaps  convert  Overlaps  Operand  cast  To  Validated  Type  cast  To  Validated  Type  Regr  Covariance  Convertlet  convert  Call  expand  Regr  Szz  expand  Covariance  get  Casted  Sql  Node  Avg  Variance  Convertlet  convert  Call  expand  Avg  expand  Variance  get  Casted  Sql  Node  Trim  Convertlet  convert  Call  convert  Call  convert  Call  convert  Call  convert  Call,1,0
734,is  Constructor,Rex  Node,boolean,,equals  Ignore  Case  get  Name  get  Operator  is  A,Rel  Structured  Type  Flattener,rel  Builder  rex  Builder  restructure  old  To  New  Rel  Map  current  Rel  i  Restructure  Input  flattened  Root  Type  restructured  to  Rel  Context  Rewrite  Rel  Visitor  dispatcher  Rewrite  Rex  Shuttle,Rel  Structured  Type  Flattener  Rel  Structured  Type  Flattener  update  Rel  In  Map  update  Rel  In  Map  rewrite  try  Restructure  restructure  Fields  restructure  set  New  For  Old  Rel  get  New  For  Old  Rel  get  New  For  Old  Input  get  New  Field  For  Old  Input  get  New  Input  Field  By  New  Ordinal  no  Flattening  For  Input  get  New  Field  For  Old  Input  get  New  For  Old  Input  Mapping  get  Post  Flattening  Ordinal  post  Flatten  Size  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Generic  flatten  Projections  extract  Name  flatten  Projection  flatten  Result  Type  Of  Rex  Call  flatten  Null  Literal  rewrite  Rel  cover  New  Rel  By  Flattening  Projection  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  flatten  Inputs  flatten  Rel  visit  visit  Input  Ref  remove  Distinct  visit  Field  Access  visit  Call  visit  Sub  Query  flatten  Comparison  get  New  Inner  Ordinal,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
735,is  Constructor,Rex  Node,boolean,,equals  Ignore  Case  get  Name  get  Operator  is  A,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Rel  Structured  Type  Flattener,rel  Builder  rex  Builder  restructure  old  To  New  Rel  Map  current  Rel  i  Restructure  Input  flattened  Root  Type  restructured  to  Rel  Context  Rewrite  Rel  Visitor  dispatcher  Rewrite  Rex  Shuttle,Rel  Structured  Type  Flattener  Rel  Structured  Type  Flattener  update  Rel  In  Map  update  Rel  In  Map  rewrite  try  Restructure  restructure  Fields  restructure  set  New  For  Old  Rel  get  New  For  Old  Rel  get  New  For  Old  Input  get  New  Field  For  Old  Input  get  New  Input  Field  By  New  Ordinal  no  Flattening  For  Input  get  New  Field  For  Old  Input  get  New  For  Old  Input  Mapping  get  Post  Flattening  Ordinal  post  Flatten  Size  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Generic  flatten  Projections  extract  Name  flatten  Projection  flatten  Result  Type  Of  Rex  Call  flatten  Null  Literal  rewrite  Rel  cover  New  Rel  By  Flattening  Projection  rewrite  Rel  rewrite  Rel  rewrite  Rel  rewrite  Rel  flatten  Inputs  flatten  Rel  visit  visit  Input  Ref  remove  Distinct  visit  Field  Access  visit  Call  visit  Sub  Query  flatten  Comparison  get  New  Inner  Ordinal,1,0
736,count  Sql,Immutable  Bit  Set,String,,sql  of,Lattice,root  Schema  root  Node  columns  auto  algorithm  algorithm  Max  Millis  row  Count  Estimate  default  Measures  tiles  column  Uses  statistic  Provider  Edge  factory  pairs  Vertex  table  alias  Measure  agg  distinct  name  args  digest  Column  ordinal  alias  Base  Column  table  column  Derived  Column  e  tables  Sql  Writer  lattice  buf  dialect  context  Builder  root  Node  base  Columns  columns  By  Alias  default  Measure  Set  tile  List  Builder  column  Uses  root  Schema  algorithm  algorithm  Max  Millis  auto  row  Count  Estimate  statistic  Provider  derived  Columns  By  Name  Fixer  aliases  column  Aliases  seen  column  List  column  Alias  List  c  Tile  measures  dimensions  bit  Set  Tile  Builder  measure  Builder  dimension  List  Builder,Lattice  create  is  Valid  populate  Aliases  populate  grab  input  Field  to  String  sql  sql  create  Sql  Writer  create  Star  Table  builder  builder  to  Measures  to  Measure  compute  Tiles  get  Fact  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  unique  Column  Names  column  To  Path  Offset  tables  first  Column  is  Always  Measure  Edge  get  Target  get  Source  Vertex  Measure  compare  To  to  String  hash  Code  equals  arg  Bit  Set  arg  Ordinals  compare  copy  Column  to  Bit  Set  compare  To  hash  Code  equals  to  Sql  default  Alias  Base  Column  to  String  identifiers  to  Sql  default  Alias  Derived  Column  to  String  to  Sql  default  Alias  Sql  Writer  with  write  Builder  Builder  auto  algorithm  algorithm  Max  Millis  row  Count  Estimate  statistic  Provider  build  resolve  Args  resolve  Column  By  Alias  resolve  Column  resolve  Qualified  Column  resolve  Measure  resolve  Agg  add  Measure  add  Tile  column  path  Offset  To  Column  expression  use  fix  Up  Tile  builder  bit  Set  build  add  Measure  add  Dimension,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,0,0
737,count  Sql,Immutable  Bit  Set,String,,sql  of,Immutable  Bit  Set,comparator  ordering  address  bits  per  word  bits  per  word  word  mask  empty  longs  empty  from  bit  set  words  i  Closure  equivalence  closure  Builder  words  Rebuilder  original  Bit  Set,Immutable  Bit  Set  of  of  of  of  value  Of  value  Of  from  Bit  Set  range  range  word  Index  power  Set  get  get  check  Range  to  String  intersects  cardinality  count  Bits  hash  Code  size  equals  compare  To  next  Set  Bit  next  Clear  Bit  previous  Clear  Bit  iterator  has  Next  next  remove  to  List  as  List  get  size  iterator  as  Set  iterator  size  contains  to  Array  to  Long  Array  union  union  union  except  intersect  contains  index  Of  closure  length  is  Empty  builder  builder  rebuild  nth  set  set  set  If  clear  clear  If  to  Bit  Set  permute  permute  shift  copy  Closure  compute  Closure  Builder  build  build  And  Reset  build  set  get  trim  clear  would  Equal  cardinality  add  All  add  All  add  All  remove  All  set  is  Empty  intersect  Rebuilder  build  build,Lattice,root  Schema  root  Node  columns  auto  algorithm  algorithm  Max  Millis  row  Count  Estimate  default  Measures  tiles  column  Uses  statistic  Provider  Edge  factory  pairs  Vertex  table  alias  Measure  agg  distinct  name  args  digest  Column  ordinal  alias  Base  Column  table  column  Derived  Column  e  tables  Sql  Writer  lattice  buf  dialect  context  Builder  root  Node  base  Columns  columns  By  Alias  default  Measure  Set  tile  List  Builder  column  Uses  root  Schema  algorithm  algorithm  Max  Millis  auto  row  Count  Estimate  statistic  Provider  derived  Columns  By  Name  Fixer  aliases  column  Aliases  seen  column  List  column  Alias  List  c  Tile  measures  dimensions  bit  Set  Tile  Builder  measure  Builder  dimension  List  Builder,Lattice  create  is  Valid  populate  Aliases  populate  grab  input  Field  to  String  sql  sql  create  Sql  Writer  create  Star  Table  builder  builder  to  Measures  to  Measure  compute  Tiles  get  Fact  Row  Count  get  Row  Count  get  Row  Count  get  Row  Count  unique  Column  Names  column  To  Path  Offset  tables  first  Column  is  Always  Measure  Edge  get  Target  get  Source  Vertex  Measure  compare  To  to  String  hash  Code  equals  arg  Bit  Set  arg  Ordinals  compare  copy  Column  to  Bit  Set  compare  To  hash  Code  equals  to  Sql  default  Alias  Base  Column  to  String  identifiers  to  Sql  default  Alias  Derived  Column  to  String  to  Sql  default  Alias  Sql  Writer  with  write  Builder  Builder  auto  algorithm  algorithm  Max  Millis  row  Count  Estimate  statistic  Provider  build  resolve  Args  resolve  Column  By  Alias  resolve  Column  resolve  Qualified  Column  resolve  Measure  resolve  Agg  add  Measure  add  Tile  column  path  Offset  To  Column  expression  use  fix  Up  Tile  builder  bit  Set  build  add  Measure  add  Dimension,1,0
738,all  Satisfiable,List  Lattice  Measure  Materialization  Service,boolean,,contains  contains  arg  Bit  Set,Materialization  Service,instance  thread  instance  c  actor  table  Factory  Default  Table  Factory,Materialization  Service  define  Materialization  define  Materialization  check  Valid  define  Tile  define  Tile  query  clear  set  Thread  Local  instance  remove  Materialization  create  Table  create  Table  enumerator  get  Element  Type  get  Expression  get  Provider  iterator,Tile  Key,lattice  dimensions  measures,Tile  Key  hash  Code  equals  to  String,0,0
739,all  Satisfiable,List  Lattice  Measure  Materialization  Service,boolean,,contains  contains  arg  Bit  Set,Tile  Key,lattice  dimensions  measures,Tile  Key  hash  Code  equals  to  String,Materialization  Service,instance  thread  instance  c  actor  table  Factory  Default  Table  Factory,Materialization  Service  define  Materialization  define  Materialization  check  Valid  define  Tile  define  Tile  query  clear  set  Thread  Local  instance  remove  Materialization  create  Table  create  Table  enumerator  get  Element  Type  get  Expression  get  Provider  iterator,1,1
740,resolve  Complex  Metric,String  Aggregate  Call,Complex  Metric,,get  Complex  Metrics  From  can  Be  Used,Druid  Table,default  timestamp  column  default  interval  schema  data  Source  proto  Row  Type  metric  Field  Names  intervals  timestamp  Field  Name  complex  Metrics  all  Fields  Map  Rel  Proto  Data  Type  fields  timestamp  Column,Druid  Table  create  create  is  Rolled  Up  rolled  Up  Column  Valid  Inside  Agg  is  Valid  Parent  Kind  is  Count  Distinct  is  Supported  Post  Agg  Operation  get  Complex  Metrics  From  is  Complex  Metric  get  Row  Type  to  Rel  is  Metric  Map  Rel  Proto  Data  Type  Map  Rel  Proto  Data  Type  apply,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
741,resolve  Complex  Metric,String  Aggregate  Call,Complex  Metric,,get  Complex  Metrics  From  can  Be  Used,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,Druid  Table,default  timestamp  column  default  interval  schema  data  Source  proto  Row  Type  metric  Field  Names  intervals  timestamp  Field  Name  complex  Metrics  all  Fields  Map  Rel  Proto  Data  Type  fields  timestamp  Column,Druid  Table  create  create  is  Rolled  Up  rolled  Up  Column  Valid  Inside  Agg  is  Valid  Parent  Kind  is  Count  Distinct  is  Supported  Post  Agg  Operation  get  Complex  Metrics  From  is  Complex  Metric  get  Row  Type  to  Rel  is  Metric  Map  Rel  Proto  Data  Type  Map  Rel  Proto  Data  Type  apply,1,0
742,is  Count  Distinct,Sql  Call,boolean,,get  Kind  get  Function  Quantifier  get  Value  get  Function  Quantifier,Druid  Table,default  timestamp  column  default  interval  schema  data  Source  proto  Row  Type  metric  Field  Names  intervals  timestamp  Field  Name  complex  Metrics  all  Fields  Map  Rel  Proto  Data  Type  fields  timestamp  Column,Druid  Table  create  create  resolve  Complex  Metric  is  Rolled  Up  rolled  Up  Column  Valid  Inside  Agg  is  Valid  Parent  Kind  is  Supported  Post  Agg  Operation  get  Complex  Metrics  From  is  Complex  Metric  get  Row  Type  to  Rel  is  Metric  Map  Rel  Proto  Data  Type  Map  Rel  Proto  Data  Type  apply,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,0,0
743,is  Count  Distinct,Sql  Call,boolean,,get  Kind  get  Function  Quantifier  get  Value  get  Function  Quantifier,Sql  Call,,Sql  Call  is  Expanded  set  Operand  get  Kind  get  Operator  get  Operand  List  operand  operand  Count  clone  unparse  validate  find  Valid  Options  accept  equals  Deep  get  Call  Signature  get  Monotonicity  is  Count  Star  get  Function  Quantifier  arg,Druid  Table,default  timestamp  column  default  interval  schema  data  Source  proto  Row  Type  metric  Field  Names  intervals  timestamp  Field  Name  complex  Metrics  all  Fields  Map  Rel  Proto  Data  Type  fields  timestamp  Column,Druid  Table  create  create  resolve  Complex  Metric  is  Rolled  Up  rolled  Up  Column  Valid  Inside  Agg  is  Valid  Parent  Kind  is  Supported  Post  Agg  Operation  get  Complex  Metrics  From  is  Complex  Metric  get  Row  Type  to  Rel  is  Metric  Map  Rel  Proto  Data  Type  Map  Rel  Proto  Data  Type  apply,1,0
744,can  Be  Used,Aggregate  Call,boolean,,get  Kind  get  Aggregation  is  Distinct,Complex  Metric,metric  Name  type,Complex  Metric  get  Metric  Name  get  Druid  Type  get  Metric  Type,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,0,0
745,can  Be  Used,Aggregate  Call,boolean,,get  Kind  get  Aggregation  is  Distinct,Aggregate  Call,agg  Function  distinct  approximate  ignore  Nulls  type  name  arg  List  filter  Arg  collation,Aggregate  Call  Aggregate  Call  create  create  create  create  create  create  create  create  create  is  Distinct  is  Approximate  ignore  Nulls  get  Aggregation  get  Collation  get  Arg  List  get  Type  get  Name  rename  to  String  has  Filter  equals  hash  Code  create  Binding  copy  copy  copy  adapt  To  transform  is  Aggregate  Supported,Complex  Metric,metric  Name  type,Complex  Metric  get  Metric  Name  get  Druid  Type  get  Metric  Type,1,0
746,generate  Sql,Sql  Dialect,String,,get  Type  Factory  get  Cluster  visit  Child  get  Input  get  Sql  to  Sql  String  as  Statement,Jdbc  To  Spark  Converter,,Jdbc  To  Spark  Converter  copy  compute  Self  Cost  implement  Spark,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,0,0
747,generate  Sql,Sql  Dialect,String,,get  Type  Factory  get  Cluster  visit  Child  get  Input  get  Sql  to  Sql  String  as  Statement,Sql  Dialect,logger  empty  context  dummy  calcite  built  in  operators  list  identifier  Quote  String  identifier  End  Quote  String  identifier  Escaped  Quote  literal  Quote  String  literal  End  Quote  String  literal  Escaped  Quote  database  Product  null  Collation  data  Type  System  unquoted  Casing  quoted  Casing  case  Sensitive  hexits  Fake  Util  Calendar  Policy  Database  Product  dialect  Context  Impl  database  Product  database  Product  Name  database  Version  database  Major  Version  database  Minor  Version  literal  Quote  String  literal  Escaped  Quote  String  identifier  Quote  String  unquoted  Casing  quoted  Casing  case  Sensitive  conformance  null  Collation  data  Type  System  jethro  Info,create  Sql  Dialect  Sql  Dialect  Sql  Dialect  empty  Context  get  Product  get  Type  System  quote  Identifier  quote  Identifier  quote  Identifier  identifier  Needs  Quote  quote  String  Literal  quote  String  Literal  unparse  Call  unparse  Date  Time  Literal  unparse  Sql  Datetime  Arithmetic  unparse  Sql  Interval  Qualifier  unparse  Sql  Interval  Literal  contains  Non  Ascii  quote  String  Literal  Unicode  unquote  String  Literal  allows  As  requires  Alias  For  From  Items  has  Implicit  Table  Alias  quote  Timestamp  Literal  get  Database  Product  supports  Char  Set  supports  Aggregate  Function  supports  Window  Functions  supports  Function  get  Calendar  Policy  supports  Data  Type  get  Cast  Spec  rewrite  Single  Value  Expr  emulate  Null  Direction  emulate  Join  Type  For  Cross  Join  emulate  Null  Direction  With  Is  Null  supports  Offset  Fetch  unparse  Offset  Fetch  unparse  Top  N  unparse  Fetch  Using  Ansi  unparse  Fetch  Using  Limit  supports  Nested  Aggregations  supports  Group  By  With  Rollup  supports  Group  By  With  Cube  get  Null  Collation  default  Null  Direction  supports  Aliased  Values  supports  Implicit  Type  Coercion  get  Single  Row  Table  Name  configure  Parser  get  Conformance  get  Quoting  get  Unquoted  Casing  get  Quoted  Casing  is  Case  Sensitive  as  Sql  new  Internal  replace  Database  Product  get  Dialect  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info  Context  Impl  database  Product  with  Database  Product  database  Product  Name  with  Database  Product  Name  database  Version  with  Database  Version  database  Major  Version  with  Database  Major  Version  database  Minor  Version  with  Database  Minor  Version  literal  Quote  String  with  Literal  Quote  String  literal  Escaped  Quote  String  with  Literal  Escaped  Quote  String  identifier  Quote  String  with  Identifier  Quote  String  unquoted  Casing  with  Unquoted  Casing  quoted  Casing  with  Quoted  Casing  case  Sensitive  with  Case  Sensitive  conformance  with  Conformance  null  Collation  with  Null  Collation  data  Type  System  with  Data  Type  System  jethro  Info  with  Jethro  Info,Jdbc  To  Spark  Converter,,Jdbc  To  Spark  Converter  copy  compute  Self  Cost  implement  Spark,1,0
748,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,While  Statement,condition  body,While  Statement  accept  accept  accept  equals  hash  Code,0,0
749,visit,Expression  Statement  Shuttle,Statement,condition  body,while,While  Statement,condition  body,While  Statement  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,1
750,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Statement,,Statement  accept  accept,0,0
751,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Statement,,Statement  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
752,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,0,0
753,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
754,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Goto  Statement,kind  label  Target  expression,Goto  Statement  accept  accept  accept  evaluate  equals  hash  Code,0,0
755,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Goto  Statement,kind  label  Target  expression,Goto  Statement  accept  accept  accept  evaluate  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
756,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Label  Statement,default  Value,Label  Statement  accept  accept  equals  hash  Code,0,0
757,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Label  Statement,default  Value,Label  Statement  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
758,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Statement,,Statement  accept  accept,0,0
759,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Statement,,Statement  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
760,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,For  Statement,declarations  condition  post  body  hash,For  Statement  accept  accept  accept  equals  hash  Code,0,0
761,visit,Expression  Statement  Shuttle,Statement,condition  body,while,For  Statement,declarations  condition  post  body  hash,For  Statement  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
762,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Parameter  Expression,seq  modifier  name,Parameter  Expression  Parameter  Expression  accept  accept  evaluate  accept  decl  String  decl  String  equals  hash  Code  implement  Lambda  Factory,0,0
763,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Parameter  Expression,seq  modifier  name,Parameter  Expression  Parameter  Expression  accept  accept  evaluate  accept  decl  String  decl  String  equals  hash  Code  implement  Lambda  Factory,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
764,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,For  Each  Statement,parameter  iterable  body  hash,For  Each  Statement  accept  accept  accept  equals  hash  Code,0,0
765,visit,Expression  Statement  Shuttle,Statement,condition  body,while,For  Each  Statement,parameter  iterable  body  hash,For  Each  Statement  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
766,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Statement,,Statement  accept  accept,0,0
767,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Statement,,Statement  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
768,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Throw  Statement,expression,Throw  Statement  accept  accept  accept  equals  hash  Code,0,0
769,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Throw  Statement,expression,Throw  Statement  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
770,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Declaration  Statement,modifiers  parameter  initializer,Declaration  Statement  accept  accept  accept  accept  equals  hash  Code  implement  Add  current  Position  rex  Arguments  rex  Filter  Argument,0,0
771,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Declaration  Statement,modifiers  parameter  initializer,Declaration  Statement  accept  accept  accept  accept  equals  hash  Code  implement  Add  current  Position  rex  Arguments  rex  Filter  Argument,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
772,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Lambda  Expression,,Lambda  Expression  accept  accept,0,0
773,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Lambda  Expression,,Lambda  Expression  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
774,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,0,0
775,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
776,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Index  Expression,array  index  Expressions,Index  Expression  accept  accept  accept  equals  hash  Code,0,0
777,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Index  Expression,array  index  Expressions,Index  Expression  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
778,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Default  Expression,,Default  Expression  accept  accept,0,0
779,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Default  Expression,,Default  Expression  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
780,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Dynamic  Expression,,Dynamic  Expression  accept  accept,0,0
781,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Dynamic  Expression,,Dynamic  Expression  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
782,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Invocation  Expression,,Invocation  Expression  accept  accept,0,0
783,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Invocation  Expression,,Invocation  Expression  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
784,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,List  Init  Expression,,List  Init  Expression  accept  accept,0,0
785,visit,Expression  Statement  Shuttle,Statement,condition  body,while,List  Init  Expression,,List  Init  Expression  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
786,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Switch  Statement,,Switch  Statement  accept  accept,0,0
787,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Switch  Statement,,Switch  Statement  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
788,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Try  Statement,body  catch  Blocks  fynally,Try  Statement  accept  accept  accept  equals  hash  Code,0,0
789,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Try  Statement,body  catch  Blocks  fynally,Try  Statement  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
790,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Statement,,Statement  accept  accept,0,0
791,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Statement,,Statement  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
792,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Member  Init  Expression,,Member  Init  Expression  accept  accept,0,0
793,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Member  Init  Expression,,Member  Init  Expression  accept  accept,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
794,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,0,0
795,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
796,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Method  Declaration,modifier  name  result  Type  parameters  body,Method  Declaration  accept  accept  accept  equals  hash  Code,0,0
797,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Method  Declaration,modifier  name  result  Type  parameters  body,Method  Declaration  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
798,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Constant  Expression,value,Constant  Expression  evaluate  accept  accept  accept  write  list  write  Map  map  write  Set  set  matching  Constructor  args  Match  Fields  escape  String  equals  hash  Code,0,0
799,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Constant  Expression,value,Constant  Expression  evaluate  accept  accept  accept  write  list  write  Map  map  write  Set  set  matching  Constructor  args  Match  Fields  escape  String  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
800,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Constructor  Declaration,modifier  result  Type  parameters  body  hash,Constructor  Declaration  accept  accept  accept  equals  hash  Code,0,0
801,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Constructor  Declaration,modifier  result  Type  parameters  body  hash,Constructor  Declaration  accept  accept  accept  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
802,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,0,0
803,visit,Expression  Statement  Shuttle,Statement,condition  body,while,Block  Statement,statements  hash,Block  Statement  distinct  Variables  accept  accept  accept  evaluate  equals  hash  Code,Shuttle,,pre  Visit  pre  Visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  visit  pre  Visit  visit  pre  Visit  visit  pre  Visit  visit  visit  visit  pre  Visit  visit  pre  Visit  visit,1,0
804,get  Group  Ref  Index,Rex  Node,int,,get  Reference  Expr  get  Reference  Expr  get  Index  get  Index  get  Field,Pig  To  Sql  Aggregate  Rule,multiset  projection  instance  Pig  Agg  Udf  Finder  proj  Col  pig  Agg  Calls  proj  Col  Referred  ignore  Multiset  Proj  Rex  Call  Replacer  replacement  Map  builder  old  Proj  Col  new  Project  Col,Pig  To  Sql  Aggregate  Rule  Pig  Agg  Udf  Finder  visit  Call  visit  Input  Ref  Rex  Call  Replacer  Rex  Call  Replacer  visit  Call  visit  Input  Ref  on  Match  create  Record  Type  get  Agg  Columns  get  Cols  From  Multiset  Projection  is  Multiset  Projection,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,0,0
805,get  Group  Ref  Index,Rex  Node,int,,get  Reference  Expr  get  Reference  Expr  get  Index  get  Index  get  Field,Rex  Node,describe  without  normalize  decrement  on  close  empty  digest,contains  Only  Conjunctions  close  with  Normalize  skip  Normalize  need  Normalize  get  Type  is  Always  True  is  Always  False  is  A  is  A  get  Kind  to  String  to  String  Raw  node  Count  accept  accept  equals  hash  Code,Pig  To  Sql  Aggregate  Rule,multiset  projection  instance  Pig  Agg  Udf  Finder  proj  Col  pig  Agg  Calls  proj  Col  Referred  ignore  Multiset  Proj  Rex  Call  Replacer  replacement  Map  builder  old  Proj  Col  new  Project  Col,Pig  To  Sql  Aggregate  Rule  Pig  Agg  Udf  Finder  visit  Call  visit  Input  Ref  Rex  Call  Replacer  Rex  Call  Replacer  visit  Call  visit  Input  Ref  on  Match  create  Record  Type  get  Agg  Columns  get  Cols  From  Multiset  Projection  is  Multiset  Projection,1,0
806,get  Cols  From  Multiset  Projection,Rex  Call,List  Integer,,,Pig  To  Sql  Aggregate  Rule,multiset  projection  instance  Pig  Agg  Udf  Finder  proj  Col  pig  Agg  Calls  proj  Col  Referred  ignore  Multiset  Proj  Rex  Call  Replacer  replacement  Map  builder  old  Proj  Col  new  Project  Col,Pig  To  Sql  Aggregate  Rule  Pig  Agg  Udf  Finder  visit  Call  visit  Input  Ref  Rex  Call  Replacer  Rex  Call  Replacer  visit  Call  visit  Input  Ref  on  Match  create  Record  Type  get  Group  Ref  Index  get  Agg  Columns  is  Multiset  Projection,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code  translate  Call,0,0
807,get  Cols  From  Multiset  Projection,Rex  Call,List  Integer,,,Rex  Call,operand  readability  comparator  op  operands  type  node  Count  simple  binary  ops,Rex  Call  append  Operands  sort  Operands  If  Needed  equal  Sans  Nullability  compute  Digest  to  String  digest  With  Type  accept  accept  get  Type  is  Always  True  is  Always  False  get  Kind  get  Operands  get  Operator  node  Count  clone  equals  hash  Code  translate  Call,Pig  To  Sql  Aggregate  Rule,multiset  projection  instance  Pig  Agg  Udf  Finder  proj  Col  pig  Agg  Calls  proj  Col  Referred  ignore  Multiset  Proj  Rex  Call  Replacer  replacement  Map  builder  old  Proj  Col  new  Project  Col,Pig  To  Sql  Aggregate  Rule  Pig  Agg  Udf  Finder  visit  Call  visit  Input  Ref  Rex  Call  Replacer  Rex  Call  Replacer  visit  Call  visit  Input  Ref  on  Match  create  Record  Type  get  Group  Ref  Index  get  Agg  Columns  is  Multiset  Projection,1,0
808,to  String,Sql  Operator,String,,equals  to  String  equals  to  String,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  search  Escape  transform  To  Farrago  Udx  Rel  get  Fields  String,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,0,0
809,to  String,Sql  Operator,String,,equals  to  String  equals  to  String,Sql  Operator,nl  mdx  precedence  name  kind  left  Prec  right  Prec  return  Type  Inference  operand  Type  Inference  operand  Type  Checker,Sql  Operator  Sql  Operator  left  Prec  right  Prec  get  Operand  Type  Checker  get  Operand  Count  Range  get  Name  get  Name  As  Id  get  Kind  get  Left  Prec  get  Right  Prec  get  Syntax  create  Call  create  Call  create  Call  create  Call  rewrite  Call  unparse  unparse  List  Clause  unparse  List  Clause  equals  is  Name  hash  Code  validate  Call  validate  Operands  pre  Validate  Call  infer  Return  Type  derive  Type  construct  Arg  Name  List  construct  Operand  List  construct  Arg  Type  List  needs  Space  adjust  Type  infer  Return  Type  check  Operand  Types  check  Operand  Count  valid  Rex  Operands  get  Signature  Template  get  Allowed  Signatures  get  Allowed  Signatures  get  Operand  Type  Inference  is  Aggregator  requires  Over  requires  Order  allows  Framing  is  Group  is  Group  Auxiliary  accept  Call  accept  Call  get  Return  Type  Inference  get  Monotonicity  get  Monotonicity  is  Deterministic  is  Dynamic  Function  requires  Decimal  Expansion  argument  Must  Be  Scalar  get  Column  Mappings,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  search  Escape  transform  To  Farrago  Udx  Rel  get  Fields  String,1,0
810,to  String,Sql  Operator,String,,equals  to  String  equals  to  String,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  search  Escape  transform  To  Farrago  Udx  Rel  get  Fields  String,Rex  Literal,value  type  type  Name  time  units,Rex  Literal  compute  Digest  digest  Includes  Type  value  Matches  Type  to  Java  String  should  Include  Type  valid  Constant  get  Time  Units  interval  String  pad  width  print  As  Java  append  As  Java  from  Jdbc  String  get  Calendar  Format  get  Type  Name  get  Type  get  Kind  is  Null  get  Value  get  Value  get  Value  get  Value  get  Value  As  boolean  Value  is  Always  True  is  Always  False  equals  hash  Code  value  int  Value  string  Value  find  Value  is  Null  Literal  equals  accept  accept  to  String  Other,0,0
811,to  String,Sql  Operator,String,,equals  to  String  equals  to  String,Rex  Literal,value  type  type  Name  time  units,Rex  Literal  compute  Digest  digest  Includes  Type  value  Matches  Type  to  Java  String  should  Include  Type  valid  Constant  get  Time  Units  interval  String  pad  width  print  As  Java  append  As  Java  from  Jdbc  String  get  Calendar  Format  get  Type  Name  get  Type  get  Kind  is  Null  get  Value  get  Value  get  Value  get  Value  get  Value  As  boolean  Value  is  Always  True  is  Always  False  equals  hash  Code  value  int  Value  string  Value  find  Value  is  Null  Literal  equals  accept  accept  to  String  Other,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  search  Escape  transform  To  Farrago  Udx  Rel  get  Fields  String,1,0
812,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,Rel  Opt  Rule  Call,logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents,Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder  apply,0,0
813,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Rel  Opt  Rule  Call,logger  next  Id  id  operand  node  Inputs  rule  rels  planner  parents,Rel  Opt  Rule  Call  Rel  Opt  Rule  Call  get  Operand  get  Rule  get  Rels  get  Rel  List  rel  get  Child  Rels  set  Child  Rels  get  Planner  is  Rule  Excluded  get  Metadata  Query  get  Parents  transform  To  transform  To  transform  To  transform  To  builder  apply,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,1,0
814,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,Splunk  Table  Scan,splunk  Table  search  earliest  latest  field  List  method,Splunk  Table  Scan  explain  Terms  register  derive  Row  Type  implement  constant  String  List  get  size,0,0
815,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Splunk  Table  Scan,splunk  Table  search  earliest  latest  field  List  method,Splunk  Table  Scan  explain  Terms  register  derive  Row  Type  implement  constant  String  List  get  size,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,1,0
816,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,Logical  Project,,Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  find  Reference  visit  Input  Ref,0,0
817,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Logical  Project,,Logical  Project  Logical  Project  Logical  Project  Logical  Project  Logical  Project  create  create  copy  accept  with  Hints  find  Reference  visit  Input  Ref,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,1,0
818,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,Logical  Filter,variables  Set,Logical  Filter  Logical  Filter  Logical  Filter  Logical  Filter  create  create  get  Variables  Set  copy  accept  explain  Terms,0,0
819,transform  To  Farrago  Udx  Rel,Rel  Opt  Rule  Call  Splunk  Table  Scan  Logical  Filter  Logical  Project  Logical  Project,void,,,Logical  Filter,variables  Set,Logical  Filter  Logical  Filter  Logical  Filter  Logical  Filter  create  create  get  Variables  Set  copy  accept  explain  Terms,Splunk  Push  Down  Rule,logger  supported  ops  project  on  filter  filter  on  project  filter  project,Splunk  Push  Down  Rule  Splunk  Push  Down  Rule  on  Match  append  Search  String  add  Projection  Rule  get  Filter  asd  valid  to  String  search  Escape  get  Fields  String,1,0
820,direction,Mongo  Sort,int,,get  Direction,Mongo  Sort,,Mongo  Sort  compute  Self  Cost  copy  implement,Rel  Field  Collation,Direction  short  String  Null  Direction  null  Comparison  field  Index  direction  null  Direction,compare  Direction  monotonicity  of  default  Null  Direction  is  Descending  first  Null  Direction  Rel  Field  Collation  Rel  Field  Collation  Rel  Field  Collation  with  Field  Index  copy  with  Direction  with  Null  Direction  shift  equals  hash  Code  get  Field  Index  get  Direction  to  String  short  String,0,0
821,direction,Mongo  Sort,int,,get  Direction,Rel  Field  Collation,Direction  short  String  Null  Direction  null  Comparison  field  Index  direction  null  Direction,compare  Direction  monotonicity  of  default  Null  Direction  is  Descending  first  Null  Direction  Rel  Field  Collation  Rel  Field  Collation  Rel  Field  Collation  with  Field  Index  copy  with  Direction  with  Null  Direction  shift  equals  hash  Code  get  Field  Index  get  Direction  to  String  short  String,Mongo  Sort,,Mongo  Sort  compute  Self  Cost  copy  implement,1,1
