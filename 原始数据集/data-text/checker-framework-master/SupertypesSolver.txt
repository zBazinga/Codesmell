Class:SupertypesSolver
Method-name:solveFromSupertypes
Method-returnType:InferenceResult
Method-parameters:[final Set<TypeVariable> remainingTargets, final ConstraintMap constraintMap, final AnnotatedTypeFactory typeFactory]
MethodInvocation:targetToTypeLubs
MethodInvocation:getType
MethodInvocation:getPrimaries
MethodInvocation:mergeLubTypeWithEqualities
MethodInvocation:mergeLubAnnosWithEqualities
MethodInvocation:put
Method-name:mergeLubTypeWithEqualities
Method-returnType:InferredType
Method-parameters:[final TypeVariable target, final AnnotatedTypeMirror lub, final ConstraintMap constraintMap, final AnnotatedTypeFactory typeFactory]
FieldAccess:equalities
MethodInvocation:getConstraints
MethodInvocation:getTopAnnotations
MethodInvocation:getQualifierHierarchy
MethodInvocation:isEmpty
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:entrySet
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:contains
MethodInvocation:getAnnotationInHierarchy
MethodInvocation:getKind
MethodInvocation:isSameType
MethodInvocation:getUnderlyingType
MethodInvocation:getUnderlyingType
MethodInvocation:add
MethodInvocation:replaceAnnotation
MethodInvocation:add
Method-name:mergeLubAnnosWithEqualities
Method-returnType:InferredType
Method-parameters:[final TypeVariable target, final AnnotationMirrorMap<AnnotationMirror> lubAnnos, final ConstraintMap constraintMap, final AnnotatedTypeFactory typeFactory]
FieldAccess:equalities
MethodInvocation:getConstraints
MethodInvocation:getTopAnnotations
MethodInvocation:getQualifierHierarchy
MethodInvocation:isEmpty
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:entrySet
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:contains
MethodInvocation:get
MethodInvocation:replaceAnnotation
MethodInvocation:add
Class:Lubs
Field:types
Field:primaries
Method-name:addPrimaries
Method-returnType:void
Method-parameters:[final TypeVariable target, AnnotationMirrorMap<AnnotationMirror> primaries]
MethodInvocation:put
FieldAccess:primaries
Method-name:addType
Method-returnType:void
Method-parameters:[final TypeVariable target, final AnnotatedTypeMirror type]
MethodInvocation:put
Method-name:getPrimaries
Method-returnType:AnnotationMirrorMap<AnnotationMirror>
Method-parameters:[final TypeVariable target]
MethodInvocation:get
Method-name:getType
Method-returnType:AnnotatedTypeMirror
Method-parameters:[final TypeVariable target]
MethodInvocation:get
Method-name:targetToTypeLubs
Method-returnType:Lubs
Method-parameters:[Set<TypeVariable> remainingTargets, ConstraintMap constraintMap, AnnotatedTypeFactory typeFactory]
MethodInvocation:getQualifierHierarchy
MethodInvocation:getTopAnnotations
MethodInvocation:getTypeUtils
MethodInvocation:getProcessingEnv
MethodInvocation:sort
Method-name:compare
Method-returnType:int
Method-parameters:[TypeVariable o1, TypeVariable o2]
MethodInvocation:isSubtype
MethodInvocation:isSubtype
MethodInvocation:getConstraints
MethodInvocation:propagatePreviousLubs
MethodInvocation:lubPrimaries
MethodInvocation:addPrimaries
MethodInvocation:isEmpty
MethodInvocation:leastUpperBound
MethodInvocation:getEffectiveAnnotations
MethodInvocation:getTopAnnotation
MethodInvocation:get
MethodInvocation:isSubtype
MethodInvocation:areSame
MethodInvocation:replaceAnnotation
MethodInvocation:addType
Method-name:propagatePreviousLubs
Method-returnType:void
Method-parameters:[final TargetConstraints targetRecord, Lubs solution, final Map<AnnotatedTypeMirror,AnnotationMirrorSet> subtypesOfTarget]
MethodInvocation:entrySet
MethodInvocation:getType
MethodInvocation:getKey
MethodInvocation:get
MethodInvocation:addAll
MethodInvocation:getValue
MethodInvocation:put
MethodInvocation:getValue
Method-name:lubPrimaries
Method-returnType:void
Method-parameters:[AnnotationMirrorMap<AnnotationMirror> lubOfPrimaries, AnnotationMirrorMap<AnnotationMirrorSet> subtypeAnnos, AnnotationMirrorSet tops, QualifierHierarchy qualifierHierarchy]
MethodInvocation:clear
MethodInvocation:get
MethodInvocation:isEmpty
MethodInvocation:put
MethodInvocation:leastUpperBound
MethodInvocation:put
MethodInvocation:getBottomAnnotation
Method-name:groundMissingHierarchies
Method-returnType:AnnotatedTypeMirror
Method-parameters:[final Map.Entry<AnnotatedTypeMirror,AnnotationMirrorSet> typeToHierarchies, final AnnotationMirrorMap<AnnotationMirror> lowerBoundAnnos]
MethodInvocation:getValue
MethodInvocation:keySet
MethodInvocation:contains
MethodInvocation:add
MethodInvocation:get
MethodInvocation:isEmpty
MethodInvocation:deepCopy
MethodInvocation:getKey
MethodInvocation:replaceAnnotations
MethodInvocation:getKey
Method-name:leastUpperBound
Method-returnType:AnnotatedTypeMirror
Method-parameters:[final TypeVariable target, final AnnotatedTypeFactory typeFactory, final Map<AnnotatedTypeMirror,AnnotationMirrorSet> types]
MethodInvocation:getQualifierHierarchy
MethodInvocation:getAnnotatedType
MethodInvocation:asElement
MethodInvocation:createHierarchyMap
MethodInvocation:getEffectiveAnnotations
MethodInvocation:getLowerBound
MethodInvocation:iterator
MethodInvocation:entrySet
MethodInvocation:hasNext
MethodInvocation:next
MethodInvocation:groundMissingHierarchies
MethodInvocation:hasNext
MethodInvocation:groundMissingHierarchies
MethodInvocation:next
MethodInvocation:isPrimitive
MethodInvocation:getKind
MethodInvocation:isPrimitive
MethodInvocation:getKind
MethodInvocation:getBoxedType
MethodInvocation:isPrimitive
MethodInvocation:getKind
MethodInvocation:isPrimitive
MethodInvocation:getKind
MethodInvocation:getBoxedType
MethodInvocation:leastUpperBound
Method-name:leastUpperBound
Method-returnType:AnnotationMirror
Method-parameters:[final Iterable<? extends AnnotationMirror> annos, QualifierHierarchy qualifierHierarchy]
MethodInvocation:iterator
MethodInvocation:next
MethodInvocation:hasNext
MethodInvocation:leastUpperBound
MethodInvocation:next
