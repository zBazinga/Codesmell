Class:SingleRangeCheck
Field:errors
Field:ruleInspectors
Method-name:SingleRangeCheck
Method-returnType:null
Method-parameters:[AnalyzerConfiguration configuration, Collection<RuleInspector> ruleInspectors]
FieldAccess:ruleInspectors
Method-name:check
Method-returnType:boolean
Method-parameters:[]
MethodInvocation:isEmpty
MethodInvocation:clear
MethodInvocation:size
MethodInvocation:getConditionsInspectors
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:checkCondition
MethodInvocation:isEmpty
Method-name:checkCondition
Method-returnType:void
Method-parameters:[int conditionIndex]
MethodInvocation:collect
MethodInvocation:flatMap
MethodInvocation:map
MethodInvocation:stream
MethodInvocation:get
MethodInvocation:getConditionsInspectors
MethodInvocation:stream
MethodInvocation:keySet
MethodInvocation:groupingBy
MethodInvocation:getFieldOperatorType
MethodInvocation:toSet
MethodInvocation:get
MethodInvocation:isEmpty
MethodInvocation:checkRanges
MethodInvocation:partition
MethodInvocation:get
Method-name:checkRanges
Method-returnType:void
Method-parameters:[Collection<ObjectField> rangeFields, Map<PartitionKey,List<RuleInspector>> partitions, int conditionIndex]
MethodInvocation:entrySet
MethodInvocation:equals
MethodInvocation:getFieldType
MethodInvocation:checkMonodimensionalRange
MethodInvocation:checkMonodimensionalRange
MethodInvocation:checkBidimensionalRanges
Method-name:checkMonodimensionalRange
Method-returnType:void
Method-parameters:[Entry<PartitionKey,List<RuleInspector>> partition, List<List<? extends Range<?>>> dimensions, ObjectField field, int conditionIndex, Function<List<ConditionInspector>,Range<T>> rangeSupplier, T min, T max]
MethodInvocation:collect
MethodInvocation:map
MethodInvocation:map
MethodInvocation:map
MethodInvocation:stream
MethodInvocation:getValue
MethodInvocation:get
MethodInvocation:getConditionsInspectors
MethodInvocation:get
MethodInvocation:toList
MethodInvocation:getCoverageUpperBound
MethodInvocation:equals
MethodInvocation:add
MethodInvocation:add
MethodInvocation:getValue
MethodInvocation:getKey
Method-name:checkBidimensionalRanges
Method-returnType:void
Method-parameters:[Entry<PartitionKey,List<RuleInspector>> partition, List<List<? extends Range<?>>> dimensions]
MethodInvocation:isEmpty
MethodInvocation:size
MethodInvocation:size
MethodInvocation:size
MethodInvocation:checkBidimensionalRanges
MethodInvocation:get
MethodInvocation:get
MethodInvocation:add
MethodInvocation:getValue
MethodInvocation:getKey
Method-name:checkBidimensionalRanges
Method-returnType:boolean
Method-parameters:[List<? extends Range<? extends H>> hRanges, List<? extends Range<? extends V>> vRanges]
MethodInvocation:collect
MethodInvocation:sorted
MethodInvocation:mapToObj
MethodInvocation:range
MethodInvocation:size
MethodInvocation:get
MethodInvocation:get
MethodInvocation:comparing
MethodInvocation:toList
MethodInvocation:add
MethodInvocation:add
MethodInvocation:computeIfAbsent
MethodInvocation:equals
MethodInvocation:maxValue
MethodInvocation:add
MethodInvocation:add
MethodInvocation:computeIfAbsent
MethodInvocation:minValue
MethodInvocation:get
MethodInvocation:maxValue
MethodInvocation:get
MethodInvocation:get
MethodInvocation:addAll
MethodInvocation:get
MethodInvocation:removeAll
MethodInvocation:equals
MethodInvocation:getCoverageUpperBound
MethodInvocation:map
MethodInvocation:stream
Method-name:getFieldOperatorType
Method-returnType:OperatorType
Method-parameters:[ObjectField field, int conditionIndex]
MethodInvocation:reduce
MethodInvocation:map
MethodInvocation:map
MethodInvocation:flatMap
MethodInvocation:stream
MethodInvocation:getConditionStream
MethodInvocation:resolve
MethodInvocation:getOperator
MethodInvocation:getCondition
Field:OperatorType
Method-name:decode
Method-returnType:OperatorType
Method-parameters:[Operator op]
MethodInvocation:isRangeOperator
Method-name:combine
Method-returnType:OperatorType
Method-parameters:[OperatorType other]
Method-name:partition
Method-returnType:Map<PartitionKey,List<RuleInspector>>
Method-parameters:[Collection<ObjectField> partitionFields, Collection<RuleInspector> rules, int conditionIndex]
MethodInvocation:getPartitionKey
MethodInvocation:add
MethodInvocation:computeIfAbsent
MethodInvocation:hasNulls
MethodInvocation:add
MethodInvocation:entrySet
MethodInvocation:subsumes
MethodInvocation:getKey
MethodInvocation:addAll
MethodInvocation:getValue
MethodInvocation:get
MethodInvocation:forEach
Method-name:getPartitionKey
Method-returnType:PartitionKey
Method-parameters:[Collection<ObjectField> partitionFields, RuleInspector rule, int conditionIndex]
MethodInvocation:isEmpty
MethodInvocation:toArray
MethodInvocation:map
MethodInvocation:stream
MethodInvocation:getValue
Method-name:getValue
Method-returnType:Object
Method-parameters:[RuleInspector rule, ObjectField field, int conditionIndex]
MethodInvocation:getConditions
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
MethodInvocation:getCondition
MethodInvocation:get
Method-name:getConditionStream
Method-returnType:Stream<ConditionInspector>
Method-parameters:[RuleInspector rule, ObjectField field, int conditionIndex]
MethodInvocation:getConditions
MethodInvocation:stream
MethodInvocation:empty
Class:PartitionKey
Field:EMPTY_KEY
Field:keys
Method-name:PartitionKey
Method-returnType:null
Method-parameters:[Object[] keys]
FieldAccess:keys
Method-name:equals
Method-returnType:boolean
Method-parameters:[Object obj]
MethodInvocation:equals
FieldAccess:keys
Method-name:hashCode
Method-returnType:int
Method-parameters:[]
MethodInvocation:hashCode
Method-name:toString
Method-returnType:String
Method-parameters:[]
MethodInvocation:toString
Method-name:hasNulls
Method-returnType:boolean
Method-parameters:[]
MethodInvocation:anyMatch
MethodInvocation:of
Method-name:subsumes
Method-returnType:boolean
Method-parameters:[PartitionKey other]
MethodInvocation:allMatch
MethodInvocation:range
MethodInvocation:equals
Method-name:getCoverageUpperBound
Method-returnType:T
Method-parameters:[T lowerBound, List<? extends Range<? extends T>> ranges]
MethodInvocation:getCoverageUpperBound
MethodInvocation:stream
Method-name:getCoverageUpperBound
Method-returnType:T
Method-parameters:[T lowerBound, Stream<? extends Range<? extends T>> ranges]
MethodInvocation:iterator
MethodInvocation:sorted
MethodInvocation:hasNext
MethodInvocation:next
MethodInvocation:compareTo
MethodInvocation:compareTo
Class:Range
Field:lowerBound
MethodInvocation:minValue
Field:upperBound
MethodInvocation:maxValue
Method-name:Range
Method-returnType:null
Method-parameters:[List<ConditionInspector> conditionInspectors]
MethodInvocation:forEach
MethodInvocation:getConditionParser
Method-name:getConditionParser
Method-returnType:Consumer<ConditionInspector>
Method-parameters:[]
Method-name:toString
Method-returnType:String
Method-parameters:[]
Method-name:compareTo
Method-returnType:int
Method-parameters:[Range<T> o]
MethodInvocation:compareTo
Method-name:minValue
Method-returnType:T
Method-parameters:[]
Method-name:maxValue
Method-returnType:T
Method-parameters:[]
Class:IntegerRange
Method-name:IntegerRange
Method-returnType:null
Method-parameters:[List<ConditionInspector> conditionInspectors]
Method-name:getConditionParser
Method-returnType:Consumer<ConditionInspector>
Method-parameters:[]
MethodInvocation:getCondition
MethodInvocation:resolve
MethodInvocation:getOperator
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
Method-name:minValue
Method-returnType:Integer
Method-parameters:[]
Method-name:maxValue
Method-returnType:Integer
Method-parameters:[]
Class:NumericRange
Method-name:NumericRange
Method-returnType:null
Method-parameters:[List<ConditionInspector> conditionInspectors]
Method-name:getConditionParser
Method-returnType:Consumer<ConditionInspector>
Method-parameters:[]
MethodInvocation:getCondition
MethodInvocation:resolve
MethodInvocation:getOperator
MethodInvocation:doubleValue
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
MethodInvocation:doubleValue
MethodInvocation:next
MethodInvocation:iterator
MethodInvocation:getValues
Method-name:minValue
Method-returnType:Double
Method-parameters:[]
Method-name:maxValue
Method-returnType:Double
Method-parameters:[]
Class:BidimensionalRange
Field:horizontal
Field:vertical
Method-name:BidimensionalRange
Method-returnType:null
Method-parameters:[Range<? extends H> horizontal, Range<? extends V> vertical]
FieldAccess:horizontal
FieldAccess:vertical
Method-name:toString
Method-returnType:String
Method-parameters:[]
Method-name:makeIssue
Method-returnType:Issue
Method-parameters:[Severity severity, CheckType checkType]
MethodInvocation:toIssue
MethodInvocation:get
Class:RangeError
Field:ruleInspectors
Field:partitionKey
Field:uncoveredValue
Method-name:RangeError
Method-returnType:null
Method-parameters:[Collection<RuleInspector> ruleInspectors, PartitionKey partitionKey, Object uncoveredValue]
FieldAccess:ruleInspectors
FieldAccess:partitionKey
FieldAccess:uncoveredValue
Method-name:toIssue
Method-returnType:Issue
Method-parameters:[Severity severity, CheckType checkType]
MethodInvocation:setDebugMessage
MethodInvocation:collect
MethodInvocation:map
MethodInvocation:stream
MethodInvocation:getRowIndex
MethodInvocation:toSet
MethodInvocation:getMessage
Method-name:getMessage
Method-returnType:String
Method-parameters:[]
Method-name:getCheckType
Method-returnType:CheckType
Method-parameters:[]
Method-name:getDefaultSeverity
Method-returnType:Severity
Method-parameters:[]
