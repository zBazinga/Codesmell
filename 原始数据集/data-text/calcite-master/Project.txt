Class:Project
Field:exps
Field:hints
Method-name:Project
Method-returnType:null
Method-parameters:[RelOptCluster cluster, RelTraitSet traits, List<RelHint> hints, RelNode input, List<? extends RexNode> projects, RelDataType rowType]
Method-name:Project
Method-returnType:null
Method-parameters:[RelOptCluster cluster, RelTraitSet traits, RelNode input, List<? extends RexNode> projects, RelDataType rowType]
MethodInvocation:of
Method-name:Project
Method-returnType:null
Method-parameters:[RelOptCluster cluster, RelTraitSet traitSet, RelNode input, List<? extends RexNode> projects, RelDataType rowType, int flags]
MethodInvocation:of
MethodInvocation:discard
Method-name:Project
Method-returnType:null
Method-parameters:[RelInput input]
MethodInvocation:getCluster
MethodInvocation:getTraitSet
MethodInvocation:of
MethodInvocation:getInput
MethodInvocation:getExpressionList
MethodInvocation:getRowType
Method-name:copy
Method-returnType:RelNode
Method-parameters:[RelTraitSet traitSet, List<RelNode> inputs]
MethodInvocation:copy
MethodInvocation:sole
Method-name:copy
Method-returnType:Project
Method-parameters:[RelTraitSet traitSet, RelNode input, List<RexNode> projects, RelDataType rowType]
Method-name:isBoxed
Method-returnType:boolean
Method-parameters:[]
Method-name:getChildExps
Method-returnType:List<RexNode>
Method-parameters:[]
Method-name:accept
Method-returnType:RelNode
Method-parameters:[RexShuttle shuttle]
MethodInvocation:apply
FieldAccess:exps
FieldAccess:exps
MethodInvocation:createStructType
MethodInvocation:getTypeFactory
MethodInvocation:getCluster
MethodInvocation:getInput
MethodInvocation:getFieldNames
FieldAccess:rowType
MethodInvocation:copy
MethodInvocation:getInput
Method-name:getProjects
Method-returnType:List<RexNode>
Method-parameters:[]
Method-name:getNamedProjects
Method-returnType:List<Pair<RexNode,String>>
Method-parameters:[]
MethodInvocation:zip
MethodInvocation:getProjects
MethodInvocation:getFieldNames
MethodInvocation:getRowType
Method-name:getHints
Method-returnType:ImmutableList<RelHint>
Method-parameters:[]
Method-name:getFlags
Method-returnType:int
Method-parameters:[]
Method-name:isValid
Method-returnType:boolean
Method-parameters:[Litmus litmus, Context context]
MethodInvocation:fail
MethodInvocation:compatibleTypes
MethodInvocation:getRowType
MethodInvocation:fail
MethodInvocation:getRowType
MethodInvocation:getInput
MethodInvocation:accept
MethodInvocation:getFailureCount
MethodInvocation:fail
MethodInvocation:getFailureCount
MethodInvocation:isDistinct
MethodInvocation:getFieldNames
MethodInvocation:fail
MethodInvocation:isDistinct
MethodInvocation:transform
MethodInvocation:fail
MethodInvocation:succeed
Method-name:computeSelfCost
Method-returnType:RelOptCost
Method-parameters:[RelOptPlanner planner, RelMetadataQuery mq]
MethodInvocation:getRowCount
MethodInvocation:getInput
MethodInvocation:size
MethodInvocation:makeCost
MethodInvocation:getCostFactory
Method-name:countTrivial
Method-returnType:int
Method-parameters:[List<RexNode> refs]
MethodInvocation:size
MethodInvocation:get
MethodInvocation:getIndex
MethodInvocation:size
Method-name:explainTerms
Method-returnType:RelWriter
Method-parameters:[RelWriter pw]
MethodInvocation:getDetailLevel
MethodInvocation:countTrivial
MethodInvocation:item
MethodInvocation:item
MethodInvocation:size
MethodInvocation:item
MethodInvocation:subList
MethodInvocation:size
MethodInvocation:nest
MethodInvocation:item
MethodInvocation:getFieldNames
MethodInvocation:item
MethodInvocation:zip
MethodInvocation:getFieldList
MethodInvocation:getName
MethodInvocation:item
MethodInvocation:get
Method-name:getMapping
Method-returnType:Mappings.TargetMapping
Method-parameters:[]
MethodInvocation:getMapping
MethodInvocation:getFieldCount
MethodInvocation:getRowType
MethodInvocation:getInput
Method-name:getMapping
Method-returnType:Mappings.TargetMapping
Method-parameters:[int inputFieldCount, List<? extends RexNode> projects]
MethodInvocation:size
MethodInvocation:create
MethodInvocation:size
MethodInvocation:zip
MethodInvocation:getIndex
MethodInvocation:getTargetOpt
MethodInvocation:set
Method-name:getPartialMapping
Method-returnType:Mappings.TargetMapping
Method-parameters:[int inputFieldCount, List<? extends RexNode> projects]
MethodInvocation:create
MethodInvocation:size
MethodInvocation:zip
MethodInvocation:set
MethodInvocation:getIndex
Method-name:getPermutation
Method-returnType:Permutation
Method-parameters:[]
MethodInvocation:getPermutation
MethodInvocation:getFieldCount
MethodInvocation:getRowType
MethodInvocation:getInput
Method-name:getPermutation
Method-returnType:Permutation
Method-parameters:[int inputFieldCount, List<? extends RexNode> projects]
MethodInvocation:size
MethodInvocation:get
MethodInvocation:getIndex
MethodInvocation:add
MethodInvocation:set
Method-name:isMapping
Method-returnType:boolean
Method-parameters:[]
Class:Flags
Field:ANON_FIELDS
Field:BOXED
Field:NONE
