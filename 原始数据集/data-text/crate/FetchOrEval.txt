Class:FetchOrEval
Field:fetchMode
Field:doFetch
Field:outputs
Method-name:create
Method-returnType:LogicalPlan.Builder
Method-parameters:[LogicalPlan.Builder sourceBuilder, List<Symbol> outputs, FetchMode fetchMode, boolean isLastFetch, boolean childIsLimited]
MethodInvocation:extractColumns
MethodInvocation:build
MethodInvocation:build
MethodInvocation:emptySet
MethodInvocation:getUnusedColumns
MethodInvocation:isEmpty
MethodInvocation:build
MethodInvocation:emptySet
MethodInvocation:build
MethodInvocation:equals
MethodInvocation:outputs
MethodInvocation:containsColumn
MethodInvocation:outputs
MethodInvocation:isEmpty
MethodInvocation:outputs
MethodInvocation:generateOutputs
MethodInvocation:outputs
Method-name:FetchOrEval
Method-returnType:null
Method-parameters:[LogicalPlan source, List<Symbol> outputs, FetchMode fetchMode, boolean doFetch]
FieldAccess:outputs
FieldAccess:fetchMode
FieldAccess:doFetch
Method-name:generateOutputs
Method-returnType:List<Symbol>
Method-parameters:[List<Symbol> wantedOutputs, List<Symbol> sourceOutputs]
MethodInvocation:extractColumns
MethodInvocation:addFetchIdColumns
MethodInvocation:size
MethodInvocation:get
MethodInvocation:put
MethodInvocation:extractColumns
MethodInvocation:contains
MethodInvocation:add
MethodInvocation:addScalarsWithAvailableSources
Method-name:addScalarsWithAvailableSources
Method-returnType:void
Method-parameters:[ArrayList<Symbol> result, Set<Symbol> sourceColumns, HashMap<Symbol,Set<Symbol>> wantedColumnsByScalar]
MethodInvocation:entrySet
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:isEmpty
MethodInvocation:difference
MethodInvocation:add
Method-name:addFetchIdColumns
Method-returnType:void
Method-parameters:[List<Symbol> sourceOutputs, ArrayList<Symbol> result]
MethodInvocation:size
MethodInvocation:get
MethodInvocation:containsColumn
MethodInvocation:add
Method-name:build
Method-returnType:ExecutionPlan
Method-parameters:[PlannerContext plannerContext, ProjectionBuilder projectionBuilder, int limit, int offset, @Nullable OrderBy order, @Nullable Integer pageSizeHint, Row params, SubQueryResults subQueryResults]
MethodInvocation:build
MethodInvocation:outputs
MethodInvocation:containsColumn
MethodInvocation:planWithFetch
MethodInvocation:planWithEvalProjection
Method-name:outputs
Method-returnType:List<Symbol>
Method-parameters:[]
Method-name:replaceSources
Method-returnType:LogicalPlan
Method-parameters:[List<LogicalPlan> sources]
MethodInvocation:getOnlyElement
Method-name:planWithFetch
Method-returnType:ExecutionPlan
Method-parameters:[PlannerContext plannerContext, ExecutionPlan executionPlan, List<Symbol> sourceOutputs, Row params, SubQueryResults subQueryResults]
MethodInvocation:ensureOnHandler
MethodInvocation:buildFetchInputColumnsMap
MethodInvocation:ident
MethodInvocation:tableInfo
MethodInvocation:get
MethodInvocation:partitionedByColumns
MethodInvocation:tableInfo
MethodInvocation:put
MethodInvocation:granularity
MethodInvocation:add
MethodInvocation:addRefToFetch
MethodInvocation:addFetchIdColumn
MethodInvocation:get
MethodInvocation:size
MethodInvocation:add
MethodInvocation:toInputColOrFetchRef
MethodInvocation:convert
MethodInvocation:expressionMapping
MethodInvocation:size
MethodInvocation:baseTables
MethodInvocation:mutate
MethodInvocation:transformRefs
MethodInvocation:get
MethodInvocation:baseTables
MethodInvocation:isEmpty
MethodInvocation:planWithEvalProjection
MethodInvocation:buildReaderAllocations
MethodInvocation:nextExecutionPhaseId
MethodInvocation:keySet
MethodInvocation:nodeReaders
MethodInvocation:bases
MethodInvocation:tableIndices
MethodInvocation:phaseId
MethodInvocation:fetchSize
MethodInvocation:nodeReaders
MethodInvocation:indices
MethodInvocation:indicesToIdents
MethodInvocation:addProjection
Method-name:transformRefs
Method-returnType:Symbol
Method-parameters:[Symbol output, List<Symbol> sourceOutputs, Map<DocTableRelation,InputColumn> fetchInputColumnsByTable, BiConsumer<DocTableRelation,Reference> allocateFetchRef, AbstractTableRelation baseTable]
MethodInvocation:indexOf
MethodInvocation:valueType
MethodInvocation:get
MethodInvocation:replaceRefs
MethodInvocation:indexOf
MethodInvocation:valueType
MethodInvocation:get
MethodInvocation:granularity
MethodInvocation:toSourceLookup
MethodInvocation:accept
MethodInvocation:get
Method-name:buildFetchInputColumnsMap
Method-returnType:Map<DocTableRelation,InputColumn>
Method-parameters:[List<Symbol> outputs]
Method-name:resolveDocTableRelation
Method-returnType:DocTableRelation
Method-parameters:[Symbol output]
MethodInvocation:relation
MethodInvocation:relation
MethodInvocation:relation
MethodInvocation:relation
MethodInvocation:tableRelation
MethodInvocation:tableRelation
MethodInvocation:get
MethodInvocation:expressionMapping
Method-name:toInputColOrFetchRef
Method-returnType:Symbol
Method-parameters:[Symbol output, List<Symbol> sourceOutputs, Map<DocTableRelation,InputColumn> fetchInputColumnsByTable, BiConsumer<DocTableRelation,Reference> allocateFetchRef, Map<Symbol,Symbol> expressionMapping]
Method-name:toString
Method-returnType:String
Method-parameters:[]
Method-name:accept
Method-returnType:R
Method-parameters:[LogicalPlanVisitor<C,R> visitor, C context]
MethodInvocation:visitFetchOrEval
