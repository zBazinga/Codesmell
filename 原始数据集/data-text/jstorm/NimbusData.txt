Class:NimbusData
Field:LOG
MethodInvocation:getLogger
Field:conf
Field:stormClusterState
Field:taskHeartbeatsCache
Field:downloaders
Field:uploaders
Field:blobDownloaders
Field:blobUploaders
Field:blobListers
Field:blobStore
Field:nimbusHostPortInfo
Field:isLaunchedCleaner
Field:isLaunchedMonitor
Field:nimbusCache
Field:startTime
Field:scheduExec
Field:submittedCount
Field:statusTransition
Field:SCHEDULE_THREAD_NUM
Field:inimubs
Field:localMode
Field:isLeader
Field:isShutdown
Field:metricRunnable
Field:pendingSubmitTopologies
Field:topologyTaskTimeout
Field:tasksHeartbeat
Field:metricCache
Field:clusterName
Field:metricsReporter
Field:nimbusNotify
Field:configUpdateHandler
Field:topologyIdtoSem
Method-name:NimbusData
Method-returnType:null
Method-parameters:[final Map conf, INimbus inimbus]
FieldAccess:conf
MethodInvocation:createFileHandler
MethodInvocation:mkBlobCacheMap
FieldAccess:nimbusHostPortInfo
MethodInvocation:fromConf
FieldAccess:blobStore
MethodInvocation:getNimbusBlobStore
FieldAccess:isLaunchedCleaner
FieldAccess:isLaunchedMonitor
FieldAccess:submittedCount
FieldAccess:stormClusterState
MethodInvocation:mk_storm_cluster_state
MethodInvocation:createCache
FieldAccess:taskHeartbeatsCache
FieldAccess:scheduExec
MethodInvocation:newScheduledThreadPool
FieldAccess:statusTransition
FieldAccess:startTime
MethodInvocation:current_time_secs
FieldAccess:inimubs
MethodInvocation:local_mode
FieldAccess:metricCache
FieldAccess:stormClusterState
FieldAccess:clusterName
MethodInvocation:getClusterName
FieldAccess:metricsReporter
FieldAccess:metricRunnable
MethodInvocation:mkInstance
MethodInvocation:getNimbusConfigUpdateHandlerClass
FieldAccess:configUpdateHandler
MethodInvocation:newInstance
MethodInvocation:containsKey
MethodInvocation:get
MethodInvocation:newInstance
Method-name:init
Method-returnType:void
Method-parameters:[]
MethodInvocation:init
FieldAccess:metricsReporter
MethodInvocation:init
FieldAccess:metricRunnable
MethodInvocation:init
FieldAccess:configUpdateHandler
MethodInvocation:prepare
Method-name:createFileHandler
Method-returnType:void
Method-parameters:[]
Method-name:expire
Method-returnType:void
Method-parameters:[Object key, Object val]
MethodInvocation:info
MethodInvocation:valueOf
MethodInvocation:close
MethodInvocation:close
MethodInvocation:error
MethodInvocation:getMessage
MethodInvocation:parseInt
MethodInvocation:get
Method-name:mkBlobCacheMap
Method-returnType:void
Method-parameters:[]
Method-name:expire
Method-returnType:void
Method-parameters:[Object key, Object val]
MethodInvocation:debug
MethodInvocation:valueOf
MethodInvocation:cancel
MethodInvocation:close
MethodInvocation:close
MethodInvocation:error
MethodInvocation:getMessage
MethodInvocation:parseInt
MethodInvocation:get
Method-name:createCache
Method-returnType:void
Method-parameters:[]
MethodInvocation:setCache
MethodInvocation:getMemCache
Method-name:getClusterName
Method-returnType:String
Method-parameters:[]
Method-name:uptime
Method-returnType:int
Method-parameters:[]
MethodInvocation:current_time_secs
Method-name:getConf
Method-returnType:Map<Object,Object>
Method-parameters:[]
Method-name:getStormClusterState
Method-returnType:StormClusterState
Method-parameters:[]
Method-name:setStormClusterState
Method-returnType:void
Method-parameters:[StormClusterState stormClusterState]
FieldAccess:stormClusterState
Method-name:getTaskHeartbeatsCache
Method-returnType:ConcurrentHashMap<String,Map<Integer,TkHbCacheTime>>
Method-parameters:[]
Method-name:getTaskHeartbeatsCache
Method-returnType:Map<Integer,TkHbCacheTime>
Method-parameters:[String topologyId, boolean createIfNotExist]
MethodInvocation:get
MethodInvocation:putIfAbsent
Method-name:setTaskHeartbeatsCache
Method-returnType:void
Method-parameters:[ConcurrentHashMap<String,Map<Integer,TkHbCacheTime>> taskHeartbeatsCache]
FieldAccess:taskHeartbeatsCache
Method-name:getDownloaders
Method-returnType:TimeCacheMap<Object,Object>
Method-parameters:[]
Method-name:setDownloaders
Method-returnType:void
Method-parameters:[TimeCacheMap<Object,Object> downloaders]
FieldAccess:downloaders
Method-name:getUploaders
Method-returnType:TimeCacheMap<Object,Object>
Method-parameters:[]
Method-name:setUploaders
Method-returnType:void
Method-parameters:[TimeCacheMap<Object,Object> uploaders]
FieldAccess:uploaders
Method-name:getStartTime
Method-returnType:int
Method-parameters:[]
Method-name:setStartTime
Method-returnType:void
Method-parameters:[int startTime]
FieldAccess:startTime
Method-name:getSubmittedCount
Method-returnType:AtomicInteger
Method-parameters:[]
Method-name:getScheduExec
Method-returnType:ScheduledExecutorService
Method-parameters:[]
Method-name:getStatusTransition
Method-returnType:StatusTransition
Method-parameters:[]
Method-name:cleanup
Method-returnType:void
Method-parameters:[]
MethodInvocation:cleanup
MethodInvocation:info
MethodInvocation:disconnect
MethodInvocation:info
MethodInvocation:shutdown
MethodInvocation:info
MethodInvocation:cleanup
MethodInvocation:cleanup
MethodInvocation:cleanup
MethodInvocation:cleanup
MethodInvocation:cleanup
MethodInvocation:shutdown
Method-name:getInimubs
Method-returnType:INimbus
Method-parameters:[]
Method-name:isLocalMode
Method-returnType:boolean
Method-parameters:[]
Method-name:isLeader
Method-returnType:boolean
Method-parameters:[]
Method-name:setLeader
Method-returnType:void
Method-parameters:[boolean isLeader]
FieldAccess:isLeader
Method-name:getIsShutdown
Method-returnType:AtomicBoolean
Method-parameters:[]
Method-name:getMemCache
Method-returnType:JStormCache
Method-parameters:[]
MethodInvocation:getMemCache
Method-name:getDbCache
Method-returnType:JStormCache
Method-parameters:[]
MethodInvocation:getDbCache
Method-name:getNimbusCache
Method-returnType:NimbusCache
Method-parameters:[]
Method-name:getMetricCache
Method-returnType:JStormMetricCache
Method-parameters:[]
Method-name:getPendingSubmitTopologies
Method-returnType:TimeCacheMap<String,Object>
Method-parameters:[]
Method-name:getTopologyTaskTimeout
Method-returnType:Map<String,Integer>
Method-parameters:[]
Method-name:getTasksHeartbeat
Method-returnType:Map<String,TopologyTaskHbInfo>
Method-parameters:[]
Method-name:getNimbusNotify
Method-returnType:ITopologyActionNotifierPlugin
Method-parameters:[]
Method-name:getBlobDownloaders
Method-returnType:TimeCacheMap<Object,Object>
Method-parameters:[]
Method-name:getBlobUploaders
Method-returnType:TimeCacheMap<Object,Object>
Method-parameters:[]
Method-name:getBlobListers
Method-returnType:TimeCacheMap<Object,Object>
Method-parameters:[]
Method-name:getNimbusHostPortInfo
Method-returnType:NimbusInfo
Method-parameters:[]
Method-name:getBlobStore
Method-returnType:BlobStore
Method-parameters:[]
Method-name:isLaunchedCleaner
Method-returnType:boolean
Method-parameters:[]
Method-name:setLaunchedCleaner
Method-returnType:void
Method-parameters:[boolean launchedCleaner]
Method-name:isLaunchedMonitor
Method-returnType:boolean
Method-parameters:[]
Method-name:setLaunchedMonitor
Method-returnType:void
Method-parameters:[boolean launchedMonitor]
Method-name:getTopologyIdtoSem
Method-returnType:ConcurrentHashMap<String,Semaphore>
Method-parameters:[]
Method-name:checkTopologyActive
Method-returnType:void
Method-parameters:[String topologyName, boolean bActive, ServiceHandler serviceHandler]
MethodInvocation:isTopologyActive
MethodInvocation:getStormClusterState
