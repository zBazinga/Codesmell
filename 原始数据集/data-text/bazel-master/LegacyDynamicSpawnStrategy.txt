Class:LegacyDynamicSpawnStrategy
Field:logger
MethodInvocation:getLogger
MethodInvocation:getName
Field:WORKER_BLACKLISTED_MNEMONICS
MethodInvocation:of
Field:executorService
Field:options
Field:getExecutionPolicy
Field:delayLocalExecution
Field:workerStrategy
Method-name:LegacyDynamicSpawnStrategy
Method-returnType:null
Method-parameters:[ExecutorService executorService, DynamicExecutionOptions options, Function<Spawn,ExecutionPolicy> getExecutionPolicy]
FieldAccess:executorService
FieldAccess:options
FieldAccess:getExecutionPolicy
Method-name:getSuffixedFileOutErr
Method-returnType:FileOutErr
Method-parameters:[FileOutErr fileOutErr, String suffix]
MethodInvocation:checkNotNull
MethodInvocation:getParentDirectory
MethodInvocation:getOutputPath
MethodInvocation:getBaseName
MethodInvocation:getOutputPath
MethodInvocation:checkNotNull
MethodInvocation:getParentDirectory
MethodInvocation:getErrorPath
MethodInvocation:getBaseName
MethodInvocation:getErrorPath
MethodInvocation:getChild
MethodInvocation:getChild
Method-name:supportsWorkers
Method-returnType:boolean
Method-parameters:[Spawn spawn]
MethodInvocation:contains
MethodInvocation:getMnemonic
MethodInvocation:supportsWorkers
Method-name:lockOutputFiles
Method-returnType:SandboxedSpawnStrategy.StopConcurrentSpawns
Method-parameters:[SandboxedSpawnStrategy token, @Nullable AtomicReference<SpawnStrategy> outputWriteBarrier]
MethodInvocation:get
MethodInvocation:compareAndSet
Method-name:runLocally
Method-returnType:ImmutableList<SpawnResult>
Method-parameters:[Spawn spawn, ActionExecutionContext actionExecutionContext, @Nullable AtomicReference<SpawnStrategy> outputWriteBarrier]
MethodInvocation:getContext
MethodInvocation:getDynamicSpawnActionContexts
MethodInvocation:contains
MethodInvocation:toString
MethodInvocation:supportsWorkers
MethodInvocation:exec
MethodInvocation:lockOutputFiles
Method-name:runRemotely
Method-returnType:ImmutableList<SpawnResult>
Method-parameters:[Spawn spawn, ActionExecutionContext actionExecutionContext, @Nullable AtomicReference<SpawnStrategy> outputWriteBarrier]
MethodInvocation:getContext
MethodInvocation:getDynamicSpawnActionContexts
MethodInvocation:exec
MethodInvocation:lockOutputFiles
Method-name:exec
Method-returnType:ImmutableList<SpawnResult>
Method-parameters:[final Spawn spawn, final ActionExecutionContext actionExecutionContext]
MethodInvocation:contains
MethodInvocation:getMnemonic
MethodInvocation:containsKey
MethodInvocation:getExecutionInfo
MethodInvocation:containsKey
MethodInvocation:getExecutionInfo
MethodInvocation:format
MethodInvocation:getMnemonic
MethodInvocation:getToolFiles
MethodInvocation:getExecutionPlatform
MethodInvocation:getExecutionInfo
MethodInvocation:apply
MethodInvocation:canRunLocallyOnly
MethodInvocation:runLocally
MethodInvocation:canRunRemotelyOnly
MethodInvocation:runRemotely
MethodInvocation:create
MethodInvocation:of
MethodInvocation:invokeAny
MethodInvocation:of
MethodInvocation:getFileOutErr
Method-name:callImpl
Method-returnType:List<SpawnResult>
Method-parameters:[]
MethodInvocation:get
MethodInvocation:sleep
MethodInvocation:runLocally
MethodInvocation:withFileOutErr
MethodInvocation:getFileOutErr
Method-name:callImpl
Method-returnType:List<SpawnResult>
Method-parameters:[]
MethodInvocation:runRemotely
MethodInvocation:withFileOutErr
MethodInvocation:set
MethodInvocation:propagateIfPossible
MethodInvocation:getCause
MethodInvocation:getCause
MethodInvocation:arriveAndAwaitAdvance
MethodInvocation:execException
MethodInvocation:execException
MethodInvocation:isInterrupted
MethodInvocation:currentThread
MethodInvocation:warning
MethodInvocation:interrupted
MethodInvocation:strategyIdentifier
MethodInvocation:fileOutErr
MethodInvocation:equals
MethodInvocation:moveFileOutErr
MethodInvocation:toLowerCase
MethodInvocation:name
MethodInvocation:format
MethodInvocation:handle
MethodInvocation:getEventHandler
MethodInvocation:warn
MethodInvocation:format
MethodInvocation:toString
MethodInvocation:handle
MethodInvocation:getEventHandler
MethodInvocation:info
MethodInvocation:format
MethodInvocation:getMnemonic
MethodInvocation:execException
MethodInvocation:prettyName
MethodInvocation:spawnResults
Method-name:canExec
Method-returnType:boolean
Method-parameters:[Spawn spawn, ActionContext.ActionContextRegistry actionContextRegistry]
MethodInvocation:getContext
MethodInvocation:getDynamicSpawnActionContexts
MethodInvocation:canExec
MethodInvocation:getDynamicSpawnActionContexts
MethodInvocation:canExec
MethodInvocation:canExec
Field:StrategyIdentifier
Field:prettyName
Method-name:StrategyIdentifier
Method-returnType:null
Method-parameters:[String prettyName]
FieldAccess:prettyName
Method-name:prettyName
Method-returnType:String
Method-parameters:[]
Class:DynamicExecutionResult
Method-name:create
Method-returnType:DynamicExecutionResult
Method-parameters:[StrategyIdentifier strategyIdentifier, @Nullable FileOutErr fileOutErr, @Nullable ExecException execException, List<SpawnResult> spawnResults]
MethodInvocation:copyOf
Method-name:strategyIdentifier
Method-returnType:StrategyIdentifier
Method-parameters:[]
Method-name:fileOutErr
Method-returnType:FileOutErr
Method-parameters:[]
Method-name:execException
Method-returnType:ExecException
Method-parameters:[]
Method-name:spawnResults
Method-returnType:ImmutableList<SpawnResult>
Method-parameters:[]
Class:DynamicExecutionCallable
Field:fileOutErr
Field:taskFinished
Field:strategyIdentifier
Method-name:DynamicExecutionCallable
Method-returnType:null
Method-parameters:[Phaser taskFinished, StrategyIdentifier strategyIdentifier, FileOutErr fileOutErr]
FieldAccess:taskFinished
FieldAccess:strategyIdentifier
FieldAccess:fileOutErr
MethodInvocation:getSuffixedFileOutErr
MethodInvocation:name
Method-name:callImpl
Method-returnType:List<SpawnResult>
Method-parameters:[]
Method-name:call
Method-returnType:DynamicExecutionResult
Method-parameters:[]
MethodInvocation:register
MethodInvocation:callImpl
MethodInvocation:create
MethodInvocation:throwIfInstanceOf
MethodInvocation:create
MethodInvocation:of
MethodInvocation:close
MethodInvocation:arriveAndDeregister
