Class:InvocableHandlerMethod
Field:EMPTY_ARGS
MethodInvocation:just
Field:NO_ARG_VALUE
Field:resolvers
Field:parameterNameDiscoverer
Field:reactiveAdapterRegistry
MethodInvocation:getSharedInstance
Method-name:InvocableHandlerMethod
Method-returnType:null
Method-parameters:[HandlerMethod handlerMethod]
Method-name:InvocableHandlerMethod
Method-returnType:null
Method-parameters:[Object bean, Method method]
Method-name:setArgumentResolvers
Method-returnType:void
Method-parameters:[List<HandlerMethodArgumentResolver> resolvers]
MethodInvocation:addResolvers
FieldAccess:resolvers
Method-name:getResolvers
Method-returnType:List<HandlerMethodArgumentResolver>
Method-parameters:[]
MethodInvocation:getResolvers
FieldAccess:resolvers
Method-name:setParameterNameDiscoverer
Method-returnType:void
Method-parameters:[ParameterNameDiscoverer nameDiscoverer]
FieldAccess:parameterNameDiscoverer
Method-name:getParameterNameDiscoverer
Method-returnType:ParameterNameDiscoverer
Method-parameters:[]
FieldAccess:parameterNameDiscoverer
Method-name:setReactiveAdapterRegistry
Method-returnType:void
Method-parameters:[ReactiveAdapterRegistry registry]
FieldAccess:reactiveAdapterRegistry
Method-name:invoke
Method-returnType:Mono<Object>
Method-parameters:[Message<?> message, Object... providedArgs]
MethodInvocation:flatMap
MethodInvocation:getMethodArgumentValues
MethodInvocation:getBridgedMethod
MethodInvocation:makeAccessible
MethodInvocation:isKotlinReflectPresent
MethodInvocation:isKotlinType
MethodInvocation:getDeclaringClass
MethodInvocation:isSuspendingFunction
MethodInvocation:invokeSuspendingFunction
MethodInvocation:getBean
MethodInvocation:invoke
MethodInvocation:getBean
MethodInvocation:assertTargetBean
MethodInvocation:getBridgedMethod
MethodInvocation:getBean
MethodInvocation:getMessage
MethodInvocation:getMessage
MethodInvocation:error
MethodInvocation:formatInvokeError
MethodInvocation:error
MethodInvocation:getTargetException
MethodInvocation:error
MethodInvocation:formatInvokeError
MethodInvocation:getReturnType
MethodInvocation:getClass
MethodInvocation:getParameterType
MethodInvocation:getAdapter
FieldAccess:reactiveAdapterRegistry
MethodInvocation:isAsyncVoidReturnType
MethodInvocation:from
MethodInvocation:toPublisher
MethodInvocation:justOrEmpty
Method-name:getMethodArgumentValues
Method-returnType:Mono<Object[]>
Method-parameters:[Message<?> message, Object... providedArgs]
MethodInvocation:getMethodParameters
MethodInvocation:isEmpty
MethodInvocation:getMethodParameters
MethodInvocation:initParameterNameDiscovery
FieldAccess:parameterNameDiscoverer
MethodInvocation:findProvidedArgument
MethodInvocation:add
MethodInvocation:just
MethodInvocation:supportsParameter
FieldAccess:resolvers
MethodInvocation:error
MethodInvocation:formatArgumentError
MethodInvocation:add
MethodInvocation:doOnError
MethodInvocation:defaultIfEmpty
MethodInvocation:resolveArgument
FieldAccess:resolvers
MethodInvocation:logArgumentErrorIfNecessary
MethodInvocation:logArgumentErrorIfNecessary
MethodInvocation:add
MethodInvocation:error
MethodInvocation:zip
MethodInvocation:toArray
MethodInvocation:map
MethodInvocation:of
Method-name:logArgumentErrorIfNecessary
Method-returnType:void
Method-parameters:[MethodParameter parameter, Throwable ex]
MethodInvocation:getMessage
MethodInvocation:contains
MethodInvocation:toGenericString
MethodInvocation:getExecutable
MethodInvocation:isDebugEnabled
MethodInvocation:debug
MethodInvocation:formatArgumentError
Method-name:isAsyncVoidReturnType
Method-returnType:boolean
Method-parameters:[MethodParameter returnType, @Nullable ReactiveAdapter reactiveAdapter]
MethodInvocation:supportsEmpty
MethodInvocation:isNoValue
MethodInvocation:getGenericParameterType
FieldAccess:length
MethodInvocation:getActualTypeArguments
MethodInvocation:equals
MethodInvocation:getActualTypeArguments
