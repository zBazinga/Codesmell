Class:AbstractAutowireCapableBeanFactory
Field:instantiationStrategy
Field:parameterNameDiscoverer
Field:allowCircularReferences
Field:allowRawInjectionDespiteWrapping
Field:ignoredDependencyTypes
Field:ignoredDependencyInterfaces
Field:currentlyCreatedBean
Field:factoryBeanInstanceCache
Field:factoryMethodCandidateCache
Field:filteredPropertyDescriptorsCache
Method-name:AbstractAutowireCapableBeanFactory
Method-returnType:null
Method-parameters:[]
MethodInvocation:ignoreDependencyInterface
MethodInvocation:ignoreDependencyInterface
MethodInvocation:ignoreDependencyInterface
Method-name:AbstractAutowireCapableBeanFactory
Method-returnType:null
Method-parameters:[@Nullable BeanFactory parentBeanFactory]
MethodInvocation:setParentBeanFactory
Method-name:setInstantiationStrategy
Method-returnType:void
Method-parameters:[InstantiationStrategy instantiationStrategy]
FieldAccess:instantiationStrategy
Method-name:getInstantiationStrategy
Method-returnType:InstantiationStrategy
Method-parameters:[]
FieldAccess:instantiationStrategy
Method-name:setParameterNameDiscoverer
Method-returnType:void
Method-parameters:[@Nullable ParameterNameDiscoverer parameterNameDiscoverer]
FieldAccess:parameterNameDiscoverer
Method-name:getParameterNameDiscoverer
Method-returnType:ParameterNameDiscoverer
Method-parameters:[]
FieldAccess:parameterNameDiscoverer
Method-name:setAllowCircularReferences
Method-returnType:void
Method-parameters:[boolean allowCircularReferences]
FieldAccess:allowCircularReferences
Method-name:setAllowRawInjectionDespiteWrapping
Method-returnType:void
Method-parameters:[boolean allowRawInjectionDespiteWrapping]
FieldAccess:allowRawInjectionDespiteWrapping
Method-name:ignoreDependencyType
Method-returnType:void
Method-parameters:[Class<?> type]
MethodInvocation:add
FieldAccess:ignoredDependencyTypes
Method-name:ignoreDependencyInterface
Method-returnType:void
Method-parameters:[Class<?> ifc]
MethodInvocation:add
FieldAccess:ignoredDependencyInterfaces
Method-name:copyConfigurationFrom
Method-returnType:void
Method-parameters:[ConfigurableBeanFactory otherFactory]
FieldAccess:instantiationStrategy
FieldAccess:allowCircularReferences
MethodInvocation:addAll
FieldAccess:ignoredDependencyTypes
MethodInvocation:addAll
FieldAccess:ignoredDependencyInterfaces
Method-name:createBean
Method-returnType:T
Method-parameters:[Class<T> beanClass]
MethodInvocation:setScope
MethodInvocation:isCacheSafe
MethodInvocation:getBeanClassLoader
MethodInvocation:createBean
MethodInvocation:getName
Method-name:autowireBean
Method-returnType:void
Method-parameters:[Object existingBean]
MethodInvocation:getUserClass
MethodInvocation:setScope
MethodInvocation:isCacheSafe
MethodInvocation:getBeanClass
MethodInvocation:getBeanClassLoader
MethodInvocation:initBeanWrapper
MethodInvocation:populateBean
MethodInvocation:getName
MethodInvocation:getBeanClass
Method-name:configureBean
Method-returnType:Object
Method-parameters:[Object existingBean, String beanName]
MethodInvocation:markBeanAsCreated
MethodInvocation:getMergedBeanDefinition
MethodInvocation:isPrototype
MethodInvocation:cloneBeanDefinition
MethodInvocation:isPrototype
MethodInvocation:setScope
MethodInvocation:isCacheSafe
MethodInvocation:getUserClass
MethodInvocation:getBeanClassLoader
MethodInvocation:initBeanWrapper
MethodInvocation:populateBean
MethodInvocation:initializeBean
Method-name:createBean
Method-returnType:Object
Method-parameters:[Class<?> beanClass, int autowireMode, boolean dependencyCheck]
MethodInvocation:setScope
MethodInvocation:createBean
MethodInvocation:getName
Method-name:autowire
Method-returnType:Object
Method-parameters:[Class<?> beanClass, int autowireMode, boolean dependencyCheck]
MethodInvocation:setScope
MethodInvocation:getResolvedAutowireMode
MethodInvocation:getWrappedInstance
MethodInvocation:autowireConstructor
MethodInvocation:getName
MethodInvocation:getSecurityManager
MethodInvocation:doPrivileged
MethodInvocation:instantiate
MethodInvocation:getInstantiationStrategy
MethodInvocation:getAccessControlContext
MethodInvocation:instantiate
MethodInvocation:getInstantiationStrategy
MethodInvocation:populateBean
MethodInvocation:getName
Method-name:autowireBeanProperties
Method-returnType:void
Method-parameters:[Object existingBean, int autowireMode, boolean dependencyCheck]
MethodInvocation:getUserClass
MethodInvocation:setScope
MethodInvocation:initBeanWrapper
MethodInvocation:populateBean
MethodInvocation:getName
MethodInvocation:getBeanClass
Method-name:applyBeanPropertyValues
Method-returnType:void
Method-parameters:[Object existingBean, String beanName]
MethodInvocation:markBeanAsCreated
MethodInvocation:getMergedBeanDefinition
MethodInvocation:initBeanWrapper
MethodInvocation:applyPropertyValues
MethodInvocation:getPropertyValues
Method-name:initializeBean
Method-returnType:Object
Method-parameters:[Object existingBean, String beanName]
MethodInvocation:initializeBean
Method-name:applyBeanPostProcessorsBeforeInitialization
Method-returnType:Object
Method-parameters:[Object existingBean, String beanName]
MethodInvocation:getBeanPostProcessors
MethodInvocation:postProcessBeforeInitialization
Method-name:applyBeanPostProcessorsAfterInitialization
Method-returnType:Object
Method-parameters:[Object existingBean, String beanName]
MethodInvocation:getBeanPostProcessors
MethodInvocation:postProcessAfterInitialization
Method-name:destroyBean
Method-returnType:void
Method-parameters:[Object existingBean]
MethodInvocation:destroy
MethodInvocation:getBeanPostProcessors
MethodInvocation:getAccessControlContext
Method-name:resolveBeanByName
Method-returnType:Object
Method-parameters:[String name, DependencyDescriptor descriptor]
MethodInvocation:setCurrentInjectionPoint
MethodInvocation:getBean
MethodInvocation:getDependencyType
MethodInvocation:setCurrentInjectionPoint
Method-name:resolveDependency
Method-returnType:Object
Method-parameters:[DependencyDescriptor descriptor, @Nullable String requestingBeanName]
MethodInvocation:resolveDependency
Method-name:createBean
Method-returnType:Object
Method-parameters:[String beanName, RootBeanDefinition mbd, @Nullable Object[] args]
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:resolveBeanClass
MethodInvocation:hasBeanClass
MethodInvocation:getBeanClassName
MethodInvocation:setBeanClass
MethodInvocation:prepareMethodOverrides
MethodInvocation:getResourceDescription
MethodInvocation:resolveBeforeInstantiation
MethodInvocation:getResourceDescription
MethodInvocation:doCreateBean
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:getResourceDescription
Method-name:doCreateBean
Method-returnType:Object
Method-parameters:[final String beanName, final RootBeanDefinition mbd, final @Nullable Object[] args]
MethodInvocation:isSingleton
MethodInvocation:remove
FieldAccess:factoryBeanInstanceCache
MethodInvocation:createBeanInstance
MethodInvocation:getWrappedInstance
MethodInvocation:getWrappedClass
MethodInvocation:applyMergedBeanDefinitionPostProcessors
MethodInvocation:getResourceDescription
MethodInvocation:isSingleton
FieldAccess:allowCircularReferences
MethodInvocation:isSingletonCurrentlyInCreation
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:addSingletonFactory
MethodInvocation:getEarlyBeanReference
MethodInvocation:populateBean
MethodInvocation:initializeBean
MethodInvocation:equals
MethodInvocation:getBeanName
MethodInvocation:getResourceDescription
MethodInvocation:getSingleton
FieldAccess:allowRawInjectionDespiteWrapping
MethodInvocation:hasDependentBean
MethodInvocation:getDependentBeans
MethodInvocation:removeSingletonIfCreatedForTypeCheckOnly
MethodInvocation:add
MethodInvocation:isEmpty
MethodInvocation:collectionToCommaDelimitedString
MethodInvocation:registerDisposableBeanIfNecessary
MethodInvocation:getResourceDescription
Method-name:predictBeanType
Method-returnType:Class<?>
Method-parameters:[String beanName, RootBeanDefinition mbd, Class<?>... typesToMatch]
MethodInvocation:determineTargetType
MethodInvocation:isSynthetic
MethodInvocation:hasInstantiationAwareBeanPostProcessors
MethodInvocation:getBeanPostProcessors
MethodInvocation:predictBeanType
MethodInvocation:isAssignableFrom
Method-name:determineTargetType
Method-returnType:Class<?>
Method-parameters:[String beanName, RootBeanDefinition mbd, Class<?>... typesToMatch]
MethodInvocation:getTargetType
MethodInvocation:getFactoryMethodName
MethodInvocation:getTypeForFactoryMethod
MethodInvocation:resolveBeanClass
MethodInvocation:isEmpty
MethodInvocation:getTempClassLoader
Method-name:getTypeForFactoryMethod
Method-returnType:Class<?>
Method-parameters:[String beanName, RootBeanDefinition mbd, Class<?>... typesToMatch]
MethodInvocation:resolve
MethodInvocation:getFactoryBeanName
MethodInvocation:equals
MethodInvocation:getResourceDescription
MethodInvocation:getType
MethodInvocation:resolveBeanClass
MethodInvocation:getUserClass
MethodInvocation:hasConstructorArgumentValues
MethodInvocation:getArgumentCount
MethodInvocation:getConstructorArgumentValues
MethodInvocation:computeIfAbsent
FieldAccess:factoryMethodCandidateCache
MethodInvocation:getUniqueDeclaredMethods
MethodInvocation:isStatic
MethodInvocation:getModifiers
MethodInvocation:isFactoryMethod
MethodInvocation:getParameterCount
FieldAccess:length
MethodInvocation:getTypeParameters
MethodInvocation:getParameterTypes
MethodInvocation:getParameterNameDiscoverer
MethodInvocation:getParameterNames
MethodInvocation:getConstructorArgumentValues
MethodInvocation:getArgumentValue
MethodInvocation:getGenericArgumentValue
MethodInvocation:getValue
MethodInvocation:add
MethodInvocation:resolveReturnTypeForFactoryMethod
MethodInvocation:getBeanClassLoader
MethodInvocation:getReturnType
MethodInvocation:determineCommonAncestor
MethodInvocation:isDebugEnabled
MethodInvocation:debug
MethodInvocation:determineCommonAncestor
MethodInvocation:getReturnType
MethodInvocation:forMethodReturnType
MethodInvocation:forClass
MethodInvocation:resolve
Method-name:getTypeForFactoryBean
Method-returnType:ResolvableType
Method-parameters:[String beanName, RootBeanDefinition mbd, boolean allowInit]
MethodInvocation:getTypeForFactoryBeanFromAttributes
MethodInvocation:hasBeanClass
MethodInvocation:forClass
MethodInvocation:getBeanClass
MethodInvocation:getInstanceSupplier
MethodInvocation:getFactoryBeanGeneric
MethodInvocation:resolve
MethodInvocation:getFactoryBeanGeneric
MethodInvocation:resolve
MethodInvocation:getFactoryBeanName
MethodInvocation:getFactoryMethodName
MethodInvocation:getBeanDefinition
MethodInvocation:hasBeanClass
MethodInvocation:getBeanClass
MethodInvocation:getMergedBeanDefinition
MethodInvocation:determineTargetType
MethodInvocation:getTypeForFactoryBeanFromMethod
MethodInvocation:resolve
MethodInvocation:isBeanEligibleForMetadataCaching
MethodInvocation:isSingleton
MethodInvocation:getSingletonFactoryBeanForTypeCheck
MethodInvocation:getNonSingletonFactoryBeanForTypeCheck
MethodInvocation:getTypeForFactoryBean
MethodInvocation:forClass
MethodInvocation:hasBeanClass
MethodInvocation:getTypeForFactoryBeanFromMethod
MethodInvocation:getBeanClass
MethodInvocation:getFactoryBeanGeneric
MethodInvocation:resolve
Method-name:getFactoryBeanGeneric
Method-returnType:ResolvableType
Method-parameters:[@Nullable ResolvableType type]
MethodInvocation:getGeneric
MethodInvocation:as
Method-name:getTypeForFactoryBeanFromMethod
Method-returnType:ResolvableType
Method-parameters:[Class<?> beanClass, String factoryMethodName]
MethodInvocation:getUserClass
MethodInvocation:doWithMethods
MethodInvocation:getResult
Method-name:getTypeForFactoryBean
Method-returnType:Class<?>
Method-parameters:[String beanName, RootBeanDefinition mbd]
MethodInvocation:resolve
MethodInvocation:getTypeForFactoryBean
Method-name:getEarlyBeanReference
Method-returnType:Object
Method-parameters:[String beanName, RootBeanDefinition mbd, Object bean]
MethodInvocation:isSynthetic
MethodInvocation:hasInstantiationAwareBeanPostProcessors
MethodInvocation:getBeanPostProcessors
MethodInvocation:getEarlyBeanReference
Method-name:getSingletonFactoryBeanForTypeCheck
Method-returnType:FactoryBean<?>
Method-parameters:[String beanName, RootBeanDefinition mbd]
MethodInvocation:getSingletonMutex
MethodInvocation:get
FieldAccess:factoryBeanInstanceCache
MethodInvocation:getWrappedInstance
MethodInvocation:getSingleton
MethodInvocation:isSingletonCurrentlyInCreation
MethodInvocation:getFactoryBeanName
MethodInvocation:isSingletonCurrentlyInCreation
MethodInvocation:getFactoryBeanName
MethodInvocation:beforeSingletonCreation
MethodInvocation:resolveBeforeInstantiation
MethodInvocation:createBeanInstance
MethodInvocation:getWrappedInstance
MethodInvocation:isDebugEnabled
MethodInvocation:debug
MethodInvocation:onSuppressedException
MethodInvocation:afterSingletonCreation
MethodInvocation:getFactoryBean
MethodInvocation:put
FieldAccess:factoryBeanInstanceCache
Method-name:getNonSingletonFactoryBeanForTypeCheck
Method-returnType:FactoryBean<?>
Method-parameters:[String beanName, RootBeanDefinition mbd]
MethodInvocation:isPrototypeCurrentlyInCreation
MethodInvocation:beforePrototypeCreation
MethodInvocation:resolveBeforeInstantiation
MethodInvocation:createBeanInstance
MethodInvocation:getWrappedInstance
MethodInvocation:isDebugEnabled
MethodInvocation:debug
MethodInvocation:onSuppressedException
MethodInvocation:afterPrototypeCreation
MethodInvocation:getFactoryBean
Method-name:applyMergedBeanDefinitionPostProcessors
Method-returnType:void
Method-parameters:[RootBeanDefinition mbd, Class<?> beanType, String beanName]
MethodInvocation:getBeanPostProcessors
MethodInvocation:postProcessMergedBeanDefinition
Method-name:resolveBeforeInstantiation
Method-returnType:Object
Method-parameters:[String beanName, RootBeanDefinition mbd]
MethodInvocation:equals
MethodInvocation:isSynthetic
MethodInvocation:hasInstantiationAwareBeanPostProcessors
MethodInvocation:determineTargetType
MethodInvocation:applyBeanPostProcessorsBeforeInstantiation
MethodInvocation:applyBeanPostProcessorsAfterInitialization
Method-name:applyBeanPostProcessorsBeforeInstantiation
Method-returnType:Object
Method-parameters:[Class<?> beanClass, String beanName]
MethodInvocation:getBeanPostProcessors
MethodInvocation:postProcessBeforeInstantiation
Method-name:createBeanInstance
Method-returnType:BeanWrapper
Method-parameters:[String beanName, RootBeanDefinition mbd, @Nullable Object[] args]
MethodInvocation:resolveBeanClass
MethodInvocation:isPublic
MethodInvocation:getModifiers
MethodInvocation:isNonPublicAccessAllowed
MethodInvocation:getResourceDescription
MethodInvocation:getName
MethodInvocation:getInstanceSupplier
MethodInvocation:obtainFromSupplier
MethodInvocation:getFactoryMethodName
MethodInvocation:instantiateUsingFactoryMethod
MethodInvocation:autowireConstructor
MethodInvocation:instantiateBean
MethodInvocation:determineConstructorsFromBeanPostProcessors
MethodInvocation:getResolvedAutowireMode
MethodInvocation:hasConstructorArgumentValues
MethodInvocation:isEmpty
MethodInvocation:autowireConstructor
MethodInvocation:getPreferredConstructors
MethodInvocation:autowireConstructor
MethodInvocation:instantiateBean
Method-name:obtainFromSupplier
Method-returnType:BeanWrapper
Method-parameters:[Supplier<?> instanceSupplier, String beanName]
MethodInvocation:get
FieldAccess:currentlyCreatedBean
MethodInvocation:set
FieldAccess:currentlyCreatedBean
MethodInvocation:get
MethodInvocation:set
FieldAccess:currentlyCreatedBean
MethodInvocation:remove
FieldAccess:currentlyCreatedBean
MethodInvocation:initBeanWrapper
Method-name:getObjectForBeanInstance
Method-returnType:Object
Method-parameters:[Object beanInstance, String name, String beanName, @Nullable RootBeanDefinition mbd]
MethodInvocation:get
FieldAccess:currentlyCreatedBean
MethodInvocation:registerDependentBean
Method-name:determineConstructorsFromBeanPostProcessors
Method-returnType:Constructor<?>[]
Method-parameters:[@Nullable Class<?> beanClass, String beanName]
MethodInvocation:hasInstantiationAwareBeanPostProcessors
MethodInvocation:getBeanPostProcessors
MethodInvocation:determineCandidateConstructors
Method-name:instantiateBean
Method-returnType:BeanWrapper
Method-parameters:[final String beanName, final RootBeanDefinition mbd]
MethodInvocation:getSecurityManager
MethodInvocation:doPrivileged
MethodInvocation:instantiate
MethodInvocation:getInstantiationStrategy
MethodInvocation:getAccessControlContext
MethodInvocation:instantiate
MethodInvocation:getInstantiationStrategy
MethodInvocation:initBeanWrapper
MethodInvocation:getResourceDescription
Method-name:instantiateUsingFactoryMethod
Method-returnType:BeanWrapper
Method-parameters:[String beanName, RootBeanDefinition mbd, @Nullable Object[] explicitArgs]
MethodInvocation:instantiateUsingFactoryMethod
Method-name:autowireConstructor
Method-returnType:BeanWrapper
Method-parameters:[String beanName, RootBeanDefinition mbd, @Nullable Constructor<?>[] ctors, @Nullable Object[] explicitArgs]
MethodInvocation:autowireConstructor
Method-name:populateBean
Method-returnType:void
Method-parameters:[String beanName, RootBeanDefinition mbd, @Nullable BeanWrapper bw]
MethodInvocation:hasPropertyValues
MethodInvocation:getResourceDescription
MethodInvocation:isSynthetic
MethodInvocation:hasInstantiationAwareBeanPostProcessors
MethodInvocation:getBeanPostProcessors
MethodInvocation:postProcessAfterInstantiation
MethodInvocation:getWrappedInstance
MethodInvocation:hasPropertyValues
MethodInvocation:getPropertyValues
MethodInvocation:getResolvedAutowireMode
MethodInvocation:autowireByName
MethodInvocation:autowireByType
MethodInvocation:hasInstantiationAwareBeanPostProcessors
MethodInvocation:getDependencyCheck
MethodInvocation:getPropertyValues
MethodInvocation:getBeanPostProcessors
MethodInvocation:postProcessProperties
MethodInvocation:getWrappedInstance
MethodInvocation:filterPropertyDescriptorsForDependencyCheck
MethodInvocation:postProcessPropertyValues
MethodInvocation:getWrappedInstance
MethodInvocation:filterPropertyDescriptorsForDependencyCheck
MethodInvocation:checkDependencies
MethodInvocation:applyPropertyValues
Method-name:autowireByName
Method-returnType:void
Method-parameters:[String beanName, AbstractBeanDefinition mbd, BeanWrapper bw, MutablePropertyValues pvs]
MethodInvocation:unsatisfiedNonSimpleProperties
MethodInvocation:containsBean
MethodInvocation:getBean
MethodInvocation:add
MethodInvocation:registerDependentBean
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:isTraceEnabled
MethodInvocation:trace
Method-name:autowireByType
Method-returnType:void
Method-parameters:[String beanName, AbstractBeanDefinition mbd, BeanWrapper bw, MutablePropertyValues pvs]
MethodInvocation:getCustomTypeConverter
MethodInvocation:unsatisfiedNonSimpleProperties
MethodInvocation:getPropertyDescriptor
MethodInvocation:getPropertyType
MethodInvocation:getWriteMethodParameter
MethodInvocation:getWrappedInstance
MethodInvocation:resolveDependency
MethodInvocation:add
MethodInvocation:registerDependentBean
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:clear
MethodInvocation:getResourceDescription
Method-name:unsatisfiedNonSimpleProperties
Method-returnType:String[]
Method-parameters:[AbstractBeanDefinition mbd, BeanWrapper bw]
MethodInvocation:getPropertyValues
MethodInvocation:getPropertyDescriptors
MethodInvocation:getWriteMethod
MethodInvocation:isExcludedFromDependencyCheck
MethodInvocation:contains
MethodInvocation:getName
MethodInvocation:isSimpleProperty
MethodInvocation:getPropertyType
MethodInvocation:add
MethodInvocation:getName
MethodInvocation:toStringArray
Method-name:filterPropertyDescriptorsForDependencyCheck
Method-returnType:PropertyDescriptor[]
Method-parameters:[BeanWrapper bw, boolean cache]
MethodInvocation:get
FieldAccess:filteredPropertyDescriptorsCache
MethodInvocation:getWrappedClass
MethodInvocation:filterPropertyDescriptorsForDependencyCheck
MethodInvocation:putIfAbsent
FieldAccess:filteredPropertyDescriptorsCache
MethodInvocation:getWrappedClass
Method-name:filterPropertyDescriptorsForDependencyCheck
Method-returnType:PropertyDescriptor[]
Method-parameters:[BeanWrapper bw]
MethodInvocation:asList
MethodInvocation:getPropertyDescriptors
MethodInvocation:removeIf
MethodInvocation:toArray
Method-name:isExcludedFromDependencyCheck
Method-returnType:boolean
Method-parameters:[PropertyDescriptor pd]
MethodInvocation:isExcludedFromDependencyCheck
MethodInvocation:contains
FieldAccess:ignoredDependencyTypes
MethodInvocation:getPropertyType
MethodInvocation:isSetterDefinedInInterface
FieldAccess:ignoredDependencyInterfaces
Method-name:checkDependencies
Method-returnType:void
Method-parameters:[String beanName, AbstractBeanDefinition mbd, PropertyDescriptor[] pds, @Nullable PropertyValues pvs]
MethodInvocation:getDependencyCheck
MethodInvocation:getWriteMethod
MethodInvocation:contains
MethodInvocation:getName
MethodInvocation:isSimpleProperty
MethodInvocation:getPropertyType
MethodInvocation:getResourceDescription
MethodInvocation:getName
Method-name:applyPropertyValues
Method-returnType:void
Method-parameters:[String beanName, BeanDefinition mbd, BeanWrapper bw, PropertyValues pvs]
MethodInvocation:isEmpty
MethodInvocation:getSecurityManager
MethodInvocation:setSecurityContext
MethodInvocation:getAccessControlContext
MethodInvocation:isConverted
MethodInvocation:setPropertyValues
MethodInvocation:getResourceDescription
MethodInvocation:getPropertyValueList
MethodInvocation:asList
MethodInvocation:getPropertyValues
MethodInvocation:getCustomTypeConverter
MethodInvocation:size
MethodInvocation:isConverted
MethodInvocation:add
MethodInvocation:getName
MethodInvocation:getValue
MethodInvocation:getWriteMethod
MethodInvocation:getPropertyDescriptor
MethodInvocation:resolveValueIfNecessary
MethodInvocation:isWritableProperty
MethodInvocation:isNestedOrIndexedProperty
MethodInvocation:convertForProperty
MethodInvocation:setConvertedValue
MethodInvocation:add
MethodInvocation:isDynamic
MethodInvocation:isArray
MethodInvocation:setConvertedValue
MethodInvocation:add
MethodInvocation:add
MethodInvocation:setConverted
MethodInvocation:setPropertyValues
MethodInvocation:getResourceDescription
Method-name:convertForProperty
Method-returnType:Object
Method-parameters:[@Nullable Object value, String propertyName, BeanWrapper bw, TypeConverter converter]
MethodInvocation:convertForProperty
MethodInvocation:getPropertyDescriptor
MethodInvocation:getWriteMethodParameter
MethodInvocation:convertIfNecessary
MethodInvocation:getPropertyType
Method-name:initializeBean
Method-returnType:Object
Method-parameters:[final String beanName, final Object bean, @Nullable RootBeanDefinition mbd]
MethodInvocation:getSecurityManager
MethodInvocation:doPrivileged
MethodInvocation:invokeAwareMethods
MethodInvocation:getAccessControlContext
MethodInvocation:invokeAwareMethods
MethodInvocation:isSynthetic
MethodInvocation:applyBeanPostProcessorsBeforeInitialization
MethodInvocation:invokeInitMethods
MethodInvocation:getResourceDescription
MethodInvocation:isSynthetic
MethodInvocation:applyBeanPostProcessorsAfterInitialization
Method-name:invokeAwareMethods
Method-returnType:void
Method-parameters:[final String beanName, final Object bean]
MethodInvocation:setBeanName
MethodInvocation:getBeanClassLoader
MethodInvocation:setBeanClassLoader
MethodInvocation:setBeanFactory
Method-name:invokeInitMethods
Method-returnType:void
Method-parameters:[String beanName, final Object bean, @Nullable RootBeanDefinition mbd]
MethodInvocation:isExternallyManagedInitMethod
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:getSecurityManager
MethodInvocation:doPrivileged
MethodInvocation:afterPropertiesSet
MethodInvocation:getAccessControlContext
MethodInvocation:getException
MethodInvocation:afterPropertiesSet
MethodInvocation:getClass
MethodInvocation:getInitMethodName
MethodInvocation:hasLength
MethodInvocation:equals
MethodInvocation:isExternallyManagedInitMethod
MethodInvocation:invokeCustomInitMethod
Method-name:invokeCustomInitMethod
Method-returnType:void
Method-parameters:[String beanName, final Object bean, RootBeanDefinition mbd]
MethodInvocation:getInitMethodName
MethodInvocation:state
MethodInvocation:isNonPublicAccessAllowed
MethodInvocation:findMethod
MethodInvocation:getClass
MethodInvocation:getMethodIfAvailable
MethodInvocation:getClass
MethodInvocation:isEnforceInitMethod
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:getInterfaceMethodIfPossible
MethodInvocation:getSecurityManager
MethodInvocation:doPrivileged
MethodInvocation:makeAccessible
MethodInvocation:doPrivileged
MethodInvocation:invoke
MethodInvocation:getAccessControlContext
MethodInvocation:getException
MethodInvocation:getTargetException
MethodInvocation:makeAccessible
MethodInvocation:invoke
MethodInvocation:getTargetException
Method-name:postProcessObjectFromFactoryBean
Method-returnType:Object
Method-parameters:[Object object, String beanName]
MethodInvocation:applyBeanPostProcessorsAfterInitialization
Method-name:removeSingleton
Method-returnType:void
Method-parameters:[String beanName]
MethodInvocation:getSingletonMutex
MethodInvocation:remove
FieldAccess:factoryBeanInstanceCache
Method-name:clearSingletonCache
Method-returnType:void
Method-parameters:[]
MethodInvocation:getSingletonMutex
MethodInvocation:clear
FieldAccess:factoryBeanInstanceCache
Method-name:getLogger
Method-returnType:Log
Method-parameters:[]
Class:AutowireByTypeDependencyDescriptor
Method-name:AutowireByTypeDependencyDescriptor
Method-returnType:null
Method-parameters:[MethodParameter methodParameter, boolean eager]
Method-name:getDependencyName
Method-returnType:String
Method-parameters:[]
Class:FactoryBeanMethodTypeFinder
Field:factoryMethodName
Field:result
Method-name:FactoryBeanMethodTypeFinder
Method-returnType:null
Method-parameters:[String factoryMethodName]
FieldAccess:factoryMethodName
Method-name:doWith
Method-returnType:void
Method-parameters:[Method method]
MethodInvocation:isFactoryBeanMethod
MethodInvocation:forMethodReturnType
MethodInvocation:getGeneric
MethodInvocation:as
FieldAccess:result
FieldAccess:result
MethodInvocation:resolve
FieldAccess:result
MethodInvocation:determineCommonAncestor
MethodInvocation:resolve
MethodInvocation:nullSafeEquals
FieldAccess:result
MethodInvocation:forClass
Method-name:isFactoryBeanMethod
Method-returnType:boolean
Method-parameters:[Method method]
MethodInvocation:equals
MethodInvocation:getName
FieldAccess:factoryMethodName
MethodInvocation:isAssignableFrom
MethodInvocation:getReturnType
Method-name:getResult
Method-returnType:ResolvableType
Method-parameters:[]
MethodInvocation:resolve
FieldAccess:result
FieldAccess:result
