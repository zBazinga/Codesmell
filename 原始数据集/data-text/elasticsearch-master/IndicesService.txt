Class:IndicesService
Field:logger
MethodInvocation:getLogger
Field:INDICES_SHARDS_CLOSED_TIMEOUT
Field:INDICES_CACHE_CLEAN_INTERVAL_SETTING
MethodInvocation:positiveTimeSetting
MethodInvocation:timeValueMinutes
Field:INDICES_ID_FIELD_DATA_ENABLED_SETTING
MethodInvocation:boolSetting
Field:WRITE_DANGLING_INDICES_INFO_SETTING
MethodInvocation:boolSetting
Field:settings
Field:pluginsService
Field:nodeEnv
Field:xContentRegistry
Field:shardsClosedTimeout
Field:analysisRegistry
Field:indexNameExpressionResolver
Field:indexScopedSettings
Field:indicesFieldDataCache
Field:cacheCleaner
Field:threadPool
Field:circuitBreakerService
Field:bigArrays
Field:scriptService
Field:clusterService
Field:client
Field:indices
MethodInvocation:emptyMap
Field:pendingDeletes
Field:numUncompletedDeletes
Field:oldShardsStats
Field:mapperRegistry
Field:namedWriteableRegistry
Field:indexingMemoryController
Field:cleanInterval
Field:indicesRequestCache
Field:indicesQueryCache
Field:metaStateService
Field:engineFactoryProviders
Field:directoryFactories
Field:indicesRefCount
Field:closeLatch
Field:idFieldDataEnabled
Field:allowExpensiveQueries
Field:danglingIndicesThreadPoolExecutor
Field:danglingIndicesToWrite
MethodInvocation:newConcurrentHashSet
Field:nodeWriteDanglingIndicesInfo
Field:valuesSourceRegistry
Method-name:doStart
Method-returnType:void
Method-parameters:[]
MethodInvocation:schedule
FieldAccess:cacheCleaner
FieldAccess:cleanInterval
Method-name:IndicesService
Method-returnType:null
Method-parameters:[Settings settings, PluginsService pluginsService, NodeEnvironment nodeEnv, NamedXContentRegistry xContentRegistry, AnalysisRegistry analysisRegistry, IndexNameExpressionResolver indexNameExpressionResolver, MapperRegistry mapperRegistry, NamedWriteableRegistry namedWriteableRegistry, ThreadPool threadPool, IndexScopedSettings indexScopedSettings, CircuitBreakerService circuitBreakerService, BigArrays bigArrays, ScriptService scriptService, ClusterService clusterService, Client client, MetaStateService metaStateService, Collection<Function<IndexSettings,Optional<EngineFactory>>> engineFactoryProviders, Map<String,IndexStorePlugin.DirectoryFactory> directoryFactories, ValuesSourceRegistry valuesSourceRegistry]
Field:DANGLING_INDICES_UPDATE_THREAD_NAME
Method-name:doStop
Method-returnType:void
Method-parameters:[]
MethodInvocation:terminate
MethodInvocation:newFixedThreadPool
MethodInvocation:daemonThreadFactory
MethodInvocation:collect
MethodInvocation:map
MethodInvocation:stream
MethodInvocation:values
FieldAccess:indices
MethodInvocation:index
MethodInvocation:toSet
MethodInvocation:size
MethodInvocation:execute
MethodInvocation:removeIndex
MethodInvocation:countDown
MethodInvocation:await
MethodInvocation:seconds
MethodInvocation:warn
MethodInvocation:seconds
MethodInvocation:shutdown
Method-name:doClose
Method-returnType:void
Method-parameters:[]
MethodInvocation:decRef
Method-name:awaitClose
Method-returnType:boolean
Method-parameters:[long timeout, TimeUnit timeUnit]
MethodInvocation:await
Method-name:stats
Method-returnType:NodeIndicesStats
Method-parameters:[CommonStatsFlags flags]
MethodInvocation:getFlags
MethodInvocation:add
MethodInvocation:add
MethodInvocation:add
MethodInvocation:add
MethodInvocation:add
MethodInvocation:add
MethodInvocation:add
MethodInvocation:add
MethodInvocation:statsByShard
Method-name:statsByShard
Method-returnType:Map<Index,List<IndexShardStats>>
Method-parameters:[final IndicesService indicesService, final CommonStatsFlags flags]
MethodInvocation:indexShardStats
MethodInvocation:containsKey
MethodInvocation:index
MethodInvocation:put
MethodInvocation:index
MethodInvocation:arrayAsArrayList
MethodInvocation:add
MethodInvocation:get
MethodInvocation:index
MethodInvocation:trace
MethodInvocation:shardId
Method-name:ensureChangesAllowed
Method-returnType:void
Method-parameters:[]
MethodInvocation:started
Method-name:iterator
Method-returnType:Iterator<IndexService>
Method-parameters:[]
MethodInvocation:iterator
MethodInvocation:values
Method-name:hasIndex
Method-returnType:boolean
Method-parameters:[Index index]
MethodInvocation:containsKey
MethodInvocation:getUUID
Method-name:indexService
Method-returnType:IndexService
Method-parameters:[Index index]
MethodInvocation:get
MethodInvocation:getUUID
Method-name:indexServiceSafe
Method-returnType:IndexService
Method-parameters:[Index index]
Method-name:createIndex
Method-returnType:IndexService
Method-parameters:[final IndexMetadata indexMetadata, final List<IndexEventListener> builtInListeners, final boolean writeDanglingIndices]
MethodInvocation:ensureChangesAllowed
MethodInvocation:equals
MethodInvocation:getIndexUUID
MethodInvocation:getIndexUUID
MethodInvocation:getIndex
MethodInvocation:hasIndex
Method-name:onStoreCreated
Method-returnType:void
Method-parameters:[ShardId shardId]
MethodInvocation:incRef
Method-name:onStoreClosed
Method-returnType:void
Method-parameters:[ShardId shardId]
MethodInvocation:onClose
MethodInvocation:decRef
MethodInvocation:add
MethodInvocation:add
MethodInvocation:createIndexService
MethodInvocation:addMetadataListener
MethodInvocation:updateDanglingIndicesInfo
MethodInvocation:afterIndexCreated
MethodInvocation:getIndexEventListener
MethodInvocation:copyMapWithAddedEntry
MethodInvocation:getUUID
MethodInvocation:updateDanglingIndicesInfo
MethodInvocation:deleteDanglingIndicesInfo
MethodInvocation:close
Method-name:withTempIndexService
Method-returnType:T
Method-parameters:[final IndexMetadata indexMetadata, CheckedFunction<IndexService,T,E> indexServiceConsumer]
Method-name:createIndexService
Method-returnType:IndexService
Method-parameters:[IndexService.IndexCreationContext indexCreationContext, IndexMetadata indexMetadata, IndicesQueryCache indicesQueryCache, IndicesFieldDataCache indicesFieldDataCache, List<IndexEventListener> builtInListeners, IndexingOperationListener... indexingOperationListeners]
MethodInvocation:validate
MethodInvocation:getSettings
MethodInvocation:debug
MethodInvocation:getIndex
MethodInvocation:getNumberOfShards
MethodInvocation:getNumberOfReplicas
MethodInvocation:getEngineFactory
MethodInvocation:addIndexOperationListener
MethodInvocation:onIndexModule
MethodInvocation:addIndexEventListener
MethodInvocation:newIndexService
Method-name:getEngineFactory
Method-returnType:EngineFactory
Method-parameters:[final IndexSettings idxSettings]
Method-name:createIndexMapperService
Method-returnType:MapperService
Method-parameters:[IndexMetadata indexMetadata]
FieldAccess:settings
MethodInvocation:getEngineFactory
MethodInvocation:onIndexModule
MethodInvocation:newIndexMapperService
Method-name:verifyIndexMetadata
Method-returnType:void
Method-parameters:[IndexMetadata metadata, IndexMetadata metadataUpdate]
MethodInvocation:add
MethodInvocation:add
MethodInvocation:createIndexService
MethodInvocation:emptyList
MethodInvocation:add
MethodInvocation:close
MethodInvocation:merge
MethodInvocation:mapperService
MethodInvocation:equals
MethodInvocation:updateMetadata
MethodInvocation:close
Method-name:createShard
Method-returnType:IndexShard
Method-parameters:[final ShardRouting shardRouting, final RecoveryState recoveryState, final PeerRecoveryTargetService recoveryTargetService, final PeerRecoveryTargetService.RecoveryListener recoveryListener, final RepositoriesService repositoriesService, final Consumer<IndexShard.ShardFailure> onShardFailure, final Consumer<ShardId> globalCheckpointSyncer, final RetentionLeaseSyncer retentionLeaseSyncer]
Method-name:removeIndex
Method-returnType:void
Method-parameters:[final Index index, final IndexRemovalReason reason, final String extraInfo]
Method-name:getIndicesFieldDataCache
Method-returnType:IndicesFieldDataCache
Method-parameters:[]
Method-name:getCircuitBreakerService
Method-returnType:CircuitBreakerService
Method-parameters:[]
Method-name:getIndicesQueryCache
Method-returnType:IndicesQueryCache
Method-parameters:[]
Class:OldShardsStats
Field:searchStats
Field:getStats
Field:indexingStats
Field:mergeStats
Field:refreshStats
Field:flushStats
Field:recoveryStats
Field:bulkStats
Method-name:beforeIndexShardClosed
Method-returnType:void
Method-parameters:[ShardId shardId, @Nullable IndexShard indexShard, Settings indexSettings]
MethodInvocation:addTotals
MethodInvocation:getStats
MethodInvocation:addTotals
MethodInvocation:indexingStats
MethodInvocation:addTotalsForClosingShard
MethodInvocation:searchStats
MethodInvocation:addTotals
MethodInvocation:mergeStats
MethodInvocation:addTotals
MethodInvocation:refreshStats
MethodInvocation:addTotals
MethodInvocation:flushStats
MethodInvocation:addTotals
MethodInvocation:recoveryStats
MethodInvocation:addTotals
MethodInvocation:bulkStats
Method-name:afterIndexShardClosed
Method-returnType:void
Method-parameters:[ShardId shardId, IndexShard indexShard, Settings indexSettings]
Method-name:deleteUnassignedIndex
Method-returnType:void
Method-parameters:[String reason, IndexMetadata metadata, ClusterState clusterState]
MethodInvocation:hasNodeFile
MethodInvocation:getName
MethodInvocation:getIndex
MethodInvocation:hasIndex
MethodInvocation:metadata
MethodInvocation:index
MethodInvocation:metadata
MethodInvocation:getIndexUUID
MethodInvocation:getIndexUUID
MethodInvocation:deleteIndexStore
MethodInvocation:warn
MethodInvocation:getIndex
Method-name:deleteIndexStore
Method-returnType:void
Method-parameters:[String reason, IndexMetadata metadata]
MethodInvocation:hasNodeFile
MethodInvocation:getIndex
MethodInvocation:hasIndex
MethodInvocation:indexUUID
MethodInvocation:indexService
MethodInvocation:getName
MethodInvocation:getIndexUUID
MethodInvocation:buildIndexSettings
MethodInvocation:deleteIndexStore
MethodInvocation:getIndex
Method-name:deleteIndexStore
Method-returnType:void
Method-parameters:[String reason, Index index, IndexSettings indexSettings]
MethodInvocation:deleteIndexStoreIfDeletionAllowed
Method-name:deleteIndexStoreIfDeletionAllowed
Method-returnType:void
Method-parameters:[final String reason, final Index index, final IndexSettings indexSettings, final IndexDeletionAllowedPredicate predicate]
MethodInvocation:debug
MethodInvocation:apply
MethodInvocation:deleteIndexDirectorySafe
MethodInvocation:debug
MethodInvocation:warn
MethodInvocation:addPendingDelete
MethodInvocation:deleteMetaState
MethodInvocation:indexPaths
Method-name:deleteShardStore
Method-returnType:void
Method-parameters:[String reason, ShardLock lock, IndexSettings indexSettings]
MethodInvocation:getShardId
MethodInvocation:trace
MethodInvocation:deleteShardDirectoryUnderLock
Method-name:deleteShardStore
Method-returnType:void
Method-parameters:[String reason, ShardId shardId, ClusterState clusterState]
MethodInvocation:get
MethodInvocation:indices
MethodInvocation:getMetadata
MethodInvocation:getIndexName
MethodInvocation:buildIndexSettings
MethodInvocation:canDeleteShardContent
MethodInvocation:deleteShardDirectorySafe
MethodInvocation:debug
MethodInvocation:canDeleteIndexContents
MethodInvocation:getIndex
MethodInvocation:isEmpty
MethodInvocation:findAllShardIds
MethodInvocation:getIndex
MethodInvocation:deleteIndexStore
MethodInvocation:trace
MethodInvocation:getIndex
Method-name:canDeleteIndexContents
Method-returnType:boolean
Method-parameters:[Index index, IndexSettings indexSettings]
MethodInvocation:indexService
MethodInvocation:hasNodeFile
Method-name:verifyIndexIsDeleted
Method-returnType:IndexMetadata
Method-parameters:[final Index index, final ClusterState clusterState]
MethodInvocation:index
MethodInvocation:metadata
MethodInvocation:hasNodeFile
MethodInvocation:exists
MethodInvocation:indexPaths
MethodInvocation:loadIndexState
MethodInvocation:warn
MethodInvocation:buildIndexSettings
MethodInvocation:deleteIndexStoreIfDeletionAllowed
MethodInvocation:warn
MethodInvocation:getIndex
Field:ShardDeletionCheckResult
Method-name:canDeleteShardContent
Method-returnType:ShardDeletionCheckResult
Method-parameters:[ShardId shardId, IndexSettings indexSettings]
Method-name:buildIndexSettings
Method-returnType:IndexSettings
Method-parameters:[IndexMetadata metadata]
Method-name:addPendingDelete
Method-returnType:void
Method-parameters:[ShardId shardId, IndexSettings settings]
MethodInvocation:addPendingDelete
MethodInvocation:getIndex
Method-name:addPendingDelete
Method-returnType:void
Method-parameters:[Index index, IndexSettings settings]
MethodInvocation:addPendingDelete
Method-name:addPendingDelete
Method-returnType:void
Method-parameters:[Index index, PendingDelete pendingDelete]
MethodInvocation:get
MethodInvocation:put
MethodInvocation:add
MethodInvocation:incrementAndGet
Class:PendingDelete
Field:index
Field:shardId
Field:settings
Field:deleteIndex
Method-name:PendingDelete
Method-returnType:null
Method-parameters:[ShardId shardId, IndexSettings settings]
FieldAccess:index
MethodInvocation:getIndex
FieldAccess:shardId
MethodInvocation:getId
FieldAccess:settings
FieldAccess:deleteIndex
Method-name:PendingDelete
Method-returnType:null
Method-parameters:[Index index, IndexSettings settings]
FieldAccess:index
FieldAccess:shardId
FieldAccess:settings
FieldAccess:deleteIndex
Method-name:toString
Method-returnType:String
Method-parameters:[]
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:toString
Method-name:compareTo
Method-returnType:int
Method-parameters:[PendingDelete o]
MethodInvocation:compare
Method-name:processPendingDeletes
Method-returnType:void
Method-parameters:[Index index, IndexSettings indexSettings, TimeValue timeout]
Method-name:numPendingDeletes
Method-returnType:int
Method-parameters:[Index index]
MethodInvocation:get
MethodInvocation:size
Method-name:hasUncompletedPendingDeletes
Method-returnType:boolean
Method-parameters:[]
MethodInvocation:get
Method-name:getAnalysis
Method-returnType:AnalysisRegistry
Method-parameters:[]
Class:CacheCleaner
Field:cache
Field:logger
Field:threadPool
Field:interval
Field:closed
Field:requestCache
Method-name:CacheCleaner
Method-returnType:null
Method-parameters:[IndicesFieldDataCache cache, IndicesRequestCache requestCache, Logger logger, ThreadPool threadPool, TimeValue interval]
FieldAccess:cache
FieldAccess:requestCache
FieldAccess:logger
FieldAccess:threadPool
FieldAccess:interval
Method-name:run
Method-returnType:void
Method-parameters:[]
MethodInvocation:nanoTime
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:refresh
MethodInvocation:getCache
FieldAccess:cache
MethodInvocation:warn
MethodInvocation:isTraceEnabled
MethodInvocation:trace
MethodInvocation:nsecToMSec
MethodInvocation:nanoTime
MethodInvocation:cleanCache
FieldAccess:requestCache
MethodInvocation:warn
MethodInvocation:get
MethodInvocation:scheduleUnlessShuttingDown
Method-name:close
Method-returnType:void
Method-parameters:[]
MethodInvocation:compareAndSet
Method-name:canCache
Method-returnType:boolean
Method-parameters:[ShardSearchRequest request, SearchContext context]
Method-name:loadIntoContext
Method-returnType:void
Method-parameters:[ShardSearchRequest request, SearchContext context, QueryPhase queryPhase]
Method-name:canCache
Method-returnType:assert
Method-parameters:[]
Method-name:getTotalIndexingBufferBytes
Method-returnType:ByteSizeValue
Method-parameters:[]
MethodInvocation:indexingBufferSize
Method-name:cacheShardLevelResult
Method-returnType:BytesReference
Method-parameters:[IndexShard shard, DirectoryReader reader, BytesReference cacheKey, Supplier<String> cacheKeyRenderer, CheckedConsumer<StreamOutput,IOException> loader]
MethodInvocation:accept
MethodInvocation:bytes
MethodInvocation:getOrCompute
Class:IndexShardCacheEntity
Field:BASE_RAM_BYTES_USED
MethodInvocation:shallowSizeOfInstance
Field:indexShard
Method-name:IndexShardCacheEntity
Method-returnType:null
Method-parameters:[IndexShard indexShard]
FieldAccess:indexShard
Method-name:stats
Method-returnType:ShardRequestCache
Method-parameters:[]
MethodInvocation:requestCache
Method-name:isOpen
Method-returnType:boolean
Method-parameters:[]
MethodInvocation:state
Method-name:getCacheIdentity
Method-returnType:Object
Method-parameters:[]
Method-name:ramBytesUsed
Method-returnType:long
Method-parameters:[]
Method-name:apply
Method-returnType:boolean
Method-parameters:[Index index, IndexSettings indexSettings]
Field:DEFAULT_INDEX_DELETION_PREDICATE
MethodInvocation:canDeleteIndexContents
Field:ALWAYS_TRUE
Method-name:buildAliasFilter
Method-returnType:AliasFilter
Method-parameters:[ClusterState state, String index, Set<String> resolvedExpressions]
MethodInvocation:createParser
MethodInvocation:xContent
MethodInvocation:parseInnerQueryBuilder
MethodInvocation:index
MethodInvocation:metadata
MethodInvocation:filteringAliases
MethodInvocation:parseAliasFilter
Method-name:getRewriteContext
Method-returnType:QueryRewriteContext
Method-parameters:[LongSupplier nowInMillis]
Method-name:clearIndexShardCache
Method-returnType:void
Method-parameters:[ShardId shardId, boolean queryCache, boolean fieldDataCache, boolean requestCache, String... fields]
MethodInvocation:indexService
MethodInvocation:getIndex
MethodInvocation:getShardOrNull
MethodInvocation:id
MethodInvocation:clearCaches
MethodInvocation:clear
Method-name:getFieldFilter
Method-returnType:Function<String,Predicate<String>>
Method-parameters:[]
MethodInvocation:getFieldFilter
Method-name:isMetadataField
Method-returnType:boolean
Method-parameters:[Version indexCreatedVersion, String field]
MethodInvocation:isMetadataField
Method-name:isIdFieldDataEnabled
Method-returnType:boolean
Method-parameters:[]
Method-name:setIdFieldDataEnabled
Method-returnType:void
Method-parameters:[boolean value]
FieldAccess:idFieldDataEnabled
Method-name:checkShardLimit
Method-returnType:Optional<String>
Method-parameters:[int newShards, ClusterState state]
MethodInvocation:settings
MethodInvocation:metadata
MethodInvocation:size
MethodInvocation:getDataNodes
MethodInvocation:getNodes
MethodInvocation:empty
MethodInvocation:get
MethodInvocation:getTotalOpenIndexShards
MethodInvocation:getMetadata
MethodInvocation:of
MethodInvocation:empty
Method-name:updateDanglingIndicesInfo
Method-returnType:void
Method-parameters:[Index index]
Method-name:setAllowExpensiveQueries
Method-returnType:void
Method-parameters:[Boolean allowExpensiveQueries]
FieldAccess:allowExpensiveQueries
Method-name:allPendingDanglingIndicesWritten
Method-returnType:boolean
Method-parameters:[]
MethodInvocation:isEmpty
MethodInvocation:getActiveCount
