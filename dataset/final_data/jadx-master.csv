id,method-name,parametes-method,return-method,field-access,methods-method,contain-class-name,attributes-class,methods-class,target-class-name,attributes-class,methods-class,tag,move-tag
0,add  Content  Panel,Tabbed  Pane,void,,put  get  Open  Tabs  get  Node  add,Tabbed  Pane,log  serial  Version  U  I  D  main  Window  open  Tabs  jumps,Tabbed  Pane  get  Main  Window  show  Code  show  Resource  show  Simple  Node  code  Jump  get  Current  Position  nav  Back  nav  Forward  close  Code  Panel  get  Content  Panel  make  Content  Panel  get  Selected  Code  Panel  make  Tab  Component  close  All  Tabs  get  Open  Tabs  load  Settings,Content  Panel,serial  Version  U  I  D  tabbed  Pane  node,Content  Panel  load  Settings  get  Tabbed  Pane  get  Node  get  Tab  Tooltip,0,0
1,add  Content  Panel,Tabbed  Pane,void,,put  get  Open  Tabs  get  Node  add,Content  Panel,serial  Version  U  I  D  tabbed  Pane  node,Content  Panel  load  Settings  get  Tabbed  Pane  get  Node  get  Tab  Tooltip,Tabbed  Pane,log  serial  Version  U  I  D  main  Window  open  Tabs  jumps,Tabbed  Pane  get  Main  Window  show  Code  show  Resource  show  Simple  Node  code  Jump  get  Current  Position  nav  Back  nav  Forward  close  Code  Panel  get  Content  Panel  make  Content  Panel  get  Selected  Code  Panel  make  Tab  Component  close  All  Tabs  get  Open  Tabs  load  Settings,1,1
2,close  Code  Panel,Content  Panel,void,,remove  get  Node  remove,Tabbed  Pane,log  serial  Version  U  I  D  main  Window  open  Tabs  jumps,Tabbed  Pane  get  Main  Window  show  Code  show  Resource  show  Simple  Node  code  Jump  get  Current  Position  nav  Back  nav  Forward  get  Content  Panel  make  Content  Panel  get  Selected  Code  Panel  make  Tab  Component  close  All  Tabs  get  Open  Tabs  load  Settings,Content  Panel,serial  Version  U  I  D  tabbed  Pane  node,Content  Panel  load  Settings  get  Tabbed  Pane  get  Node  get  Tab  Tooltip  add  Content  Panel,0,0
3,close  Code  Panel,Content  Panel,void,,remove  get  Node  remove,Content  Panel,serial  Version  U  I  D  tabbed  Pane  node,Content  Panel  load  Settings  get  Tabbed  Pane  get  Node  get  Tab  Tooltip  add  Content  Panel,Tabbed  Pane,log  serial  Version  U  I  D  main  Window  open  Tabs  jumps,Tabbed  Pane  get  Main  Window  show  Code  show  Resource  show  Simple  Node  code  Jump  get  Current  Position  nav  Back  nav  Forward  get  Content  Panel  make  Content  Panel  get  Selected  Code  Panel  make  Tab  Component  close  All  Tabs  get  Open  Tabs  load  Settings,1,0
4,make  Content  Panel,J  Node,Content  Panel,,get  Res  File  get  Type,Tabbed  Pane,log  serial  Version  U  I  D  main  Window  open  Tabs  jumps,Tabbed  Pane  get  Main  Window  show  Code  show  Resource  show  Simple  Node  code  Jump  get  Current  Position  nav  Back  nav  Forward  close  Code  Panel  get  Content  Panel  get  Selected  Code  Panel  make  Tab  Component  close  All  Tabs  get  Open  Tabs  load  Settings,J  Node,serial  Version  U  I  D,get  J  Parent  get  Root  Class  get  Java  Node  get  Content  get  Smali  get  Syntax  Name  get  Line  get  Code  Info  get  Source  Line  get  Java  Node  At  Position  get  Icon  get  Name  make  String  make  String  Html  make  Desc  String  has  Desc  String  make  Long  String  make  Long  String  Html  to  String,0,0
5,make  Content  Panel,J  Node,Content  Panel,,get  Res  File  get  Type,J  Node,serial  Version  U  I  D,get  J  Parent  get  Root  Class  get  Java  Node  get  Content  get  Smali  get  Syntax  Name  get  Line  get  Code  Info  get  Source  Line  get  Java  Node  At  Position  get  Icon  get  Name  make  String  make  String  Html  make  Desc  String  has  Desc  String  make  Long  String  make  Long  String  Html  to  String,Tabbed  Pane,log  serial  Version  U  I  D  main  Window  open  Tabs  jumps,Tabbed  Pane  get  Main  Window  show  Code  show  Resource  show  Simple  Node  code  Jump  get  Current  Position  nav  Back  nav  Forward  close  Code  Panel  get  Content  Panel  get  Selected  Code  Panel  make  Tab  Component  close  All  Tabs  get  Open  Tabs  load  Settings,1,0
6,get  Node  Full  Name,Content  Panel,String,,get  Node  get  Root  Class  get  Full  Name  get  Name,Tab  Component,serial  Version  U  I  D  icon  close  icon  close  inactive  tabbed  Pane  content  Panel  label,Tab  Component  load  Settings  get  Label  Font  init  mouse  Clicked  create  Tab  Popup  Menu,Content  Panel,serial  Version  U  I  D  tabbed  Pane  node,Content  Panel  load  Settings  get  Tabbed  Pane  get  Node  get  Tab  Tooltip  add  Content  Panel,0,0
7,get  Node  Full  Name,Content  Panel,String,,get  Node  get  Root  Class  get  Full  Name  get  Name,Content  Panel,serial  Version  U  I  D  tabbed  Pane  node,Content  Panel  load  Settings  get  Tabbed  Pane  get  Node  get  Tab  Tooltip  add  Content  Panel,Tab  Component,serial  Version  U  I  D  icon  close  icon  close  inactive  tabbed  Pane  content  Panel  label,Tab  Component  load  Settings  get  Label  Font  init  mouse  Clicked  create  Tab  Popup  Menu,1,0
8,get  Resource  By  Name,String  J  Root,J  Resource,,get  Files  equals  get  Name,J  Root,serial  Version  U  I  D  root  icon  wrapper  flat  Packages,J  Root  update  get  Hierarchy  Resources  search  Class  In  Tree  is  Flat  Packages  set  Flat  Packages  get  Icon  get  J  Parent  get  Line  make  String,J  Resource,serial  Version  U  I  D  root  icon  folder  icon  file  icon  manifest  icon  java  icon  error  icon  J  Res  Type  name  short  Name  files  type  res  File  loaded  content  extension  to  file  syntax,J  Resource  J  Resource  update  load  Node  get  Name  get  Files  get  Code  Info  get  Content  load  Current  Single  Res  load  Sub  Nodes  add  Path  get  Res  Dir  get  Syntax  Name  get  Syntax  By  Extension  get  Icon  is  Supported  For  View  get  Res  File  get  J  Parent  compare  To  make  String  equals  hash  Code,0,0
9,get  Resource  By  Name,String  J  Root,J  Resource,,get  Files  equals  get  Name,J  Resource,serial  Version  U  I  D  root  icon  folder  icon  file  icon  manifest  icon  java  icon  error  icon  J  Res  Type  name  short  Name  files  type  res  File  loaded  content  extension  to  file  syntax,J  Resource  J  Resource  update  load  Node  get  Name  get  Files  get  Code  Info  get  Content  load  Current  Single  Res  load  Sub  Nodes  add  Path  get  Res  Dir  get  Syntax  Name  get  Syntax  By  Extension  get  Icon  is  Supported  For  View  get  Res  File  get  J  Parent  compare  To  make  String  equals  hash  Code,J  Root,serial  Version  U  I  D  root  icon  wrapper  flat  Packages,J  Root  update  get  Hierarchy  Resources  search  Class  In  Tree  is  Flat  Packages  set  Flat  Packages  get  Icon  get  J  Parent  get  Line  make  String,1,1
10,search  Class  In  Tree,J  Node,J  Node,,breadth  First  Enumeration  has  More  Elements  next  Element  equals,J  Root,serial  Version  U  I  D  root  icon  wrapper  flat  Packages,J  Root  update  get  Hierarchy  Resources  is  Flat  Packages  set  Flat  Packages  get  Icon  get  J  Parent  get  Line  make  String,J  Node,serial  Version  U  I  D,get  J  Parent  get  Root  Class  get  Java  Node  get  Content  get  Smali  get  Syntax  Name  get  Line  get  Code  Info  get  Source  Line  get  Java  Node  At  Position  get  Icon  get  Name  make  String  make  String  Html  make  Desc  String  has  Desc  String  make  Long  String  make  Long  String  Html  to  String,0,0
11,search  Class  In  Tree,J  Node,J  Node,,breadth  First  Enumeration  has  More  Elements  next  Element  equals,J  Node,serial  Version  U  I  D,get  J  Parent  get  Root  Class  get  Java  Node  get  Content  get  Smali  get  Syntax  Name  get  Line  get  Code  Info  get  Source  Line  get  Java  Node  At  Position  get  Icon  get  Name  make  String  make  String  Html  make  Desc  String  has  Desc  String  make  Long  String  make  Long  String  Html  to  String,J  Root,serial  Version  U  I  D  root  icon  wrapper  flat  Packages,J  Root  update  get  Hierarchy  Resources  is  Flat  Packages  set  Flat  Packages  get  Icon  get  J  Parent  get  Line  make  String,1,0
12,get  Resource  Field,Integer  Const  Storage,Field  Node,,get  get  Resources  Names  get  App  Res  Class  root  split  get  Inner  Classes  equals  get  Short  Name  get  Class  Info  search  Field  By  Name  add  Warn  replace,Const  Storage,Value  Storage  values  duplicates  replace  Enabled  global  Values  classes  resources  Names,get  Values  get  put  contains  Const  Storage  process  Const  Fields  add  Const  Field  get  Cls  Values  get  Const  Field  get  Const  Field  By  Literal  Arg  set  Resources  Names  get  Resources  Names  get  Global  Const  Fields  is  Replace  Enabled,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  resolve  Method  deep  Resolve  Method  resolve  Field  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String,0,0
13,get  Resource  Field,Integer  Const  Storage,Field  Node,,get  get  Resources  Names  get  App  Res  Class  root  split  get  Inner  Classes  equals  get  Short  Name  get  Class  Info  search  Field  By  Name  add  Warn  replace,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  resolve  Method  deep  Resolve  Method  resolve  Field  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String,Const  Storage,Value  Storage  values  duplicates  replace  Enabled  global  Values  classes  resources  Names,get  Values  get  put  contains  Const  Storage  process  Const  Fields  add  Const  Field  get  Cls  Values  get  Const  Field  get  Const  Field  By  Literal  Arg  set  Resources  Names  get  Resources  Names  get  Global  Const  Fields  is  Replace  Enabled,1,1
14,get  Const  Field  By  Literal  Arg,Class  Node  Literal  Arg,Field  Node,,get  Primitive  Type  get  Type  get  Literal  get  Const  Field  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  int  Bits  To  Float  get  Const  Field  compare  long  Bits  To  Double  get  Const  Field  compare,Const  Storage,Value  Storage  values  duplicates  replace  Enabled  global  Values  classes  resources  Names,get  Values  get  put  contains  Const  Storage  process  Const  Fields  add  Const  Field  get  Cls  Values  get  Const  Field  set  Resources  Names  get  Resources  Names  get  Global  Const  Fields  is  Replace  Enabled,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
15,get  Const  Field  By  Literal  Arg,Class  Node  Literal  Arg,Field  Node,,get  Primitive  Type  get  Type  get  Literal  get  Const  Field  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  int  Bits  To  Float  get  Const  Field  compare  long  Bits  To  Double  get  Const  Field  compare,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Const  Storage,Value  Storage  values  duplicates  replace  Enabled  global  Values  classes  resources  Names,get  Values  get  put  contains  Const  Storage  process  Const  Fields  add  Const  Field  get  Cls  Values  get  Const  Field  set  Resources  Names  get  Resources  Names  get  Global  Const  Fields  is  Replace  Enabled,1,0
16,get  Const  Field  By  Literal  Arg,Class  Node  Literal  Arg,Field  Node,,get  Primitive  Type  get  Type  get  Literal  get  Const  Field  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  int  Bits  To  Float  get  Const  Field  compare  long  Bits  To  Double  get  Const  Field  compare,Const  Storage,Value  Storage  values  duplicates  replace  Enabled  global  Values  classes  resources  Names,get  Values  get  put  contains  Const  Storage  process  Const  Fields  add  Const  Field  get  Cls  Values  get  Const  Field  set  Resources  Names  get  Resources  Names  get  Global  Const  Fields  is  Replace  Enabled,Literal  Arg,true  false  literal,Literal  Arg  get  Literal  is  Literal  is  Integer  duplicate  hash  Code  equals  to  String,0,0
17,get  Const  Field  By  Literal  Arg,Class  Node  Literal  Arg,Field  Node,,get  Primitive  Type  get  Type  get  Literal  get  Const  Field  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  get  Const  Field  abs  int  Bits  To  Float  get  Const  Field  compare  long  Bits  To  Double  get  Const  Field  compare,Literal  Arg,true  false  literal,Literal  Arg  get  Literal  is  Literal  is  Integer  duplicate  hash  Code  equals  to  String,Const  Storage,Value  Storage  values  duplicates  replace  Enabled  global  Values  classes  resources  Names,get  Values  get  put  contains  Const  Storage  process  Const  Fields  add  Const  Field  get  Cls  Values  get  Const  Field  set  Resources  Names  get  Resources  Names  get  Global  Const  Fields  is  Replace  Enabled,1,0
18,replace  Class  Generics,Arg  Type  Type  Utils,Arg  Type,,get  Type  Variables  Mapping  is  Empty  replace  Type  Variables  Using  Map,Type  Utils,root,Type  Utils  get  Class  Generics  get  Type  Variables  Mapping  replace  Method  Generics  replace  Type  Variables  Using  Map,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
19,replace  Class  Generics,Arg  Type  Type  Utils,Arg  Type,,get  Type  Variables  Mapping  is  Empty  replace  Type  Variables  Using  Map,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Utils,root,Type  Utils  get  Class  Generics  get  Type  Variables  Mapping  replace  Method  Generics  replace  Type  Variables  Using  Map,1,1
20,replace  Method  Generics,Base  Invoke  Node  I  Method  Details  Arg  Type,Arg  Type,,get  Arg  Types  is  Empty  get  First  Arg  Offset  size  get  get  Arg  get  Type  equals,Type  Utils,root,Type  Utils  get  Class  Generics  get  Type  Variables  Mapping  replace  Type  Variables  Using  Map,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
21,replace  Method  Generics,Base  Invoke  Node  I  Method  Details  Arg  Type,Arg  Type,,get  Arg  Types  is  Empty  get  First  Arg  Offset  size  get  get  Arg  get  Type  equals,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Utils,root,Type  Utils  get  Class  Generics  get  Type  Variables  Mapping  replace  Type  Variables  Using  Map,1,0
22,replace  Type  Variables  Using  Map,Arg  Type  Map  Arg  Type  Arg  Type,Arg  Type,,is  Empty  is  Generic  Type  get  is  Array  replace  Type  Variables  Using  Map  get  Array  Element  array  get  Wildcard  Type  contains  Type  Variable  replace  Type  Variables  Using  Map  wildcard  get  Wildcard  Bound  get  Generic  Types  is  Generic  replace  Type  Variables  Using  Map  generic  get  Object,Type  Utils,root,Type  Utils  get  Class  Generics  get  Type  Variables  Mapping  replace  Method  Generics,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
23,replace  Type  Variables  Using  Map,Arg  Type  Map  Arg  Type  Arg  Type,Arg  Type,,is  Empty  is  Generic  Type  get  is  Array  replace  Type  Variables  Using  Map  get  Array  Element  array  get  Wildcard  Type  contains  Type  Variable  replace  Type  Variables  Using  Map  wildcard  get  Wildcard  Bound  get  Generic  Types  is  Generic  replace  Type  Variables  Using  Map  generic  get  Object,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Utils,root,Type  Utils  get  Class  Generics  get  Type  Variables  Mapping  replace  Method  Generics,1,0
24,collect  Overloaded  Methods,Arg  Type  Method  Utils,List  I  Method  Details,,process  Method  Args  Overloaded,Method  Utils,root,Method  Utils  get  Method  Details  get  Method  Details  is  Method  Args  Overloaded  get  Method  Generic  Return  Type  process  Method  Args  Overloaded,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String,0,0
25,collect  Overloaded  Methods,Arg  Type  Method  Utils,List  I  Method  Details,,process  Method  Args  Overloaded,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String,Method  Utils,root,Method  Utils  get  Method  Details  get  Method  Details  is  Method  Args  Overloaded  get  Method  Generic  Return  Type  process  Method  Args  Overloaded,1,1
26,collect  Overloaded  Methods,Arg  Type  Method  Utils,List  I  Method  Details,,process  Method  Args  Overloaded,Method  Utils,root,Method  Utils  get  Method  Details  get  Method  Details  is  Method  Args  Overloaded  get  Method  Generic  Return  Type  process  Method  Args  Overloaded,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
27,collect  Overloaded  Methods,Arg  Type  Method  Utils,List  I  Method  Details,,process  Method  Args  Overloaded,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Method  Utils,root,Method  Utils  get  Method  Details  get  Method  Details  is  Method  Args  Overloaded  get  Method  Generic  Return  Type  process  Method  Args  Overloaded,1,0
28,resolve  Method,Method  Info,Method  Node,,resolve  Class  get  Decl  Class  search  Method,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  deep  Resolve  Method  resolve  Field  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String  get  Resource  Field,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String  collect  Overloaded  Methods,0,0
29,resolve  Method,Method  Info,Method  Node,,resolve  Class  get  Decl  Class  search  Method,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String  collect  Overloaded  Methods,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  deep  Resolve  Method  resolve  Field  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String  get  Resource  Field,1,0
30,resolve  Field,Field  Info,Field  Node,,resolve  Class  get  Decl  Class  search  Field,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  resolve  Method  deep  Resolve  Method  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String  get  Resource  Field,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,0,0
31,resolve  Field,Field  Info,Field  Node,,resolve  Class  get  Decl  Class  search  Field,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  resolve  Method  deep  Resolve  Method  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String  get  Resource  Field,1,0
32,attach  Arg,Insn  Node,void,,set  Parent  Insn  is  Register  get  S  Var  use,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate,0,0
33,attach  Arg,Insn  Node,void,,set  Parent  Insn  is  Register  get  S  Var  use,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,1,1
34,copy,,Insn  Node,,get  Class  get  Simple  Name  get  Class  copy  Common  Params  get  Args  Count,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,0,0
35,copy,,Insn  Node,,get  Class  get  Simple  Name  get  Class  copy  Common  Params  get  Args  Count,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,1,0
36,copy  With  New  Ssa  Var,Method  Node,Insn  Node,,get  Result  get  Reg  Num  duplicate  make  New  S  Var  copy,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
37,copy  With  New  Ssa  Var,Method  Node,Insn  Node,,get  Result  get  Reg  Num  duplicate  make  New  S  Var  copy,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,1,0
38,validate  Super  Cls,Arg  Type  Arg  Type,Arg  Type,,is  Object  add  Comment  get  Signature  equals  get  Object  get  Object  get  Type  get  Class  Info  add  Comment  get  Signature,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
39,validate  Super  Cls,Arg  Type  Arg  Type,Arg  Type,,is  Object  add  Comment  get  Signature  equals  get  Object  get  Object  get  Type  get  Class  Info  add  Comment  get  Signature,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,1,0
40,get  Const  Field  By  Literal  Arg,Class  Node,Field  Node,,get  Const  Field  By  Literal  Arg  get  Const  Values  root,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Literal  Arg,true  false  literal,Literal  Arg  get  Literal  is  Literal  is  Integer  duplicate  hash  Code  equals  to  String,0,0
41,get  Const  Field  By  Literal  Arg,Class  Node,Field  Node,,get  Const  Field  By  Literal  Arg  get  Const  Values  root,Literal  Arg,true  false  literal,Literal  Arg  get  Literal  is  Literal  is  Integer  duplicate  hash  Code  equals  to  String,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,1,1
42,search  Field,Field  Info,Field  Node,,equals  get  Field  Info,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,0,0
43,search  Field,Field  Info,Field  Node,,equals  get  Field  Info,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,1,0
44,search  Field  By  Name  And  Type,Field  Info,Field  Node,,equals  Name  And  Type  get  Field  Info,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,0,0
45,search  Field  By  Name  And  Type,Field  Info,Field  Node,,equals  Name  And  Type  get  Field  Info,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,1,0
46,make  New  S  Var,Method  Node,S  S  A  Var,,get  Reg  Num  make  New  S  Var  get  Next  S  Var  Version,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String,0,0
47,make  New  S  Var,Method  Node,S  S  A  Var,,get  Reg  Num  make  New  S  Var  get  Next  S  Var  Version,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,1,1
48,unbind  Handler,Try  Catch  Block,void,,get  Blocks  skip  Pred  Synthetic  Paths  add  get  equals  get  Handler  remove  get  get  Handler  Block  get  Block  remove  get  Successors  remove  mark  For  Remove,Try  Catch  Block,handlers  insns  attr,Try  Catch  Block  get  Handlers  get  Handlers  Count  contains  All  Handlers  add  Handler  remove  Same  Handlers  remove  Handler  remove  Whole  Block  add  Insn  remove  Insn  remove  Block  get  Insns  get  Catch  Attr  merge  hash  Code  equals  to  String,Exception  Handler,catch  Types  handle  Offset  handler  Block  blocks  handler  Region  arg  try  Block  is  Finally  removed,Exception  Handler  add  Catch  Type  add  Catch  Types  get  Catch  Types  get  Arg  Type  is  Catch  All  get  Handle  Offset  get  Handler  Block  set  Handler  Block  get  Blocks  add  Block  get  Handler  Region  set  Handler  Region  get  Arg  set  Arg  set  Try  Block  get  Try  Block  is  Finally  set  Finally  is  Removed  mark  For  Remove  equals  hash  Code  catch  Type  Str  to  String,0,0
49,unbind  Handler,Try  Catch  Block,void,,get  Blocks  skip  Pred  Synthetic  Paths  add  get  equals  get  Handler  remove  get  get  Handler  Block  get  Block  remove  get  Successors  remove  mark  For  Remove,Exception  Handler,catch  Types  handle  Offset  handler  Block  blocks  handler  Region  arg  try  Block  is  Finally  removed,Exception  Handler  add  Catch  Type  add  Catch  Types  get  Catch  Types  get  Arg  Type  is  Catch  All  get  Handle  Offset  get  Handler  Block  set  Handler  Block  get  Blocks  add  Block  get  Handler  Region  set  Handler  Region  get  Arg  set  Arg  set  Try  Block  get  Try  Block  is  Finally  set  Finally  is  Removed  mark  For  Remove  equals  hash  Code  catch  Type  Str  to  String,Try  Catch  Block,handlers  insns  attr,Try  Catch  Block  get  Handlers  get  Handlers  Count  contains  All  Handlers  add  Handler  remove  Same  Handlers  remove  Handler  remove  Whole  Block  add  Insn  remove  Insn  remove  Block  get  Insns  get  Catch  Attr  merge  hash  Code  equals  to  String,1,1
50,add  Catch  Type,Class  Info,void,catch  Types  catch  Types,add  is  Empty,Exception  Handler,catch  Types  handle  Offset  handler  Block  blocks  handler  Region  arg  try  Block  is  Finally  removed,Exception  Handler  add  Catch  Types  get  Catch  Types  get  Arg  Type  is  Catch  All  get  Handle  Offset  get  Handler  Block  set  Handler  Block  get  Blocks  add  Block  get  Handler  Region  set  Handler  Region  get  Arg  set  Arg  set  Try  Block  get  Try  Block  is  Finally  set  Finally  is  Removed  mark  For  Remove  equals  hash  Code  catch  Type  Str  to  String  unbind  Handler,Class  Info,type  name  pkg  full  Name  parent  Class  alias,Class  Info  from  Type  from  Dex  from  Name  check  Class  Type  change  Short  Name  change  Pkg  fill  Alias  Full  Name  get  Alias  Pkg  get  Alias  Short  Name  get  Alias  Full  Name  has  Alias  split  And  Apply  Names  make  Full  Cls  Name  make  Full  Name  make  Raw  Full  Name  make  Alias  Full  Name  make  Alias  Raw  Full  Name  get  Alias  Full  Path  get  Full  Name  get  Short  Name  get  Package  is  Default  Package  get  Raw  Name  get  Alias  Name  Without  Package  get  Parent  Class  get  Top  Parent  Class  is  Inner  not  Inner  update  Names  get  Type  to  String  hash  Code  equals  compare  To,0,0
51,add  Catch  Type,Class  Info,void,catch  Types  catch  Types,add  is  Empty,Class  Info,type  name  pkg  full  Name  parent  Class  alias,Class  Info  from  Type  from  Dex  from  Name  check  Class  Type  change  Short  Name  change  Pkg  fill  Alias  Full  Name  get  Alias  Pkg  get  Alias  Short  Name  get  Alias  Full  Name  has  Alias  split  And  Apply  Names  make  Full  Cls  Name  make  Full  Name  make  Raw  Full  Name  make  Alias  Full  Name  make  Alias  Raw  Full  Name  get  Alias  Full  Path  get  Full  Name  get  Short  Name  get  Package  is  Default  Package  get  Raw  Name  get  Alias  Name  Without  Package  get  Parent  Class  get  Top  Parent  Class  is  Inner  not  Inner  update  Names  get  Type  to  String  hash  Code  equals  compare  To,Exception  Handler,catch  Types  handle  Offset  handler  Block  blocks  handler  Region  arg  try  Block  is  Finally  removed,Exception  Handler  add  Catch  Types  get  Catch  Types  get  Arg  Type  is  Catch  All  get  Handle  Offset  get  Handler  Block  set  Handler  Block  get  Blocks  add  Block  get  Handler  Region  set  Handler  Region  get  Arg  set  Arg  set  Try  Block  get  Try  Block  is  Finally  set  Finally  is  Removed  mark  For  Remove  equals  hash  Code  catch  Type  Str  to  String  unbind  Handler,1,0
52,check  Code  Vars,Method  Node  List  Code  Var,void,,get  Type  set  Type  for  Each  get  Ssa  Vars  get  Immutable  Type  is  Type  Known  get  Type  Compare  get  Type  Update  root  compare  Types  is  Narrow  add  Warn  get  Detailed  Var  Info  add  Warn,Process  Variables,log,visit  remove  Unused  Results  process  Block  declare  Var  collect  Code  Vars  merge  Usage  Maps  check  Declare  At  Assign  can  Declare  At  is  All  Use  After  is  Container  Contains  Use  Place  check  Declare  At  Assign  declare  Var  In  Region,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
53,check  Code  Vars,Method  Node  List  Code  Var,void,,get  Type  set  Type  for  Each  get  Ssa  Vars  get  Immutable  Type  is  Type  Known  get  Type  Compare  get  Type  Update  root  compare  Types  is  Narrow  add  Warn  get  Detailed  Var  Info  add  Warn,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Process  Variables,log,visit  remove  Unused  Results  process  Block  declare  Var  collect  Code  Vars  merge  Usage  Maps  check  Declare  At  Assign  can  Declare  At  is  All  Use  After  is  Container  Contains  Use  Place  check  Declare  At  Assign  declare  Var  In  Region,1,0
54,collect  Code  Vars,Method  Node,List  Code  Var,,get  S  Vars  is  This  get  Code  Var  get  Code  Var  compute  If  Absent  add  entry  Set  get  Key  get  Value  get  Code  Var  merge  Flags  From  size  set  Code  Var  set  Ssa  Vars  key  Set,Process  Variables,log,visit  remove  Unused  Results  process  Block  check  Code  Vars  declare  Var  merge  Usage  Maps  check  Declare  At  Assign  can  Declare  At  is  All  Use  After  is  Container  Contains  Use  Place  check  Declare  At  Assign  declare  Var  In  Region,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
55,collect  Code  Vars,Method  Node,List  Code  Var,,get  S  Vars  is  This  get  Code  Var  get  Code  Var  compute  If  Absent  add  entry  Set  get  Key  get  Value  get  Code  Var  merge  Flags  From  size  set  Code  Var  set  Ssa  Vars  key  Set,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Process  Variables,log,visit  remove  Unused  Results  process  Block  check  Code  Vars  declare  Var  merge  Usage  Maps  check  Declare  At  Assign  can  Declare  At  is  All  Use  After  is  Container  Contains  Use  Place  check  Declare  At  Assign  declare  Var  In  Region,1,0
62,remove  Empty  Cases,Switch  Node  Switch  Region  Block  Node,void,,any  Match  stream  get  Cases  contains  get  Keys  is  Empty  get  Container  remove  If  get  Cases  is  Empty  get  Container  get  Keys  contains  is  Packed,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Handlers  Out  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,Switch  Node,keys  targets  def  packed  target  Blocks  def  Target  Block,Switch  Node  Switch  Node  get  Cases  Count  get  Keys  get  Targets  get  Default  Case  Offset  is  Packed  get  Target  Blocks  get  Def  Target  Block  init  Blocks  replace  Target  Block  is  Same  copy  to  String,0,0
63,remove  Empty  Cases,Switch  Node  Switch  Region  Block  Node,void,,any  Match  stream  get  Cases  contains  get  Keys  is  Empty  get  Container  remove  If  get  Cases  is  Empty  get  Container  get  Keys  contains  is  Packed,Switch  Node,keys  targets  def  packed  target  Blocks  def  Target  Block,Switch  Node  Switch  Node  get  Cases  Count  get  Keys  get  Targets  get  Default  Case  Offset  is  Packed  get  Target  Blocks  get  Def  Target  Block  init  Blocks  replace  Target  Block  is  Same  copy  to  String,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Handlers  Out  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,1,0
64,remove  Empty  Cases,Switch  Node  Switch  Region  Block  Node,void,,any  Match  stream  get  Cases  contains  get  Keys  is  Empty  get  Container  remove  If  get  Cases  is  Empty  get  Container  get  Keys  contains  is  Packed,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Handlers  Out  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,Switch  Region,default  case  key  header  cases  Case  Info  keys  container,Switch  Region  Case  Info  get  Keys  get  Container  get  Header  add  Case  get  Cases  get  Case  Containers  get  Sub  Blocks  get  Branches  base  String  to  String,0,0
65,remove  Empty  Cases,Switch  Node  Switch  Region  Block  Node,void,,any  Match  stream  get  Cases  contains  get  Keys  is  Empty  get  Container  remove  If  get  Cases  is  Empty  get  Container  get  Keys  contains  is  Packed,Switch  Region,default  case  key  header  cases  Case  Info  keys  container,Switch  Region  Case  Info  get  Keys  get  Container  get  Header  add  Case  get  Cases  get  Case  Containers  get  Sub  Blocks  get  Branches  base  String  to  String,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Handlers  Out  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,1,0
66,remove  Empty  Cases,Switch  Node  Switch  Region  Block  Node,void,,any  Match  stream  get  Cases  contains  get  Keys  is  Empty  get  Container  remove  If  get  Cases  is  Empty  get  Container  get  Keys  contains  is  Packed,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Handlers  Out  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,0,0
67,remove  Empty  Cases,Switch  Node  Switch  Region  Block  Node,void,,any  Match  stream  get  Cases  contains  get  Keys  is  Empty  get  Container  remove  If  get  Cases  is  Empty  get  Container  get  Keys  contains  is  Packed,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Handlers  Out  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,1,0
68,process  Handlers  Out  Blocks,Method  Node  Set  Try  Catch  Block,I  Region,,get  All  Region  Blocks  get  Region  get  Handlers  get  Handler  Region  get  Last  Block  add  All  get  Successors  get  All  Region  Blocks  remove  All  is  Empty  get  Region  add  make  Region,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  remove  Empty  Cases  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
69,process  Handlers  Out  Blocks,Method  Node  Set  Try  Catch  Block,I  Region,,get  All  Region  Blocks  get  Region  get  Handlers  get  Handler  Region  get  Last  Block  add  All  get  Successors  get  All  Region  Blocks  remove  All  is  Empty  get  Region  add  make  Region,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Region  Maker,log  mth  regions  Limit  regions  Count  processed  Blocks,Region  Maker  make  Region  traverse  process  Loop  make  Loop  Region  check  Loop  Exits  make  Endless  Loop  in  Exception  Handler  Blocks  can  Insert  Break  insert  Loop  Break  add  Break  Label  insert  Continue  can  Insert  Continue  is  Dominated  On  Blocks  process  Monitor  Enter  traverse  Monitor  Exits  traverse  Monitor  Exits  Cross  process  If  process  Switch  search  Fall  Through  Case  get  One  Intersection  Block  calc  Post  Dom  Out  remove  Empty  Cases  is  Bad  Cases  Order  re  Order  Switch  Cases  insert  Continue  In  Switch  process  Try  Catch  Blocks  process  Exc  Handler  is  Equal  Paths  is  Synthetic  Path  is  Equal  Return  Blocks,1,0
70,attach  Debug  Info,Insn  Arg  Local  Var  Debug  Info  Parse  Visitor,void,,get  Reg  Num  get  Reg  Num  add  Attr,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  set  Method  Source  Line,Reg  Debug  Info  Attr,type  name,Reg  Debug  Info  Attr  Reg  Debug  Info  Attr  get  Name  get  Reg  Type  get  Type  equals  hash  Code  to  String,0,0
71,attach  Debug  Info,Insn  Arg  Local  Var  Debug  Info  Parse  Visitor,void,,get  Reg  Num  get  Reg  Num  add  Attr,Reg  Debug  Info  Attr,type  name,Reg  Debug  Info  Attr  Reg  Debug  Info  Attr  get  Name  get  Reg  Type  get  Type  equals  hash  Code  to  String,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  set  Method  Source  Line,1,1
72,attach  Debug  Info,Insn  Arg  Local  Var  Debug  Info  Parse  Visitor,void,,get  Reg  Num  get  Reg  Num  add  Attr,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  set  Method  Source  Line,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
73,attach  Debug  Info,Insn  Arg  Local  Var  Debug  Info  Parse  Visitor,void,,get  Reg  Num  get  Reg  Num  add  Attr,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  set  Method  Source  Line,1,0
74,attach  Debug  Info,Insn  Arg  Local  Var  Debug  Info  Parse  Visitor,void,,get  Reg  Num  get  Reg  Num  add  Attr,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  set  Method  Source  Line,Local  Var,log  reg  Num  name  type  is  End  start  Addr  end  Addr,Local  Var  Local  Var  Local  Var  check  Signature  start  end  get  Reg  Num  get  Name  get  Type  is  End  get  Start  Addr  get  End  Addr  equals  hash  Code  to  String,0,0
75,attach  Debug  Info,Insn  Arg  Local  Var  Debug  Info  Parse  Visitor,void,,get  Reg  Num  get  Reg  Num  add  Attr,Local  Var,log  reg  Num  name  type  is  End  start  Addr  end  Addr,Local  Var  Local  Var  Local  Var  check  Signature  start  end  get  Reg  Num  get  Name  get  Type  is  End  get  Start  Addr  get  End  Addr  equals  hash  Code  to  String,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  set  Method  Source  Line,1,0
76,set  Method  Source  Line,Method  Node  Insn  Node,void,,get  Source  Line  set  Source  Line,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  attach  Debug  Info,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
77,set  Method  Source  Line,Method  Node  Insn  Node,void,,get  Source  Line  set  Source  Line,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Debug  Info  Parse  Visitor,log,visit  process  Debug  Info  attach  Debug  Info,1,0
78,add  Block,Insns  Slice,void,,get  Instructions  add  Insn,Insns  Slice,insns  List  insn  Map  complete,add  Insn  add  Insns  get  Block  get  Insns  List  get  Blocks  reset  Incomplete  is  Complete  set  Complete  to  String,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String,0,0
79,add  Block,Insns  Slice,void,,get  Instructions  add  Insn,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String,Insns  Slice,insns  List  insn  Map  complete,add  Insn  add  Insns  get  Block  get  Insns  List  get  Blocks  reset  Incomplete  is  Complete  set  Complete  to  String,1,1
80,add  Insns,Block  Node  int  int,void,,get  Instructions  add  Insn  get,Insns  Slice,insns  List  insn  Map  complete,add  Insn  get  Block  get  Insns  List  get  Blocks  reset  Incomplete  is  Complete  set  Complete  to  String,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,0,0
81,add  Insns,Block  Node  int  int,void,,get  Instructions  add  Insn  get,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,Insns  Slice,insns  List  insn  Map  complete,add  Insn  get  Block  get  Insns  List  get  Blocks  reset  Incomplete  is  Complete  set  Complete  to  String,1,0
82,expand  Unknown  Type,Arg  Type,List  Arg  Type,,get  Possible  Types  add  convert  From  Primitive  Type,Type  Search,log  candidates  count  limit  search  iteration  limit  mth  state  type  Compare  type  Update,Type  Search  run  apply  Resolved  Vars  search  resolve  Independent  Variables  full  Check  single  Check  fill  Type  Candidates  add  Usage  Type  Candidates  add  Candidate  Types  add  Candidate  Type  get  Wider  Types  get  Narrow  Types  collect  Constraints  make  Constraint  make  Move  Constraint  check  make  Phi  Constraint  check,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
83,expand  Unknown  Type,Arg  Type,List  Arg  Type,,get  Possible  Types  add  convert  From  Primitive  Type,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Search,log  candidates  count  limit  search  iteration  limit  mth  state  type  Compare  type  Update,Type  Search  run  apply  Resolved  Vars  search  resolve  Independent  Variables  full  Check  single  Check  fill  Type  Candidates  add  Usage  Type  Candidates  add  Candidate  Types  add  Candidate  Type  get  Wider  Types  get  Narrow  Types  collect  Constraints  make  Constraint  make  Move  Constraint  check  make  Phi  Constraint  check,1,0
84,add  Constraint,I  Type  Constraint  Type  Search,void,,add  get  Constraints,Type  Search,log  candidates  count  limit  search  iteration  limit  mth  state  type  Compare  type  Update,Type  Search  run  apply  Resolved  Vars  search  resolve  Independent  Variables  full  Check  single  Check  fill  Type  Candidates  add  Usage  Type  Candidates  add  Candidate  Types  add  Candidate  Type  get  Wider  Types  get  Narrow  Types  expand  Unknown  Type  collect  Constraints  make  Constraint  make  Move  Constraint  check  make  Phi  Constraint  check,Type  Search  Var  Info,var  type  Resolved  current  Type  candidate  Types  current  Index  constraints,Type  Search  Var  Info  mark  Resolved  reset  next  Type  get  Var  is  Type  Resolved  set  Type  Resolved  get  Current  Type  set  Current  Type  get  Candidate  Types  set  Candidate  Types  get  Constraints  set  Constraints  to  String,0,0
85,add  Constraint,I  Type  Constraint  Type  Search,void,,add  get  Constraints,Type  Search  Var  Info,var  type  Resolved  current  Type  candidate  Types  current  Index  constraints,Type  Search  Var  Info  mark  Resolved  reset  next  Type  get  Var  is  Type  Resolved  set  Type  Resolved  get  Current  Type  set  Current  Type  get  Candidate  Types  set  Candidate  Types  get  Constraints  set  Constraints  to  String,Type  Search,log  candidates  count  limit  search  iteration  limit  mth  state  type  Compare  type  Update,Type  Search  run  apply  Resolved  Vars  search  resolve  Independent  Variables  full  Check  single  Check  fill  Type  Candidates  add  Usage  Type  Candidates  add  Candidate  Types  add  Candidate  Type  get  Wider  Types  get  Narrow  Types  expand  Unknown  Type  collect  Constraints  make  Constraint  make  Move  Constraint  check  make  Phi  Constraint  check,1,1
86,compare  Array  With  Other  Type,Arg  Type  Arg  Type,Type  Compare  Enum,,is  Type  Known  contains  is  Object  equals  is  Primitive,Type  Compare,log  root  comparator  reversed  Comparator  Arg  Type  Comparator,Type  Compare  compare  Types  compare  With  Unknown  compare  Objects  compare  Wildcard  Types  compare  Generic  Type  With  Object  get  Comparator  get  Reversed  Comparator  compare,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
87,compare  Array  With  Other  Type,Arg  Type  Arg  Type,Type  Compare  Enum,,is  Type  Known  contains  is  Object  equals  is  Primitive,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Compare,log  root  comparator  reversed  Comparator  Arg  Type  Comparator,Type  Compare  compare  Types  compare  With  Unknown  compare  Objects  compare  Wildcard  Types  compare  Generic  Type  With  Object  get  Comparator  get  Reversed  Comparator  compare,1,0
88,compare  With  Unknown,Arg  Type  Arg  Type,Type  Compare  Enum,,is  Object  is  Array  equals  is  Array  is  Primitive  get  Primitive  Type  is  Array  get  Possible  Types,Type  Compare,log  root  comparator  reversed  Comparator  Arg  Type  Comparator,Type  Compare  compare  Types  compare  Array  With  Other  Type  compare  Objects  compare  Wildcard  Types  compare  Generic  Type  With  Object  get  Comparator  get  Reversed  Comparator  compare,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
89,compare  With  Unknown,Arg  Type  Arg  Type,Type  Compare  Enum,,is  Object  is  Array  equals  is  Array  is  Primitive  get  Primitive  Type  is  Array  get  Possible  Types,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Compare,log  root  comparator  reversed  Comparator  Arg  Type  Comparator,Type  Compare  compare  Types  compare  Array  With  Other  Type  compare  Objects  compare  Wildcard  Types  compare  Generic  Type  With  Object  get  Comparator  get  Reversed  Comparator  compare,1,0
90,compare  Wildcard  Types,Arg  Type  Arg  Type,Type  Compare  Enum,,get  Wildcard  Bound  get  Wildcard  Bound  compare  Types  get  Wildcard  Type  get  Wildcard  Type,Type  Compare,log  root  comparator  reversed  Comparator  Arg  Type  Comparator,Type  Compare  compare  Types  compare  Array  With  Other  Type  compare  With  Unknown  compare  Objects  compare  Generic  Type  With  Object  get  Comparator  get  Reversed  Comparator  compare,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
91,compare  Wildcard  Types,Arg  Type  Arg  Type,Type  Compare  Enum,,get  Wildcard  Bound  get  Wildcard  Bound  compare  Types  get  Wildcard  Type  get  Wildcard  Type,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Compare,log  root  comparator  reversed  Comparator  Arg  Type  Comparator,Type  Compare  compare  Types  compare  Array  With  Other  Type  compare  With  Unknown  compare  Objects  compare  Generic  Type  With  Object  get  Comparator  get  Reversed  Comparator  compare,1,0
92,is  Processed,Insn  Arg,boolean,,is  Empty  get  Arg,Type  Update  Info,flags  updates,Type  Update  Info  request  Update  apply  Updates  get  Type  rollback  Update  get  Updates  get  Flags,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
93,is  Processed,Insn  Arg,boolean,,is  Empty  get  Arg,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Type  Update  Info,flags  updates,Type  Update  Info  request  Update  apply  Updates  get  Type  rollback  Update  get  Updates  get  Flags,1,0
94,get  Type,Insn  Arg,Arg  Type,,get  Arg  get  Type  get  Type,Type  Update  Info,flags  updates,Type  Update  Info  request  Update  apply  Updates  is  Processed  rollback  Update  get  Updates  get  Flags,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
95,get  Type,Insn  Arg,Arg  Type,,get  Arg  get  Type  get  Type,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Type  Update  Info,flags  updates,Type  Update  Info  request  Update  apply  Updates  is  Processed  rollback  Update  get  Updates  get  Flags,1,0
96,get  Arg  Type,Insn  Arg,Arg  Type,,is  Register  get  Current  Type  get  Var  Info  get  S  Var  get  Type,Type  Search  State,var  Info  Map,Type  Search  State  get  Var  Info  get  All  Vars  get  Unresolved  Vars  get  Resolved  Vars,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
97,get  Arg  Type,Insn  Arg,Arg  Type,,is  Register  get  Current  Type  get  Var  Info  get  S  Var  get  Type,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Type  Search  State,var  Info  Map,Type  Search  State  get  Var  Info  get  All  Vars  get  Unresolved  Vars  get  Resolved  Vars,1,0
98,mark  Resolved,Arg  Type,void,current  Type  type  Resolved  candidate  Types,empty  List,Type  Search  Var  Info,var  type  Resolved  current  Type  candidate  Types  current  Index  constraints,Type  Search  Var  Info  reset  next  Type  get  Var  is  Type  Resolved  set  Type  Resolved  get  Current  Type  set  Current  Type  get  Candidate  Types  set  Candidate  Types  get  Constraints  set  Constraints  to  String  add  Constraint,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
99,mark  Resolved,Arg  Type,void,current  Type  type  Resolved  candidate  Types,empty  List,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Type  Search  Var  Info,var  type  Resolved  current  Type  candidate  Types  current  Index  constraints,Type  Search  Var  Info  reset  next  Type  get  Var  is  Type  Resolved  set  Type  Resolved  get  Current  Type  set  Current  Type  get  Candidate  Types  set  Candidate  Types  get  Constraints  set  Constraints  to  String  add  Constraint,1,0
100,run  Multi  Variable  Search,Method  Node,boolean,,run  add  Warn  get  S  Vars  is  Type  Known  get  Type  get  Type  Info  add  Warn  get  Stack  Trace,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
101,run  Multi  Variable  Search,Method  Node,boolean,,run  add  Warn  get  S  Vars  is  Type  Known  get  Type  get  Type  Info  add  Warn  get  Stack  Trace,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,1,0
102,merge  Phi  Bounds,Type  Inference  Visitor,void,,get  Used  In  Phi  get  Bounds  get  Type  Info  add  All  get  Bounds  get  Type  Info  get  S  Var  get  Result  get  Arguments  add  All  get  Bounds  get  Type  Info  get  S  Var,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info,0,0
103,merge  Phi  Bounds,Type  Inference  Visitor,void,,get  Used  In  Phi  get  Bounds  get  Type  Info  add  All  get  Bounds  get  Type  Info  get  S  Var  get  Result  get  Arguments  add  All  get  Bounds  get  Type  Info  get  S  Var,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,1,1
104,add  Bound,Type  Info  I  Type  Bound,void,,get  Type  add  get  Bounds,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,Type  Info,type  bounds,get  Type  set  Type  get  Bounds  reset  to  String,0,0
105,add  Bound,Type  Info  I  Type  Bound,void,,get  Type  add  get  Bounds,Type  Info,type  bounds,get  Type  set  Type  get  Bounds  reset  to  String,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,1,0
106,check  And  Split  Const  Insn,Method  Node  S  S  A  Var,boolean,,size  get  Used  In  Phi  get  Assign  Insn  get  Assign  check  Insn  Type  get  Block  By  Insn  get  Used  In  Phi  copy  With  New  Ssa  Var  add  insert  After  Insn  get  Arg  By  Ssa  Var  replace  Arg  duplicate  get  Result,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,0,0
107,check  And  Split  Const  Insn,Method  Node  S  S  A  Var,boolean,,size  get  Used  In  Phi  get  Assign  Insn  get  Assign  check  Insn  Type  get  Block  By  Insn  get  Used  In  Phi  copy  With  New  Ssa  Var  add  insert  After  Insn  get  Arg  By  Ssa  Var  replace  Arg  duplicate  get  Result,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,1,0
108,check  And  Split  Const  Insn,Method  Node  S  S  A  Var,boolean,,size  get  Used  In  Phi  get  Assign  Insn  get  Assign  check  Insn  Type  get  Block  By  Insn  get  Used  In  Phi  copy  With  New  Ssa  Var  add  insert  After  Insn  get  Arg  By  Ssa  Var  replace  Arg  duplicate  get  Result,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
109,check  And  Split  Const  Insn,Method  Node  S  S  A  Var,boolean,,size  get  Used  In  Phi  get  Assign  Insn  get  Assign  check  Insn  Type  get  Block  By  Insn  get  Used  In  Phi  copy  With  New  Ssa  Var  add  insert  After  Insn  get  Arg  By  Ssa  Var  replace  Arg  duplicate  get  Result,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects  process  Incompatible  Primitives,1,0
110,process  Incompatible  Primitives,Method  Node  S  S  A  Var,void,,get  Type  get  Type  Info  get  Bounds  get  Type  Info  get  Bound  is  Primitive  get  Type  get  Type  get  Parent  Insn  get  Arg  get  Type  get  Type  add  Arg  get  Arg  set  Result  reg  get  Reg  Num  get  Arg  get  Type  make  New  S  Var  get  Result  set  Type  get  Type  set  Code  Var  set  Type  get  Type  Info  get  Type  get  Args  Count  get  Arg  get  Arg  set  Arg  duplicate  get  Result  get  Block  By  Insn  get  Instructions  add  index  Of,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,0,0
111,process  Incompatible  Primitives,Method  Node  S  S  A  Var,void,,get  Type  get  Type  Info  get  Bounds  get  Type  Info  get  Bound  is  Primitive  get  Type  get  Type  get  Parent  Insn  get  Arg  get  Type  get  Type  add  Arg  get  Arg  set  Result  reg  get  Reg  Num  get  Arg  get  Type  make  New  S  Var  get  Result  set  Type  get  Type  set  Code  Var  set  Type  get  Type  Info  get  Type  get  Args  Count  get  Arg  get  Arg  set  Arg  duplicate  get  Result  get  Block  By  Insn  get  Instructions  add  index  Of,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects,1,0
112,process  Incompatible  Primitives,Method  Node  S  S  A  Var,void,,get  Type  get  Type  Info  get  Bounds  get  Type  Info  get  Bound  is  Primitive  get  Type  get  Type  get  Parent  Insn  get  Arg  get  Type  get  Type  add  Arg  get  Arg  set  Result  reg  get  Reg  Num  get  Arg  get  Type  make  New  S  Var  get  Result  set  Type  get  Type  set  Code  Var  set  Type  get  Type  Info  get  Type  get  Args  Count  get  Arg  get  Arg  set  Arg  duplicate  get  Result  get  Block  By  Insn  get  Instructions  add  index  Of,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
113,process  Incompatible  Primitives,Method  Node  S  S  A  Var,void,,get  Type  get  Type  Info  get  Bounds  get  Type  Info  get  Bound  is  Primitive  get  Type  get  Type  get  Parent  Insn  get  Arg  get  Type  get  Type  add  Arg  get  Arg  set  Result  reg  get  Reg  Num  get  Arg  get  Type  make  New  S  Var  get  Result  set  Type  get  Type  set  Code  Var  set  Type  get  Type  Info  get  Type  get  Args  Count  get  Arg  get  Arg  set  Arg  duplicate  get  Result  get  Block  By  Insn  get  Instructions  add  index  Of,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Type  Inference  Visitor,log  root  type  Update,init  visit  resolve  Types  run  Type  Propagation  run  Multi  Variable  Search  set  Immutable  Type  set  Best  Type  apply  Immutable  Type  calculate  From  Bounds  select  Best  Type  From  Bounds  attach  Bounds  add  Bound  add  Assign  Bound  make  Assign  Invoke  Bound  make  Use  Bound  make  Invoke  Use  Bound  try  Possible  Types  make  Possible  Types  List  try  Deduce  Type  try  Remove  Generics  try  Raw  Type  check  Raw  Type  try  Split  Const  Insns  check  And  Split  Const  Insn  try  Insert  Additional  Move  try  Insert  Additional  Insn  insert  Move  For  Phi  check  Block  For  Insn  Insert  try  Wider  Objects,1,0
114,collect  Related  Vars,Insn  Node  Insn  Arg,List  S  S  A  Var,,get  Args  Count  get  Result  get  Arguments  is  Register  add  get  S  Var  add  get  S  Var  get  Result  get  Arguments  is  Register  add  get  S  Var,Abstract  Type  Constraint,insn  related  Vars,Abstract  Type  Constraint  get  Related  Vars  to  String,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,0,0
115,collect  Related  Vars,Insn  Node  Insn  Arg,List  S  S  A  Var,,get  Args  Count  get  Result  get  Arguments  is  Register  add  get  S  Var  add  get  S  Var  get  Result  get  Arguments  is  Register  add  get  S  Var,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Abstract  Type  Constraint,insn  related  Vars,Abstract  Type  Constraint  get  Related  Vars  to  String,1,0
116,collect  Related  Vars,Insn  Node  Insn  Arg,List  S  S  A  Var,,get  Args  Count  get  Result  get  Arguments  is  Register  add  get  S  Var  add  get  S  Var  get  Result  get  Arguments  is  Register  add  get  S  Var,Abstract  Type  Constraint,insn  related  Vars,Abstract  Type  Constraint  get  Related  Vars  to  String,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
117,collect  Related  Vars,Insn  Node  Insn  Arg,List  S  S  A  Var,,get  Args  Count  get  Result  get  Arguments  is  Register  add  get  S  Var  add  get  S  Var  get  Result  get  Arguments  is  Register  add  get  S  Var,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Abstract  Type  Constraint,insn  related  Vars,Abstract  Type  Constraint  get  Related  Vars  to  String,1,0
118,get  Values  Init  Insn,Method  Node  Enum  Visitor,Block  Insn  Pair,,get  Field  Info  get  Basic  Blocks  get  Instructions  get  Type  get  Index  equals,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String,0,0
119,get  Values  Init  Insn,Method  Node  Enum  Visitor,Block  Insn  Pair,,get  Field  Info  get  Basic  Blocks  get  Instructions  get  Type  get  Index  equals,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,1
120,get  Values  Init  Insn,Method  Node  Enum  Visitor,Block  Insn  Pair,,get  Field  Info  get  Basic  Blocks  get  Instructions  get  Type  get  Index  equals,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
121,get  Values  Init  Insn,Method  Node  Enum  Visitor,Block  Insn  Pair,,get  Field  Info  get  Basic  Blocks  get  Instructions  get  Type  get  Index  equals,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
122,create  Enum  Field  By  Constructor,Class  Node  Field  Node  Constructor  Insn,Enum  Field,,get  Args  Count  get  Class  Type  resolve  Class  dex  equals  get  Class  Info  is  Enum  get  Access  Flags  resolve  Method  dex  get  Call  Mth,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
123,create  Enum  Field  By  Constructor,Class  Node  Field  Node  Constructor  Insn,Enum  Field,,get  Args  Count  get  Class  Type  resolve  Class  dex  equals  get  Class  Info  is  Enum  get  Access  Flags  resolve  Method  dex  get  Call  Mth,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
124,create  Enum  Field  By  Constructor,Class  Node  Field  Node  Constructor  Insn,Enum  Field,,get  Args  Count  get  Class  Type  resolve  Class  dex  equals  get  Class  Info  is  Enum  get  Access  Flags  resolve  Method  dex  get  Call  Mth,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String  get  Values  Init  Insn,0,0
125,create  Enum  Field  By  Constructor,Class  Node  Field  Node  Constructor  Insn,Enum  Field,,get  Args  Count  get  Class  Type  resolve  Class  dex  equals  get  Class  Info  is  Enum  get  Access  Flags  resolve  Method  dex  get  Call  Mth,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String  get  Values  Init  Insn,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
126,create  Enum  Field  By  Constructor,Class  Node  Field  Node  Constructor  Insn,Enum  Field,,get  Args  Count  get  Class  Type  resolve  Class  dex  equals  get  Class  Info  is  Enum  get  Access  Flags  resolve  Method  dex  get  Call  Mth,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Constructor  Insn,call  Mth  call  Type  Call  Type,Constructor  Insn  Constructor  Insn  get  Call  Mth  get  Instance  Arg  get  Class  Type  get  Call  Type  is  New  Instance  is  Super  is  This  is  Self  is  Static  Call  get  First  Arg  Offset  is  Same  copy  to  String,0,0
127,create  Enum  Field  By  Constructor,Class  Node  Field  Node  Constructor  Insn,Enum  Field,,get  Args  Count  get  Class  Type  resolve  Class  dex  equals  get  Class  Info  is  Enum  get  Access  Flags  resolve  Method  dex  get  Call  Mth,Constructor  Insn,call  Mth  call  Type  Call  Type,Constructor  Insn  Constructor  Insn  get  Call  Mth  get  Instance  Arg  get  Class  Type  get  Call  Type  is  New  Instance  is  Super  is  This  is  Self  is  Static  Call  get  First  Arg  Offset  is  Same  copy  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
128,search  Field  Put  Insn,Class  Node  Block  Node  Field  Node,Insn  Node,,get  Instructions  get  Type  get  Index  search  Field  equals,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
129,search  Field  Put  Insn,Class  Node  Block  Node  Field  Node,Insn  Node,,get  Instructions  get  Type  get  Index  search  Field  equals,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
130,search  Field  Put  Insn,Class  Node  Block  Node  Field  Node,Insn  Node,,get  Instructions  get  Type  get  Index  search  Field  equals,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,0,0
131,search  Field  Put  Insn,Class  Node  Block  Node  Field  Node,Insn  Node,,get  Instructions  get  Type  get  Index  search  Field  equals,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
132,search  Field  Put  Insn,Class  Node  Block  Node  Field  Node,Insn  Node,,get  Instructions  get  Type  get  Index  search  Field  equals,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String  get  Values  Init  Insn,0,0
133,search  Field  Put  Insn,Class  Node  Block  Node  Field  Node,Insn  Node,,get  Instructions  get  Type  get  Index  search  Field  equals,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String  get  Values  Init  Insn,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
134,mark  Args  For  Skip,Method  Node,void,,skip  Arg  get  Args  Count  get  Method  Info  skip  Arg,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
135,mark  Args  For  Skip,Method  Node,void,,skip  Arg  get  Args  Count  get  Method  Info  skip  Arg,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
136,is  Default  Constructor,Method  Node  String,boolean,,equals  equals  count  Insns,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
137,is  Default  Constructor,Method  Node  String,boolean,,equals  equals  count  Insns,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
138,uses  Values  Field,Method  Node  Field  Info,boolean,,equals  get  Index  search  Insn,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
139,uses  Values  Field,Method  Node  Field  Info,boolean,,equals  get  Index  search  Insn,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
140,uses  Values  Field,Method  Node  Field  Info,boolean,,equals  get  Index  search  Insn,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,0,0
141,uses  Values  Field,Method  Node  Field  Info,boolean,,equals  get  Index  search  Insn,Field  Info,decl  Class  name  type  alias,Field  Info  from  from  Dex  get  Name  get  Type  get  Decl  Class  get  Alias  set  Alias  has  Alias  get  Full  Id  get  Raw  Full  Id  is  Renamed  equals  Name  And  Type  equals  hash  Code  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn  get  Const  String,1,0
142,cast  Constructor  Insn,Insn  Node,Constructor  Insn,,get  Type,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  get  Const  String,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,0,0
143,cast  Constructor  Insn,Insn  Node,Constructor  Insn,,get  Type,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  get  Const  String,1,0
144,get  Const  String,Dex  Node  Insn  Arg,String,,is  Insn  Wrap  get  Wrap  Insn  get  Const  Value  By  Insn,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  resolve  Method  deep  Resolve  Method  resolve  Field  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String  get  Resource  Field,0,0
145,get  Const  String,Dex  Node  Insn  Arg,String,,is  Insn  Wrap  get  Wrap  Insn  get  Const  Value  By  Insn,Dex  Node,log  no  index  root  dex  Buf  file  dex  Id  classes  cls  Map  types  Cache,Dex  Node  load  Classes  add  Dummy  Class  add  Class  Node  init  Inner  Classes  get  Classes  resolve  Class  Local  resolve  Class  resolve  Class  resolve  Method  deep  Resolve  Method  resolve  Field  deep  Resolve  Field  get  Dex  File  get  String  get  Type  get  Method  Id  get  Field  Id  get  Proto  Id  read  Class  Data  read  Param  List  read  Code  open  Section  check  Offset  root  dex  type  Name  get  Dex  Id  to  String  get  Resource  Field,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn,1,0
146,get  Const  String,Dex  Node  Insn  Arg,String,,is  Insn  Wrap  get  Wrap  Insn  get  Const  Value  By  Insn,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
147,get  Const  String,Dex  Node  Insn  Arg,String,,is  Insn  Wrap  get  Wrap  Insn  get  Const  Value  By  Insn,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Enum  Visitor,enum  Value  Of  Mth,init  visit  convert  To  Enum  process  Constructor  Insn  extract  Enum  Fields  process  Enum  Field  By  Field  process  Enum  Filed  By  Register  create  Enum  Field  By  Constructor  search  Field  Put  Insn  remove  Enum  Methods  mark  Args  For  Skip  is  Default  Constructor  simple  Value  Of  Mth  uses  Values  Field  process  Enum  Cls  get  Constructor  Insn  cast  Constructor  Insn,1,0
148,can  Change  Type  To  Primitive,Register  Arg,boolean,,get  Ssa  Vars  get  Code  Var  get  S  Var  is  Type  Immutable  get  Use  List  get  Parent  Insn  get  Type  equals  get  Instance  Arg,Deboxing  Visitor,value  Of  Mths,init  value  Of  Mth  visit  check  For  Replace  is  Need  Explicit  Cast  collect  Use  Types,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,0,0
149,can  Change  Type  To  Primitive,Register  Arg,boolean,,get  Ssa  Vars  get  Code  Var  get  S  Var  is  Type  Immutable  get  Use  List  get  Parent  Insn  get  Type  equals  get  Instance  Arg,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Deboxing  Visitor,value  Of  Mths,init  value  Of  Mth  visit  check  For  Replace  is  Need  Explicit  Cast  collect  Use  Types,1,0
150,collect  Use  Types,Register  Arg,Set  Arg  Type,,get  Use  List  get  S  Var  add  get  Type  add  get  Init  Type,Deboxing  Visitor,value  Of  Mths,init  value  Of  Mth  visit  check  For  Replace  is  Need  Explicit  Cast  can  Change  Type  To  Primitive,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,0,0
151,collect  Use  Types,Register  Arg,Set  Arg  Type,,get  Use  List  get  S  Var  add  get  Type  add  get  Init  Type,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Deboxing  Visitor,value  Of  Mths,init  value  Of  Mth  visit  check  For  Replace  is  Need  Explicit  Cast  can  Change  Type  To  Primitive,1,0
152,search  Constructor  Call,Method  Node,Constructor  Insn,,get  Basic  Blocks  get  Instructions  get  Type  is  Super  is  This,Prepare  For  Code  Gen,,visit  visit  remove  Instructions  check  Inline  remove  Parenthesis  remove  Parenthesis  remove  Parenthesis  modify  Arith  move  Constructor  In  Constructor  set  Class  Source  Line,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
153,search  Constructor  Call,Method  Node,Constructor  Insn,,get  Basic  Blocks  get  Instructions  get  Type  is  Super  is  This,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Prepare  For  Code  Gen,,visit  visit  remove  Instructions  check  Inline  remove  Parenthesis  remove  Parenthesis  remove  Parenthesis  modify  Arith  move  Constructor  In  Constructor  set  Class  Source  Line,1,0
154,get  Call  Class  From  Invoke,Method  Node  Base  Invoke  Node  Method  Info,Arg  Type,,is  Super  get  Super  Class  get  Parent  Class  get  Instance  Arg  get  Type  get  Type  get  Decl  Class,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Type  Vars  Mapping  get  Cls  Call  Type  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types  get  Compiler  Var  Type,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
155,get  Call  Class  From  Invoke,Method  Node  Base  Invoke  Node  Method  Info,Arg  Type,,is  Super  get  Super  Class  get  Parent  Class  get  Instance  Arg  get  Type  get  Type  get  Decl  Class,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Type  Vars  Mapping  get  Cls  Call  Type  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types  get  Compiler  Var  Type,1,0
156,get  Call  Class  From  Invoke,Method  Node  Base  Invoke  Node  Method  Info,Arg  Type,,is  Super  get  Super  Class  get  Parent  Class  get  Instance  Arg  get  Type  get  Type  get  Decl  Class,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Type  Vars  Mapping  get  Cls  Call  Type  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types  get  Compiler  Var  Type,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String  collect  Overloaded  Methods,0,0
157,get  Call  Class  From  Invoke,Method  Node  Base  Invoke  Node  Method  Info,Arg  Type,,is  Super  get  Super  Class  get  Parent  Class  get  Instance  Arg  get  Type  get  Type  get  Decl  Class,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String  collect  Overloaded  Methods,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Type  Vars  Mapping  get  Cls  Call  Type  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types  get  Compiler  Var  Type,1,0
158,get  Cls  Call  Type,Base  Invoke  Node  Arg  Type,Arg  Type,,get  Instance  Arg  get  Type  get  Type  get  Result  get  Type  get  Result,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Call  Class  From  Invoke  get  Type  Vars  Mapping  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types  get  Compiler  Var  Type,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
159,get  Cls  Call  Type,Base  Invoke  Node  Arg  Type,Arg  Type,,get  Instance  Arg  get  Type  get  Type  get  Result  get  Type  get  Result,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Call  Class  From  Invoke  get  Type  Vars  Mapping  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types  get  Compiler  Var  Type,1,0
160,get  Compiler  Var  Type,Insn  Arg,Arg  Type,,get  Type  get  Literal  is  Object  is  Array  is  Primitive  contains  get  Type  get  Type  get  Wrap  Insn  get  Result  get  Type  get  Result  get  Type,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Call  Class  From  Invoke  get  Type  Vars  Mapping  get  Cls  Call  Type  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
161,get  Compiler  Var  Type,Insn  Arg,Arg  Type,,get  Type  get  Literal  is  Object  is  Array  is  Primitive  contains  get  Type  get  Type  get  Wrap  Insn  get  Result  get  Type  get  Result  get  Type,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Method  Invoke  Visitor,root,init  visit  process  Insn  process  Invoke  process  Overloaded  process  Unknown  get  Call  Class  From  Invoke  get  Type  Vars  Mapping  get  Cls  Call  Type  apply  Args  Cast  resolve  Type  Vars  search  Cast  Types  replace  Unknown  Types  is  Overload  Resolved  is  Strict  Types  is  Type  Applicable  filter  Applicable  Methods  is  Method  Acceptable  collect  Compiler  Var  Types,1,0
162,collect  Override  Methods,List  Arg  Type  String  Override  Method  Visitor,List  I  Method  Details,,resolve  Class  get  Methods  get  Short  Id  get  Method  Info  starts  With  add  get  Cls  Details  get  Clsp  get  Methods  Map  entry  Set  get  Key  starts  With  add  get  Value,Override  Method  Visitor,,visit  collect  Super  Types  collect  Super  Types  add  Super  Type  fix  Method  Return  Type  update  Return  Type  fix  Method  Arg  Types  update  Arg  Types  update  Arg  Type,Root  Node,log  args  passes  errors  Counter  string  Utils  const  Values  info  Storage  cache  Storage  type  Update  method  Utils  type  Utils  code  Cache  clsp  dex  Nodes  app  Package  app  Res  Class,Root  Node  load  load  Resources  process  Resources  init  Class  Path  init  Inner  Classes  get  Classes  resolve  Class  resolve  Class  search  Class  By  Name  search  Class  By  Full  Alias  search  Class  By  Short  Name  deep  Resolve  Method  deep  Resolve  Field  get  Passes  init  Passes  get  Dex  Nodes  get  Clsp  get  Errors  Counter  get  App  Package  get  App  Res  Class  get  String  Utils  get  Const  Values  get  Info  Storage  get  Cache  Storage  get  Args  get  Type  Update  get  Code  Cache  get  Method  Utils  get  Type  Utils,0,0
163,collect  Override  Methods,List  Arg  Type  String  Override  Method  Visitor,List  I  Method  Details,,resolve  Class  get  Methods  get  Short  Id  get  Method  Info  starts  With  add  get  Cls  Details  get  Clsp  get  Methods  Map  entry  Set  get  Key  starts  With  add  get  Value,Root  Node,log  args  passes  errors  Counter  string  Utils  const  Values  info  Storage  cache  Storage  type  Update  method  Utils  type  Utils  code  Cache  clsp  dex  Nodes  app  Package  app  Res  Class,Root  Node  load  load  Resources  process  Resources  init  Class  Path  init  Inner  Classes  get  Classes  resolve  Class  resolve  Class  search  Class  By  Name  search  Class  By  Full  Alias  search  Class  By  Short  Name  deep  Resolve  Method  deep  Resolve  Field  get  Passes  init  Passes  get  Dex  Nodes  get  Clsp  get  Errors  Counter  get  App  Package  get  App  Res  Class  get  String  Utils  get  Const  Values  get  Info  Storage  get  Cache  Storage  get  Args  get  Type  Update  get  Code  Cache  get  Method  Utils  get  Type  Utils,Override  Method  Visitor,,visit  collect  Super  Types  collect  Super  Types  add  Super  Type  fix  Method  Return  Type  update  Return  Type  fix  Method  Arg  Types  update  Arg  Types  update  Arg  Type,1,1
164,update  Return  Type,Method  Node  I  Method  Details  List  Arg  Type,boolean,,get  Return  Type  equals  get  Return  Type  contains  Type  Variable  get  Type  Compare  get  Type  Update  root  get  Type  get  Decl  Class  get  Method  Info  compare  Types  replace  Class  Generics  get  Type  Utils  root  contains  Type  Variable  equals  get  Return  Type  update  Return  Type,Override  Method  Visitor,,visit  collect  Super  Types  collect  Super  Types  add  Super  Type  fix  Method  Return  Type  fix  Method  Arg  Types  update  Arg  Types  update  Arg  Type,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
165,update  Return  Type,Method  Node  I  Method  Details  List  Arg  Type,boolean,,get  Return  Type  equals  get  Return  Type  contains  Type  Variable  get  Type  Compare  get  Type  Update  root  get  Type  get  Decl  Class  get  Method  Info  compare  Types  replace  Class  Generics  get  Type  Utils  root  contains  Type  Variable  equals  get  Return  Type  update  Return  Type,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Override  Method  Visitor,,visit  collect  Super  Types  collect  Super  Types  add  Super  Type  fix  Method  Return  Type  fix  Method  Arg  Types  update  Arg  Types  update  Arg  Type,1,0
166,update  Arg  Type,Method  Node  I  Method  Details  List  Arg  Type  int,Arg  Type,,get  get  Arg  Types  get  get  Arg  Types  equals  contains  Type  Variable  get  Type  Compare  get  Type  Update  root  get  Type  get  Decl  Class  get  Method  Info  compare  Types  replace  Class  Generics  get  Type  Utils  root  contains  Type  Variable  equals,Override  Method  Visitor,,visit  collect  Super  Types  collect  Super  Types  add  Super  Type  fix  Method  Return  Type  update  Return  Type  fix  Method  Arg  Types  update  Arg  Types,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
167,update  Arg  Type,Method  Node  I  Method  Details  List  Arg  Type  int,Arg  Type,,get  get  Arg  Types  get  get  Arg  Types  equals  contains  Type  Variable  get  Type  Compare  get  Type  Update  root  get  Type  get  Decl  Class  get  Method  Info  compare  Types  replace  Class  Generics  get  Type  Utils  root  contains  Type  Variable  equals,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Override  Method  Visitor,,visit  collect  Super  Types  collect  Super  Types  add  Super  Type  fix  Method  Return  Type  update  Return  Type  fix  Method  Arg  Types  update  Arg  Types,1,0
168,get  Detailed  Var  Info,Method  Node,String,,empty  Set  size  add  add  All  contains  get  add  get  Name  add  get  Reg  Type  get  Init  Type  is  Type  Known  add  get  Type  is  Type  Known  add  append  append  append  append  is  Empty  append  append  is  Empty  append  append  to  String,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  merge  Phi  Bounds,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
169,get  Detailed  Var  Info,Method  Node,String,,empty  Set  size  add  add  All  contains  get  add  get  Name  add  get  Reg  Type  get  Init  Type  is  Type  Known  add  get  Type  is  Type  Known  add  append  append  append  append  is  Empty  append  append  is  Empty  append  append  to  String,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  merge  Phi  Bounds,1,0
170,add  Ssa  Var,S  S  A  Var,void,,contains  add,Code  Var,name  type  ssa  Vars  is  Final  is  This  is  Declared,from  Mth  Arg  get  Name  set  Name  get  Type  set  Type  get  Ssa  Vars  set  Ssa  Vars  is  Final  set  Final  is  This  set  This  is  Declared  set  Declared  merge  Flags  From  to  String,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,0,0
171,add  Ssa  Var,S  S  A  Var,void,,contains  add,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,Code  Var,name  type  ssa  Vars  is  Final  is  This  is  Declared,from  Mth  Arg  get  Name  set  Name  get  Type  set  Type  get  Ssa  Vars  set  Ssa  Vars  is  Final  set  Final  is  This  set  This  is  Declared  set  Declared  merge  Flags  From  to  String,1,0
172,is  Name  Equals,Insn  Arg,boolean,,get  Name  equals  get  Name,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
173,is  Name  Equals,Insn  Arg,boolean,,get  Name  equals  get  Name,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,1,0
174,same  Reg  And  S  Var,Insn  Arg,boolean,,is  Register  get  Reg  Num  equals  get  S  Var,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
175,same  Reg  And  S  Var,Insn  Arg,boolean,,is  Register  get  Reg  Num  equals  get  S  Var,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,1,0
176,same  Reg,Insn  Arg,boolean,,is  Register  get  Reg  Num,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
177,same  Reg,Insn  Arg,boolean,,is  Register  get  Reg  Num,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,1,0
178,bind  Arg,Block  Node,Register  Arg,,reg  get  Reg  Num  get  Result  get  Init  Type  get  Result  bind  Arg,Phi  Insn,block  Binds,Phi  Insn  Phi  Insn  bind  Arg  get  Block  By  Arg  get  Block  By  Arg  Index  get  Arg  remove  Arg  remove  Arg  get  Arg  By  Ssa  Var  replace  Arg  add  Arg  set  Arg  copy  to  String,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,0,0
179,bind  Arg,Block  Node,Register  Arg,,reg  get  Reg  Num  get  Result  get  Init  Type  get  Result  bind  Arg,Block  Node,id  start  Offset  instructions  predecessors  successors  clean  Successors  doms  dom  Frontier  idom  dominates  On,Block  Node  set  Id  get  Id  get  Predecessors  get  Successors  get  Clean  Successors  update  Clean  Successors  lock  clean  Successors  get  Instructions  get  Start  Offset  is  Dominator  get  Doms  set  Doms  get  Dom  Frontier  set  Dom  Frontier  get  I  Dom  set  I  Dom  get  Dominates  On  add  Dominates  On  is  Synthetic  is  Return  Block  hash  Code  equals  compare  To  base  String  to  String  add  Block,Phi  Insn,block  Binds,Phi  Insn  Phi  Insn  bind  Arg  get  Block  By  Arg  get  Block  By  Arg  Index  get  Arg  remove  Arg  remove  Arg  get  Arg  By  Ssa  Var  replace  Arg  add  Arg  set  Arg  copy  to  String,1,0
180,get  Arg  By  Ssa  Var,S  S  A  Var,Register  Arg,,get  Args  Count  get  Arguments  get  S  Var,Phi  Insn,block  Binds,Phi  Insn  Phi  Insn  bind  Arg  bind  Arg  get  Block  By  Arg  get  Block  By  Arg  Index  get  Arg  remove  Arg  remove  Arg  replace  Arg  add  Arg  set  Arg  copy  to  String,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,0,0
181,get  Arg  By  Ssa  Var,S  S  A  Var,Register  Arg,,get  Args  Count  get  Arguments  get  S  Var,S  S  A  Var,reg  Num  version  assign  use  List  used  In  Phi  type  Info  code  Var,S  S  A  Var  get  Reg  Num  get  Version  get  Assign  set  Assign  get  Use  List  get  Use  Count  get  Immutable  Type  is  Type  Immutable  set  Type  use  remove  Use  add  Used  In  Phi  remove  Used  In  Phi  update  Used  In  Phi  List  get  Only  One  Use  In  Phi  get  Used  In  Phi  is  Used  In  Phi  get  Variable  Use  Count  set  Name  get  Name  get  Type  Info  get  Code  Var  set  Code  Var  reset  Type  And  Code  Var  is  Code  Var  Set  equals  hash  Code  to  Short  String  to  String  get  Detailed  Var  Info  merge  Phi  Bounds,Phi  Insn,block  Binds,Phi  Insn  Phi  Insn  bind  Arg  bind  Arg  get  Block  By  Arg  get  Block  By  Arg  Index  get  Arg  remove  Arg  remove  Arg  replace  Arg  add  Arg  set  Arg  copy  to  String,1,0
182,cmp,Decoded  Instruction  Insn  Type  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg  add  Arg  reg,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
183,cmp,Decoded  Instruction  Insn  Type  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg  add  Arg  reg,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
184,cast,Decoded  Instruction  Arg  Type  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
185,cast,Decoded  Instruction  Arg  Type  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
186,array  Get,Decoded  Instruction  Arg  Type,Insn  Node,,set  Result  type  Immutable  If  Known  Reg  add  Arg  type  Immutable  If  Known  Reg  array  add  Arg  reg,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Put  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
187,array  Get,Decoded  Instruction  Arg  Type,Insn  Node,,set  Result  type  Immutable  If  Known  Reg  add  Arg  type  Immutable  If  Known  Reg  array  add  Arg  reg,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Put  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
188,array  Put,Decoded  Instruction  Arg  Type,Insn  Node,,add  Arg  type  Immutable  If  Known  Reg  array  add  Arg  reg  add  Arg  type  Immutable  If  Known  Reg,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
189,array  Put,Decoded  Instruction  Arg  Type,Insn  Node,,add  Arg  type  Immutable  If  Known  Reg  array  add  Arg  reg  add  Arg  type  Immutable  If  Known  Reg,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  arith  arith  Lit  neg  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
190,neg,Decoded  Instruction  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
191,neg,Decoded  Instruction  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  not  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
192,not,Decoded  Instruction  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
193,not,Decoded  Instruction  Arg  Type,Insn  Node,,set  Result  reg  add  Arg  reg,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  insn  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
194,insn,Insn  Type  Register  Arg,Insn  Node,,set  Result,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,0,0
195,insn,Insn  Type  Register  Arg,Insn  Node,,set  Result,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
196,insn,Insn  Type  Register  Arg,Insn  Node,,set  Result,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,0,0
197,insn,Insn  Type  Register  Arg,Insn  Node,,set  Result,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
198,insn,Insn  Type  Register  Arg,Insn  Node,,set  Result,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
199,insn,Insn  Type  Register  Arg,Insn  Node,,set  Result,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Insn  Decoder,log  method  dex  insn  Arr,Insn  Decoder  decode  Insns  decode  Raw  Insn  process  decode  try  Resolve  Field  Type  decode  Switch  fill  Array  filled  New  Array  cmp  cast  invoke  array  Get  array  Put  arith  arith  Lit  neg  not  insn  get  Move  Result  Register  get  Insn  By  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset  Skip  Nop  get  Next  Insn  Offset  get  Next  Insn  Offset,1,0
200,get  Literal  Args,Arg  Type,List  Literal  Arg,,add  lit  add  lit  add  lit  add  lit  get  Class,Fill  Array  Node,one  byte  type  two  bytes  type  four  bytes  type  eight  bytes  type  data  size  elem  Type,Fill  Array  Node  Fill  Array  Node  get  Element  Type  get  Data  get  Size  get  Element  Type  is  Same  copy  data  To  String  to  String,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
201,get  Literal  Args,Arg  Type,List  Literal  Arg,,add  lit  add  lit  add  lit  add  lit  get  Class,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Fill  Array  Node,one  byte  type  two  bytes  type  four  bytes  type  eight  bytes  type  data  size  elem  Type,Fill  Array  Node  Fill  Array  Node  get  Element  Type  get  Data  get  Size  get  Element  Type  is  Same  copy  data  To  String  to  String,1,0
202,process  Method  Details,Method  Node  List  Clsp  Method,void,,get  Access  Flags  is  Private  get  Return  Type  is  Var  Args  get  Throws  get  Type  Parameters  not  Empty  not  Empty  contains  Generic  contains  Generic  Args  is  Args  Overloaded  get  Method  Info  get  Arg  Types  add,Cls  Set,log  clst  extension  clst  filename  clst  pkg  path  jadx  cls  set  header  version  string  charset  empty  argtype  array  root  Type  Enum  classes,Cls  Set  load  From  Clst  File  load  From  get  Methods  Details  make  Parents  Array  get  Cls  get  Cls  get  Cls  save  save  write  Generic  Type  Parameters  write  Method  write  Arg  Types  List  write  Arg  Types  Array  write  Arg  Type  load  load  read  Generic  Type  Parameters  read  Cls  Methods  read  Method  read  Arg  Types  List  read  Arg  Types  Array  read  Arg  Type  write  String  read  String  read  String  write  Unsigned  Byte  read  Unsigned  Byte  get  Classes  Count  add  To  Map,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
203,process  Method  Details,Method  Node  List  Clsp  Method,void,,get  Access  Flags  is  Private  get  Return  Type  is  Var  Args  get  Throws  get  Type  Parameters  not  Empty  not  Empty  contains  Generic  contains  Generic  Args  is  Args  Overloaded  get  Method  Info  get  Arg  Types  add,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Cls  Set,log  clst  extension  clst  filename  clst  pkg  path  jadx  cls  set  header  version  string  charset  empty  argtype  array  root  Type  Enum  classes,Cls  Set  load  From  Clst  File  load  From  get  Methods  Details  make  Parents  Array  get  Cls  get  Cls  get  Cls  save  save  write  Generic  Type  Parameters  write  Method  write  Arg  Types  List  write  Arg  Types  Array  write  Arg  Type  load  load  read  Generic  Type  Parameters  read  Cls  Methods  read  Method  read  Arg  Types  List  read  Arg  Types  Array  read  Arg  Type  write  String  read  String  read  String  write  Unsigned  Byte  read  Unsigned  Byte  get  Classes  Count  add  To  Map,1,0
204,get  Method  From  Class,Method  Info  Clsp  Graph,Clsp  Method,,get  get  Methods  Map  get  Short  Id,Clsp  Graph,log  root  super  Types  Cache  name  Map  missing  Classes,Clsp  Graph  load  add  Classpath  add  App  is  Cls  Known  get  Cls  Details  get  Method  Details  add  Class  is  Implements  get  Implementations  get  Common  Ancestor  search  Common  Parent  get  Super  Types  put  In  Super  Types  Cache  add  Super  Types  get  Clsp  Class  print  Missing  Classes,Clsp  Class,cls  Type  id  parents  methods  Map  type  Parameters,Clsp  Class  get  Name  get  Cls  Type  get  Id  get  Parents  set  Parents  get  Methods  Map  get  Sorted  Methods  List  set  Methods  Map  set  Methods  get  Type  Parameters  set  Type  Parameters  hash  Code  equals  to  String,0,0
205,get  Method  From  Class,Method  Info  Clsp  Graph,Clsp  Method,,get  get  Methods  Map  get  Short  Id,Clsp  Class,cls  Type  id  parents  methods  Map  type  Parameters,Clsp  Class  get  Name  get  Cls  Type  get  Id  get  Parents  set  Parents  get  Methods  Map  get  Sorted  Methods  List  set  Methods  Map  set  Methods  get  Type  Parameters  set  Type  Parameters  hash  Code  equals  to  String,Clsp  Graph,log  root  super  Types  Cache  name  Map  missing  Classes,Clsp  Graph  load  add  Classpath  add  App  is  Cls  Known  get  Cls  Details  get  Method  Details  add  Class  is  Implements  get  Implementations  get  Common  Ancestor  search  Common  Parent  get  Super  Types  put  In  Super  Types  Cache  add  Super  Types  get  Clsp  Class  print  Missing  Classes,1,1
206,get  Method  From  Class,Method  Info  Clsp  Graph,Clsp  Method,,get  get  Methods  Map  get  Short  Id,Clsp  Graph,log  root  super  Types  Cache  name  Map  missing  Classes,Clsp  Graph  load  add  Classpath  add  App  is  Cls  Known  get  Cls  Details  get  Method  Details  add  Class  is  Implements  get  Implementations  get  Common  Ancestor  search  Common  Parent  get  Super  Types  put  In  Super  Types  Cache  add  Super  Types  get  Clsp  Class  print  Missing  Classes,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String  collect  Overloaded  Methods,0,0
207,get  Method  From  Class,Method  Info  Clsp  Graph,Clsp  Method,,get  get  Methods  Map  get  Short  Id,Method  Info,name  ret  Type  arg  Types  decl  Class  short  Id  alias  alias  From  Preset,Method  Info  from  Dex  from  Details  make  Signature  make  Signature  make  Short  Id  is  Overloaded  By  get  Name  get  Full  Name  get  Full  Id  get  Raw  Full  Id  get  Short  Id  get  Decl  Class  get  Return  Type  get  Arguments  Types  get  Args  Count  is  Constructor  is  Class  Init  get  Alias  set  Alias  has  Alias  is  Alias  From  Preset  set  Alias  From  Preset  hash  Code  equals  compare  To  to  String  collect  Overloaded  Methods,Clsp  Graph,log  root  super  Types  Cache  name  Map  missing  Classes,Clsp  Graph  load  add  Classpath  add  App  is  Cls  Known  get  Cls  Details  get  Method  Details  add  Class  is  Implements  get  Implementations  get  Common  Ancestor  search  Common  Parent  get  Super  Types  put  In  Super  Types  Cache  add  Super  Types  get  Clsp  Class  print  Missing  Classes,1,0
208,force  Rename  Field,Field  Node,void,,set  Alias  get  Field  Info  make  Field  Alias,Deobfuscator,log  debug  class  name  separator  inner  class  separator  kotlin  metadata  annotation  kotlin  metadata  d  parameter  kotlin  metadata  classname  regex  args  dex  Nodes  deobf  Presets  cls  Map  fld  Map  mth  Map  ovrd  Map  ovrd  root  Package  pkg  Set  reserved  Cls  Names  max  Length  min  Length  use  Source  Name  As  Alias  parse  Kotlin  Metadata  pkg  Index  cls  Index  fld  Index  mth  Index,Deobfuscator  execute  save  Presets  clear  init  Indexes  pre  Process  process  post  Process  resolve  Overriding  get  Override  Methods  Node  get  Mth  Override  collect  Class  Hierarchy  process  Class  rename  Field  rename  Method  force  Rename  Method  add  Package  Preset  get  Package  Node  get  Name  Without  Package  pre  Process  Class  get  Cls  Alias  get  Pkg  Alias  make  Cls  Alias  get  Raw  Class  Name  From  Metadata  get  Alias  From  Source  File  get  Field  Alias  get  Method  Alias  make  Field  Alias  make  Method  Alias  process  Package  Full  should  Rename  prepare  Name  Part  dump  Class  Alias  dump  Alias  get  Package  Name  get  Class  Name  get  Class  Full  Name  get  Cls  Map  get  Fld  Map  get  Mth  Map  get  Root  Package  is  R,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String  get  Values  Init  Insn,0,0
209,force  Rename  Field,Field  Node,void,,set  Alias  get  Field  Info  make  Field  Alias,Field  Node,parent  field  Info  acc  Flags  type,Field  Node  Field  Node  get  Field  Info  get  Access  Flags  set  Access  Flags  get  Name  get  Alias  get  Type  set  Type  get  Parent  Class  type  Name  dex  root  hash  Code  equals  to  String  get  Values  Init  Insn,Deobfuscator,log  debug  class  name  separator  inner  class  separator  kotlin  metadata  annotation  kotlin  metadata  d  parameter  kotlin  metadata  classname  regex  args  dex  Nodes  deobf  Presets  cls  Map  fld  Map  mth  Map  ovrd  Map  ovrd  root  Package  pkg  Set  reserved  Cls  Names  max  Length  min  Length  use  Source  Name  As  Alias  parse  Kotlin  Metadata  pkg  Index  cls  Index  fld  Index  mth  Index,Deobfuscator  execute  save  Presets  clear  init  Indexes  pre  Process  process  post  Process  resolve  Overriding  get  Override  Methods  Node  get  Mth  Override  collect  Class  Hierarchy  process  Class  rename  Field  rename  Method  force  Rename  Method  add  Package  Preset  get  Package  Node  get  Name  Without  Package  pre  Process  Class  get  Cls  Alias  get  Pkg  Alias  make  Cls  Alias  get  Raw  Class  Name  From  Metadata  get  Alias  From  Source  File  get  Field  Alias  get  Method  Alias  make  Field  Alias  make  Method  Alias  process  Package  Full  should  Rename  prepare  Name  Part  dump  Class  Alias  dump  Alias  get  Package  Name  get  Class  Name  get  Class  Full  Name  get  Cls  Map  get  Fld  Map  get  Mth  Map  get  Root  Package  is  R,1,0
210,get  Raw  Class  Name  From  Metadata,Class  Node,String,,get  Annotation  get  get  Values  get  Annotation  get  get  Values  get  Annotation  get  get  get  Values  get  Annotation  replace  trim  length  matches,Deobfuscator,log  debug  class  name  separator  inner  class  separator  kotlin  metadata  annotation  kotlin  metadata  d  parameter  kotlin  metadata  classname  regex  args  dex  Nodes  deobf  Presets  cls  Map  fld  Map  mth  Map  ovrd  Map  ovrd  root  Package  pkg  Set  reserved  Cls  Names  max  Length  min  Length  use  Source  Name  As  Alias  parse  Kotlin  Metadata  pkg  Index  cls  Index  fld  Index  mth  Index,Deobfuscator  execute  save  Presets  clear  init  Indexes  pre  Process  process  post  Process  resolve  Overriding  get  Override  Methods  Node  get  Mth  Override  collect  Class  Hierarchy  process  Class  rename  Field  force  Rename  Field  rename  Method  force  Rename  Method  add  Package  Preset  get  Package  Node  get  Name  Without  Package  pre  Process  Class  get  Cls  Alias  get  Pkg  Alias  make  Cls  Alias  get  Alias  From  Source  File  get  Field  Alias  get  Method  Alias  make  Field  Alias  make  Method  Alias  process  Package  Full  should  Rename  prepare  Name  Part  dump  Class  Alias  dump  Alias  get  Package  Name  get  Class  Name  get  Class  Full  Name  get  Cls  Map  get  Fld  Map  get  Mth  Map  get  Root  Package  is  R,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
211,get  Raw  Class  Name  From  Metadata,Class  Node,String,,get  Annotation  get  get  Values  get  Annotation  get  get  Values  get  Annotation  get  get  get  Values  get  Annotation  replace  trim  length  matches,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Deobfuscator,log  debug  class  name  separator  inner  class  separator  kotlin  metadata  annotation  kotlin  metadata  d  parameter  kotlin  metadata  classname  regex  args  dex  Nodes  deobf  Presets  cls  Map  fld  Map  mth  Map  ovrd  Map  ovrd  root  Package  pkg  Set  reserved  Cls  Names  max  Length  min  Length  use  Source  Name  As  Alias  parse  Kotlin  Metadata  pkg  Index  cls  Index  fld  Index  mth  Index,Deobfuscator  execute  save  Presets  clear  init  Indexes  pre  Process  process  post  Process  resolve  Overriding  get  Override  Methods  Node  get  Mth  Override  collect  Class  Hierarchy  process  Class  rename  Field  force  Rename  Field  rename  Method  force  Rename  Method  add  Package  Preset  get  Package  Node  get  Name  Without  Package  pre  Process  Class  get  Cls  Alias  get  Pkg  Alias  make  Cls  Alias  get  Alias  From  Source  File  get  Field  Alias  get  Method  Alias  make  Field  Alias  make  Method  Alias  process  Package  Full  should  Rename  prepare  Name  Part  dump  Class  Alias  dump  Alias  get  Package  Name  get  Class  Name  get  Class  Full  Name  get  Cls  Map  get  Fld  Map  get  Mth  Map  get  Root  Package  is  R,1,0
212,get  Alias  From  Source  File,Class  Node,String,,get  is  Inner  get  Class  Info  get  File  Name  ends  With  substring  length  length  ends  With  substring  length  length  is  Valid  And  Printable  values  equals  get  Alias  search  Class  By  Name  root  get  Package  remove,Deobfuscator,log  debug  class  name  separator  inner  class  separator  kotlin  metadata  annotation  kotlin  metadata  d  parameter  kotlin  metadata  classname  regex  args  dex  Nodes  deobf  Presets  cls  Map  fld  Map  mth  Map  ovrd  Map  ovrd  root  Package  pkg  Set  reserved  Cls  Names  max  Length  min  Length  use  Source  Name  As  Alias  parse  Kotlin  Metadata  pkg  Index  cls  Index  fld  Index  mth  Index,Deobfuscator  execute  save  Presets  clear  init  Indexes  pre  Process  process  post  Process  resolve  Overriding  get  Override  Methods  Node  get  Mth  Override  collect  Class  Hierarchy  process  Class  rename  Field  force  Rename  Field  rename  Method  force  Rename  Method  add  Package  Preset  get  Package  Node  get  Name  Without  Package  pre  Process  Class  get  Cls  Alias  get  Pkg  Alias  make  Cls  Alias  get  Raw  Class  Name  From  Metadata  get  Field  Alias  get  Method  Alias  make  Field  Alias  make  Method  Alias  process  Package  Full  should  Rename  prepare  Name  Part  dump  Class  Alias  dump  Alias  get  Package  Name  get  Class  Name  get  Class  Full  Name  get  Cls  Map  get  Fld  Map  get  Mth  Map  get  Root  Package  is  R,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
213,get  Alias  From  Source  File,Class  Node,String,,get  is  Inner  get  Class  Info  get  File  Name  ends  With  substring  length  length  ends  With  substring  length  length  is  Valid  And  Printable  values  equals  get  Alias  search  Class  By  Name  root  get  Package  remove,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Deobfuscator,log  debug  class  name  separator  inner  class  separator  kotlin  metadata  annotation  kotlin  metadata  d  parameter  kotlin  metadata  classname  regex  args  dex  Nodes  deobf  Presets  cls  Map  fld  Map  mth  Map  ovrd  Map  ovrd  root  Package  pkg  Set  reserved  Cls  Names  max  Length  min  Length  use  Source  Name  As  Alias  parse  Kotlin  Metadata  pkg  Index  cls  Index  fld  Index  mth  Index,Deobfuscator  execute  save  Presets  clear  init  Indexes  pre  Process  process  post  Process  resolve  Overriding  get  Override  Methods  Node  get  Mth  Override  collect  Class  Hierarchy  process  Class  rename  Field  force  Rename  Field  rename  Method  force  Rename  Method  add  Package  Preset  get  Package  Node  get  Name  Without  Package  pre  Process  Class  get  Cls  Alias  get  Pkg  Alias  make  Cls  Alias  get  Raw  Class  Name  From  Metadata  get  Field  Alias  get  Method  Alias  make  Field  Alias  make  Method  Alias  process  Package  Full  should  Rename  prepare  Name  Part  dump  Class  Alias  dump  Alias  get  Package  Name  get  Class  Name  get  Class  Full  Name  get  Cls  Map  get  Fld  Map  get  Mth  Map  get  Root  Package  is  R,1,0
214,contains,Insn  Node,boolean,,get  Index,Insn  List,list,Insn  List  remove  remove  get  Index  get  Index  remove  iterator  get  size,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,0,0
215,contains,Insn  Node,boolean,,get  Index,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Insn  List,list,Insn  List  remove  remove  get  Index  get  Index  remove  iterator  get  size,1,0
216,get  Value  String,Values  Parser,String,,get  Simple  Value  decode  Value  get  Named  Values  size  decode  Name  Ref  get  Name  Ref  decode  Value  get  Raw  Value  add  add  to  String,Values  Parser,log  android  Strings  android  Res  Map  strings  res  Map,Values  Parser  decode  Android  decode  Value  decode  Value  decode  Name  Ref  decode  Complex  double  To  String  float  To  String  get  Android  Res  Map,Resource  Entry,id  pkg  Name  type  Name  key  Name  parent  Ref  simple  Value  named  Values  config,Resource  Entry  Resource  Entry  get  Id  get  Pkg  Name  get  Type  Name  get  Key  Name  set  Parent  Ref  get  Parent  Ref  get  Simple  Value  set  Simple  Value  set  Named  Values  get  Named  Values  set  Config  get  Config  to  String,0,0
217,get  Value  String,Values  Parser,String,,get  Simple  Value  decode  Value  get  Named  Values  size  decode  Name  Ref  get  Name  Ref  decode  Value  get  Raw  Value  add  add  to  String,Resource  Entry,id  pkg  Name  type  Name  key  Name  parent  Ref  simple  Value  named  Values  config,Resource  Entry  Resource  Entry  get  Id  get  Pkg  Name  get  Type  Name  get  Key  Name  set  Parent  Ref  get  Parent  Ref  get  Simple  Value  set  Simple  Value  set  Named  Values  get  Named  Values  set  Config  get  Config  to  String,Values  Parser,log  android  Strings  android  Res  Map  strings  res  Map,Values  Parser  decode  Android  decode  Value  decode  Value  decode  Name  Ref  decode  Complex  double  To  String  float  To  String  get  Android  Res  Map,1,1
218,decode  Value,Raw  Value,String,,get  Data  Type  get  Data  decode  Value,Values  Parser,log  android  Strings  android  Res  Map  strings  res  Map,Values  Parser  decode  Android  decode  Value  decode  Name  Ref  decode  Complex  double  To  String  float  To  String  get  Android  Res  Map,Raw  Value,data  Type  data,Raw  Value  get  Data  Type  get  Data  to  String,0,0
219,decode  Value,Raw  Value,String,,get  Data  Type  get  Data  decode  Value,Raw  Value,data  Type  data,Raw  Value  get  Data  Type  get  Data  to  String,Values  Parser,log  android  Strings  android  Res  Map  strings  res  Map,Values  Parser  decode  Android  decode  Value  decode  Name  Ref  decode  Complex  double  To  String  float  To  String  get  Android  Res  Map,1,0
220,add  Simple  Value,String  String  String  String  String  Res  Xml  Gen,void,,starts  With  start  Line  add  add  equals  add  add  add  add  add  add  replace  equals  add  add  add  add  replace  add  add  add  add  add  equals  add  add  equals  add  escape  Res  Str  Value  add  escape  Res  Value  add  add  add,Res  Xml  Gen,skip  res  types  res  Storage  vp,Res  Xml  Gen  make  Resources  Xml  add  Value  get  Type  As  String  add  Item  get  File  Name,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
221,add  Simple  Value,String  String  String  String  String  Res  Xml  Gen,void,,starts  With  start  Line  add  add  equals  add  add  add  add  add  add  replace  equals  add  add  add  add  replace  add  add  add  add  add  equals  add  add  equals  add  escape  Res  Str  Value  add  escape  Res  Value  add  add  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Res  Xml  Gen,skip  res  types  res  Storage  vp,Res  Xml  Gen  make  Resources  Xml  add  Value  get  Type  As  String  add  Item  get  File  Name,1,1
222,get  File  Name,Resource  Entry,String,,get  Qualifiers  get  Config  append  is  Empty  append  append  append  get  Type  Name  ends  With  get  Type  Name  append  append  to  String,Res  Xml  Gen,skip  res  types  res  Storage  vp,Res  Xml  Gen  make  Resources  Xml  add  Value  get  Type  As  String  add  Item,Resource  Entry,id  pkg  Name  type  Name  key  Name  parent  Ref  simple  Value  named  Values  config,Resource  Entry  Resource  Entry  get  Id  get  Pkg  Name  get  Type  Name  get  Key  Name  set  Parent  Ref  get  Parent  Ref  get  Simple  Value  set  Simple  Value  set  Named  Values  get  Named  Values  set  Config  get  Config  to  String  get  Value  String,0,0
223,get  File  Name,Resource  Entry,String,,get  Qualifiers  get  Config  append  is  Empty  append  append  append  get  Type  Name  ends  With  get  Type  Name  append  append  to  String,Resource  Entry,id  pkg  Name  type  Name  key  Name  parent  Ref  simple  Value  named  Values  config,Resource  Entry  Resource  Entry  get  Id  get  Pkg  Name  get  Type  Name  get  Key  Name  set  Parent  Ref  get  Parent  Ref  get  Simple  Value  set  Simple  Value  set  Named  Values  get  Named  Values  set  Config  get  Config  to  String  get  Value  String,Res  Xml  Gen,skip  res  types  res  Storage  vp,Res  Xml  Gen  make  Resources  Xml  add  Value  get  Type  As  String  add  Item,1,0
224,add  Fields,Class  Node  Class  Gen  Json  Code  Gen,void,,set  Fields  get  Fields  contains  set  Name  get  Name  has  Alias  get  Field  Info  set  Alias  get  Alias  add  Field  set  Declaration  get  Code  Str  set  Access  Flags  raw  Value  get  Access  Flags  add  get  Fields,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias  get  Class  Type  Str,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
225,add  Fields,Class  Node  Class  Gen  Json  Code  Gen,void,,set  Fields  get  Fields  contains  set  Name  get  Name  has  Alias  get  Field  Info  set  Alias  get  Alias  add  Field  set  Declaration  get  Code  Str  set  Access  Flags  raw  Value  get  Access  Flags  add  get  Fields,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias  get  Class  Type  Str,1,0
226,add  Fields,Class  Node  Class  Gen  Json  Code  Gen,void,,set  Fields  get  Fields  contains  set  Name  get  Name  has  Alias  get  Field  Info  set  Alias  get  Alias  add  Field  set  Declaration  get  Code  Str  set  Access  Flags  raw  Value  get  Access  Flags  add  get  Fields,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias  get  Class  Type  Str,Json  Class,pkg  type  super  Class  interfaces  dex  fields  methods  inner  Classes  imports,get  Type  set  Type  get  Super  Class  set  Super  Class  get  Interfaces  set  Interfaces  get  Fields  set  Fields  get  Methods  set  Methods  get  Inner  Classes  set  Inner  Classes  get  Pkg  set  Pkg  get  Dex  set  Dex  get  Imports  set  Imports,0,0
227,add  Fields,Class  Node  Class  Gen  Json  Code  Gen,void,,set  Fields  get  Fields  contains  set  Name  get  Name  has  Alias  get  Field  Info  set  Alias  get  Alias  add  Field  set  Declaration  get  Code  Str  set  Access  Flags  raw  Value  get  Access  Flags  add  get  Fields,Json  Class,pkg  type  super  Class  interfaces  dex  fields  methods  inner  Classes  imports,get  Type  set  Type  get  Super  Class  set  Super  Class  get  Interfaces  set  Interfaces  get  Fields  set  Fields  get  Methods  set  Methods  get  Inner  Classes  set  Inner  Classes  get  Pkg  set  Pkg  get  Dex  set  Dex  get  Imports  set  Imports,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias  get  Class  Type  Str,1,1
228,add  Fields,Class  Node  Class  Gen  Json  Code  Gen,void,,set  Fields  get  Fields  contains  set  Name  get  Name  has  Alias  get  Field  Info  set  Alias  get  Alias  add  Field  set  Declaration  get  Code  Str  set  Access  Flags  raw  Value  get  Access  Flags  add  get  Fields,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias  get  Class  Type  Str,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,0,0
229,add  Fields,Class  Node  Class  Gen  Json  Code  Gen,void,,set  Fields  get  Fields  contains  set  Name  get  Name  has  Alias  get  Field  Info  set  Alias  get  Alias  add  Field  set  Declaration  get  Code  Str  set  Access  Flags  raw  Value  get  Access  Flags  add  get  Fields,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias  get  Class  Type  Str,1,0
230,fill  Mth  Code,Method  Node  Method  Gen,List  Json  Code  Line,,is  No  Code  empty  List  add  Instructions  finish  get  Code  Str  is  Empty  empty  List  split  get  Line  Mapping  get  Annotations  get  Method  Code  Offset  set  Code  set  Source  Line  get  get  get  Offset  set  Offset  to  Hex  String  add,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  get  Type  Alias  get  Class  Type  Str,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
231,fill  Mth  Code,Method  Node  Method  Gen,List  Json  Code  Line,,is  No  Code  empty  List  add  Instructions  finish  get  Code  Str  is  Empty  empty  List  split  get  Line  Mapping  get  Annotations  get  Method  Code  Offset  set  Code  set  Source  Line  get  get  get  Offset  set  Offset  to  Hex  String  add,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  get  Type  Alias  get  Class  Type  Str,1,0
232,fill  Mth  Code,Method  Node  Method  Gen,List  Json  Code  Line,,is  No  Code  empty  List  add  Instructions  finish  get  Code  Str  is  Empty  empty  List  split  get  Line  Mapping  get  Annotations  get  Method  Code  Offset  set  Code  set  Source  Line  get  get  get  Offset  set  Offset  to  Hex  String  add,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  get  Type  Alias  get  Class  Type  Str,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Instructions  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,0,0
233,fill  Mth  Code,Method  Node  Method  Gen,List  Json  Code  Line,,is  No  Code  empty  List  add  Instructions  finish  get  Code  Str  is  Empty  empty  List  split  get  Line  Mapping  get  Annotations  get  Method  Code  Offset  set  Code  set  Source  Line  get  get  get  Offset  set  Offset  to  Hex  String  add,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Instructions  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  get  Type  Alias  get  Class  Type  Str,1,0
234,get  Class  Type  Str,Class  Node,String,,is  Enum  is  Interface  get  Access  Flags,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
235,get  Class  Type  Str,Class  Node,String,,is  Enum  is  Interface  get  Access  Flags,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Json  Code  Gen,gson  cls  args  root,Json  Code  Gen  process  process  Cls  add  Inner  Classes  add  Methods  fill  Mth  Code  get  Type  Alias,1,0
236,add  Arg  Dot,Code  Writer  Insn  Arg,void,,buf  Length  add  Arg  buf  Length  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
237,add  Arg  Dot,Code  Writer  Insn  Arg,void,,buf  Length  add  Arg  buf  Length  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
238,add  Arg  Dot,Code  Writer  Insn  Arg,void,,buf  Length  add  Arg  buf  Length  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
239,add  Arg  Dot,Code  Writer  Insn  Arg,void,,buf  Length  add  Arg  buf  Length  add,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
240,assign  Var,Code  Writer  Insn  Node,void,,get  Result  contains  declare  Var  add  Arg,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,0,0
241,assign  Var,Code  Writer  Insn  Node,void,,get  Result  contains  declare  Var  add  Arg,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
242,assign  Var,Code  Writer  Insn  Node,void,,get  Result  contains  declare  Var  add  Arg,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
243,assign  Var,Code  Writer  Insn  Node,void,,get  Result  contains  declare  Var  add  Arg,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
244,one  Arg  Insn,Code  Writer  Insn  Node  Set  Flags  char,void,,contains  add  add  add  Arg  get  Arg  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,0,0
245,one  Arg  Insn,Code  Writer  Insn  Node  Set  Flags  char,void,,contains  add  add  add  Arg  get  Arg  add,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
246,one  Arg  Insn,Code  Writer  Insn  Node  Set  Flags  char,void,,contains  add  add  add  Arg  get  Arg  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
247,one  Arg  Insn,Code  Writer  Insn  Node  Set  Flags  char,void,,contains  add  add  add  Arg  get  Arg  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
248,process  Var  Arg,Code  Writer  Base  Invoke  Node  Insn  Arg,boolean,,contains  is  Array  get  Type  is  Insn  Wrap  get  Wrap  Insn  get  Type  get  Args  Count  get  Arg  add  Arg  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
249,process  Var  Arg,Code  Writer  Base  Invoke  Node  Insn  Arg,boolean,,contains  is  Array  get  Type  is  Insn  Wrap  get  Wrap  Insn  get  Type  get  Args  Count  get  Arg  add  Arg  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
250,process  Var  Arg,Code  Writer  Base  Invoke  Node  Insn  Arg,boolean,,contains  is  Array  get  Type  is  Insn  Wrap  get  Wrap  Insn  get  Type  get  Args  Count  get  Arg  add  Arg  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
251,process  Var  Arg,Code  Writer  Base  Invoke  Node  Insn  Arg,boolean,,contains  is  Array  get  Type  is  Insn  Wrap  get  Wrap  Insn  get  Type  get  Args  Count  get  Arg  add  Arg  add,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
252,force  Assign,Insn  Node  Method  Node  Insn  Gen,boolean,,get  Result  contains  is  Void  Return,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,0,0
253,force  Assign,Insn  Node  Method  Node  Insn  Gen,boolean,,get  Result  contains  is  Void  Return,Insn  Node,insn  Type  result  arguments  offset,Insn  Node  Insn  Node  wrap  Arg  set  Result  add  Arg  set  Arg  get  Type  get  Result  get  Arguments  get  Args  Count  get  Arg  contains  Arg  contains  Var  replace  Arg  remove  Arg  remove  Arg  get  Arg  Index  add  Reg  add  Reg  add  Lit  add  Lit  get  Offset  set  Offset  get  Register  Args  is  Const  Insn  can  Remove  Result  can  Reorder  can  Reorder  Recursive  contains  Wrapped  Insn  is  Same  is  Deep  Equals  copy  Common  Params  copy  copy  Without  Result  copy  Without  Ssa  copy  copy  With  New  Ssa  Var  rebind  Args  can  Throw  Exception  hash  Code  equals  append  Args  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
254,force  Assign,Insn  Node  Method  Node  Insn  Gen,boolean,,get  Result  contains  is  Void  Return,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
255,force  Assign,Insn  Node  Method  Node  Insn  Gen,boolean,,get  Result  contains  is  Void  Return,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,0
256,force  Assign,Insn  Node  Method  Node  Insn  Gen,boolean,,get  Result  contains  is  Void  Return,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,Invoke  Node,type  mth,Invoke  Node  Invoke  Node  get  Invoke  Type  get  Call  Mth  get  Instance  Arg  is  Static  Call  get  First  Arg  Offset  copy  is  Same  to  String,0,0
257,force  Assign,Insn  Node  Method  Node  Insn  Gen,boolean,,get  Result  contains  is  Void  Return,Invoke  Node,type  mth,Invoke  Node  Invoke  Node  get  Invoke  Type  get  Call  Mth  get  Instance  Arg  is  Static  Call  get  First  Arg  Offset  copy  is  Same  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith  make  Arith  One  Arg,1,1
258,add  Cast  If  Needed,Code  Writer  Insn  Arg  Insn  Arg,void,,is  Literal  is  Literal  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  is  Printable  Char  is  Printable  Char  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  make  Arith  make  Arith  One  Arg,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
259,add  Cast  If  Needed,Code  Writer  Insn  Arg  Insn  Arg,void,,is  Literal  is  Literal  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  is  Printable  Char  is  Printable  Char  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  make  Arith  make  Arith  One  Arg,1,0
260,add  Cast  If  Needed,Code  Writer  Insn  Arg  Insn  Arg,void,,is  Literal  is  Literal  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  is  Printable  Char  is  Printable  Char  add,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  make  Arith  make  Arith  One  Arg,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,0,0
261,add  Cast  If  Needed,Code  Writer  Insn  Arg  Insn  Arg,void,,is  Literal  is  Literal  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  add  get  Type  get  Literal  get  Literal  is  Printable  Char  is  Printable  Char  add,Insn  Arg,log  parent  Insn,reg  reg  type  Immutable  If  Known  Reg  type  Immutable  Reg  type  Immutable  Reg  reg  lit  lit  wrap  is  Register  is  Literal  is  Insn  Wrap  is  Named  get  Parent  Insn  set  Parent  Insn  wrap  Instruction  wrap  Instruction  get  Arg  Index  wrap  Insn  Into  Arg  wrap  Arg  is  This  copy  Common  Params  duplicate  attach  Arg,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  make  Arith  make  Arith  One  Arg,1,0
262,make  Arith  One  Arg,Arith  Node  Code  Writer,void,,get  Op  get  Arg  get  Arg  is  Literal  get  Literal  is  Integer  add  Arg  get  Symbol  add  add  add  Arg  add  add  add  get  Symbol  add  Arg,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
263,make  Arith  One  Arg,Arith  Node  Code  Writer,void,,get  Op  get  Arg  get  Arg  is  Literal  get  Literal  is  Integer  add  Arg  get  Symbol  add  add  add  Arg  add  add  add  get  Symbol  add  Arg,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith,1,0
264,make  Arith  One  Arg,Arith  Node  Code  Writer,void,,get  Op  get  Arg  get  Arg  is  Literal  get  Literal  is  Integer  add  Arg  get  Symbol  add  add  add  Arg  add  add  add  get  Symbol  add  Arg,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith,Arith  Node,op,Arith  Node  Arith  Node  Arith  Node  one  Arg  Op  get  Op  is  Same  is  Same  Literal  copy  to  String,0,0
265,make  Arith  One  Arg,Arith  Node  Code  Writer,void,,get  Op  get  Arg  get  Arg  is  Literal  get  Literal  is  Integer  add  Arg  get  Symbol  add  add  add  Arg  add  add  add  get  Symbol  add  Arg,Arith  Node,op,Arith  Node  Arith  Node  Arith  Node  one  Arg  Op  get  Op  is  Same  is  Same  Literal  copy  to  String,Insn  Gen,log  mgen  mth  root  fallback  attach  Insns  Flags  empty  flags  body  only  flag  body  only  nowrap  flags,Insn  Gen  is  Fallback  add  Arg  Dot  add  Arg  add  Arg  add  Wrapped  Arg  assign  Var  declare  Var  declare  Var  lit  instance  Field  make  Static  Field  Access  static  Field  use  Class  use  Class  use  Type  make  Insn  make  Insn  make  Insn  Body  fill  Array  one  Arg  Insn  fallback  Only  Insn  filled  New  Array  make  Constructor  inline  Anonymous  Constructor  make  Invoke  get  Class  For  Super  Call  generate  Method  Arguments  process  Var  Arg  inline  Method  make  Ternary  add  Cast  If  Needed  make  Arith,1,0
266,get  Fallback  Name,Code  Var,String,,get  Ssa  Vars  is  Empty  get  Fallback  Name  get  Assign  get,Name  Gen,obj  alias  var  Names  mth  fallback,Name  Gen  add  Names  Used  In  Class  assign  Arg  assign  Named  Arg  use  Arg  get  Loop  Label  get  Unique  Var  Name  make  Arg  Name  get  Fallback  Name  guess  Name  make  Name  For  Type  make  Name  For  Primitive  make  Name  For  Object  from  Name  get  Alias  For  Object  make  Name  From  Insn  make  Name  From  Invoke,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,0,0
267,get  Fallback  Name,Code  Var,String,,get  Ssa  Vars  is  Empty  get  Fallback  Name  get  Assign  get,Register  Arg,this  arg  name  super  arg  name  reg  Num  s  Var,Register  Arg  get  Reg  Num  is  Register  set  Type  get  Type  get  Init  Type  get  Immutable  Type  is  Type  Immutable  get  S  Var  set  S  Var  add  get  Name  is  Super  set  Name  set  Name  If  Unknown  is  Name  Equals  duplicate  duplicate  duplicate  duplicate  duplicate  get  Assign  Insn  equal  Register  And  Type  same  Reg  And  S  Var  same  Reg  same  Code  Var  hash  Code  equals  to  String  make  New  S  Var,Name  Gen,obj  alias  var  Names  mth  fallback,Name  Gen  add  Names  Used  In  Class  assign  Arg  assign  Named  Arg  use  Arg  get  Loop  Label  get  Unique  Var  Name  make  Arg  Name  get  Fallback  Name  guess  Name  make  Name  For  Type  make  Name  For  Primitive  make  Name  For  Object  from  Name  get  Alias  For  Object  make  Name  From  Insn  make  Name  From  Invoke,1,0
268,add  Class  Code,Code  Writer,void,,contains  add  Comments  insert  Decompilation  Problems  add  Class  Declaration  add  Class  Body,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
269,add  Class  Code,Code  Writer,void,,contains  add  Comments  insert  Decompilation  Problems  add  Class  Declaration  add  Class  Body,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
270,insert  Decompilation  Problems,Code  Writer  Class  Gen,void,,get  All  is  Empty  for  Each  sorted  distinct  stream  add  start  Line  get  Error  get  Cause  inc  Indent  append  Stack  Trace  dec  Indent  add  get  All  is  Empty  for  Each  sorted  distinct  stream  add  add  Multi  Line  start  Line,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Attr  Node,empty  attr  storage  storage,add  add  Attr  add  Attr  copy  Attributes  From  init  Storage  unload  If  Empty  contains  contains  get  get  Annotation  get  All  remove  remove  remove  Attr  clear  Attributes  unload  Attributes  get  Attributes  Strings  List  get  Attributes  String  is  Attr  Storage  Empty,0,0
271,insert  Decompilation  Problems,Code  Writer  Class  Gen,void,,get  All  is  Empty  for  Each  sorted  distinct  stream  add  start  Line  get  Error  get  Cause  inc  Indent  append  Stack  Trace  dec  Indent  add  get  All  is  Empty  for  Each  sorted  distinct  stream  add  add  Multi  Line  start  Line,Attr  Node,empty  attr  storage  storage,add  add  Attr  add  Attr  copy  Attributes  From  init  Storage  unload  If  Empty  contains  contains  get  get  Annotation  get  All  remove  remove  remove  Attr  clear  Attributes  unload  Attributes  get  Attributes  Strings  List  get  Attributes  String  is  Attr  Storage  Empty,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,1
272,insert  Decompilation  Problems,Code  Writer  Class  Gen,void,,get  All  is  Empty  for  Each  sorted  distinct  stream  add  start  Line  get  Error  get  Cause  inc  Indent  append  Stack  Trace  dec  Indent  add  get  All  is  Empty  for  Each  sorted  distinct  stream  add  add  Multi  Line  start  Line,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
273,insert  Decompilation  Problems,Code  Writer  Class  Gen,void,,get  All  is  Empty  for  Each  sorted  distinct  stream  add  start  Line  get  Error  get  Cause  inc  Indent  append  Stack  Trace  dec  Indent  add  get  All  is  Empty  for  Each  sorted  distinct  stream  add  add  Multi  Line  start  Line,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
274,get  Enum  Ctr  Skip  Args  Count,Method  Node,int,,get  get  Skip  Count,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
275,get  Enum  Ctr  Skip  Args  Count,Method  Node,int,,get  get  Skip  Count,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
276,make  Insn  Gen,Method  Node,Insn  Gen,,,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
277,make  Insn  Gen,Method  Node,Insn  Gen,,,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
278,use  Type,Code  Writer  Arg  Type,void,,get  Primitive  Type  add  to  String  is  Generic  Type  add  get  Object  use  Class  use  Type  get  Array  Element  add  add  get  Long  Name,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
279,use  Type,Code  Writer  Arg  Type,void,,get  Primitive  Type  add  to  String  is  Generic  Type  add  get  Object  use  Class  use  Type  get  Array  Element  add  add  get  Long  Name,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
280,use  Type,Code  Writer  Arg  Type,void,,get  Primitive  Type  add  to  String  is  Generic  Type  add  get  Object  use  Class  use  Type  get  Array  Element  add  add  get  Long  Name,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
281,use  Type,Code  Writer  Arg  Type,void,,get  Primitive  Type  add  to  String  is  Generic  Type  add  get  Object  use  Class  use  Type  get  Array  Element  add  add  get  Long  Name,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
282,use  Class,Code  Writer  Arg  Type,void,,get  Outer  Type  use  Class  add  use  Class  get  Inner  Type  use  Class  from  Type  root  get  Generic  Types  add  add  get  Wildcard  Type  get  Wildcard  Bound  add  get  Str  use  Type  use  Type  add,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
283,use  Class,Code  Writer  Arg  Type,void,,get  Outer  Type  use  Class  add  use  Class  get  Inner  Type  use  Class  from  Type  root  get  Generic  Types  add  add  get  Wildcard  Type  get  Wildcard  Bound  add  get  Str  use  Type  use  Type  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
284,use  Class,Code  Writer  Arg  Type,void,,get  Outer  Type  use  Class  add  use  Class  get  Inner  Type  use  Class  from  Type  root  get  Generic  Types  add  add  get  Wildcard  Type  get  Wildcard  Bound  add  get  Str  use  Type  use  Type  add,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,0,0
285,use  Class,Code  Writer  Arg  Type,void,,get  Outer  Type  use  Class  add  use  Class  get  Inner  Type  use  Class  from  Type  root  get  Generic  Types  add  add  get  Wildcard  Type  get  Wildcard  Bound  add  get  Str  use  Type  use  Type  add,Arg  Type,int  boolean  byte  short  char  float  double  long  void  object  class  string  enum  throwable  object  array  wildcard  unknown  unknown  object  unknown  object  no  array  unknown  array  narrow  narrow  numbers  narrow  integral  narrow  numbers  no  bool  narrow  numbers  no  float  wide  int  float  hash  Known  Type  empty  possibles  Primitive  Arg  type  Object  Type  obj  Name  Generic  Type  extend  Types  Wildcard  Bound  num  str  Wildcard  Type  type  bound  Generic  Object  generics  Outer  Generic  Object  outer  Type  inner  Type  Array  Arg  array  possibles  array  Element  Unknown  Arg  possible  Types,primitive  object  No  Cache  object  generic  Type  wildcard  wildcard  generic  generic  outer  Generic  array  unknown  replace  Class  Generics  is  Type  Known  contains  select  First  get  Possible  Types  Primitive  Arg  get  Primitive  Type  is  Primitive  internal  Equals  to  String  Object  Type  get  Object  is  Object  get  Primitive  Type  internal  Equals  to  String  Generic  Type  is  Generic  Type  get  Extend  Types  set  Extend  Types  Wildcard  Bound  get  Num  get  Str  get  By  Num  Wildcard  Type  is  Generic  get  Wildcard  Type  get  Wildcard  Bound  internal  Equals  to  String  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  internal  Equals  to  String  Outer  Generic  Object  calc  Hash  is  Generic  get  Generic  Types  get  Outer  Type  get  Inner  Type  internal  Equals  to  String  Array  Arg  get  Array  Element  is  Array  get  Primitive  Type  is  Type  Known  select  First  get  Possible  Types  get  Array  Dimension  get  Array  Root  Element  internal  Equals  to  String  Unknown  Arg  get  Possible  Types  is  Type  Known  contains  select  First  internal  Equals  to  String  is  Type  Known  get  Primitive  Type  is  Primitive  get  Object  is  Object  is  Generic  is  Generic  Type  get  Generic  Types  get  Extend  Types  set  Extend  Types  get  Wildcard  Type  get  Wildcard  Bound  get  Outer  Type  get  Inner  Type  is  Array  get  Array  Dimension  get  Array  Element  get  Array  Root  Element  contains  select  First  get  Possible  Types  is  Cast  Needed  is  Instance  Of  is  Cls  Known  can  Be  Object  can  Be  Array  can  Be  Primitive  convert  From  Primitive  Type  parse  parse  get  Reg  Count  contains  Generic  contains  Type  Variable  try  To  Resolve  Class  Alias  to  String  hash  Code  internal  Equals  equals,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  insert  Rename  Info  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
286,insert  Rename  Info,Code  Writer  Class  Node,void,,get  Class  Info  has  Alias  add  Renamed  Comment  get  Object  get  Type,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
287,insert  Rename  Info,Code  Writer  Class  Node,void,,get  Class  Info  has  Alias  add  Renamed  Comment  get  Object  get  Type,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
288,insert  Rename  Info,Code  Writer  Class  Node,void,,get  Class  Info  has  Alias  add  Renamed  Comment  get  Object  get  Type,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
289,insert  Rename  Info,Code  Writer  Class  Node,void,,get  Class  Info  has  Alias  add  Renamed  Comment  get  Object  get  Type,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Class  Gen,cls  parent  Gen  annotation  Gen  fallback  use  Imports  show  Inconsistent  Code  imports  cls  Decl  Line  body  Gen  Started,Class  Gen  Class  Gen  Class  Gen  get  Class  Node  make  Class  add  Class  Code  add  Class  Declaration  add  Generic  Type  Parameters  add  Class  Body  add  Class  Body  add  Inner  Cls  And  Methods  add  Inner  Class  is  Inner  Classes  Presents  add  Method  is  Methods  Presents  add  Method  Code  add  Fields  add  Field  is  Fields  Presents  add  Enum  Fields  get  Enum  Ctr  Skip  Args  Count  make  Insn  Gen  add  Insn  Body  use  Type  use  Class  use  Class  use  Class  add  Cls  Name  use  Class  Internal  expand  Inner  Class  Name  add  Import  get  Imports  is  Both  Classes  In  One  Top  Class  is  Class  Inner  For  search  Collision  get  Parent  Gen  get  Annotation  Gen  is  Fallback  Mode  is  Body  Gen  Started  set  Body  Gen  Started,1,0
290,add  Override  Annotation,Code  Writer  Method  Node,void,,get  start  Line  add  iterator  get  Override  List  has  Next  next  add  get  Alias  Full  Name  get  Decl  Class  get  Method  Info  has  Next  add,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Method  Arguments  add  Instructions  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,0,0
291,add  Override  Annotation,Code  Writer  Method  Node,void,,get  start  Line  add  iterator  get  Override  List  has  Next  next  add  get  Alias  Full  Name  get  Decl  Class  get  Method  Info  has  Next  add,Method  Node,log  mth  Info  parent  Class  acc  Flags  method  Data  method  Is  Virtual  no  Code  regs  Count  code  Size  debug  Info  Offset  loaded  ret  Type  arg  Types  type  Parameters  this  Arg  args  List  instructions  blocks  enter  Block  exit  Blocks  s  Vars  exception  Handlers  loops  region,Method  Node  unload  load  check  Instructions  init  Method  Types  parse  Signature  try  Fix  Args  Counts  init  Arguments  get  Arg  Types  update  Arg  Types  contains  Generic  Args  get  Return  Type  update  Return  Type  is  Void  Return  get  Arg  Regs  get  All  Arg  Regs  get  This  Arg  skip  First  Argument  get  Type  Parameters  init  Try  Catches  init  Jumps  add  Jump  get  Name  get  Alias  get  Parent  Class  is  No  Code  get  Code  Size  get  Instructions  unload  Insn  Arr  init  Basic  Blocks  finish  Basic  Blocks  get  Basic  Blocks  get  Enter  Block  set  Enter  Block  get  Exit  Blocks  add  Exit  Block  register  Loop  get  Loop  For  Block  get  All  Loops  For  Block  get  Loops  Count  get  Loops  add  Exception  Handler  clear  Exception  Handlers  get  Exception  Handlers  is  No  Exception  Handlers  get  Exception  Handlers  Count  get  Throws  is  Args  Overloaded  is  Constructor  is  Default  Constructor  is  Virtual  get  Regs  Count  get  Debug  Info  Offset  make  New  S  Var  get  Next  S  Var  Version  remove  S  Var  get  S  Vars  get  Access  Flags  set  Access  Flags  get  Region  set  Region  dex  root  type  Name  get  Method  Info  get  Method  Code  Offset  count  Insns  is  Var  Arg  is  Loaded  hash  Code  equals  to  String,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Method  Arguments  add  Instructions  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,1,0
292,add  Override  Annotation,Code  Writer  Method  Node,void,,get  start  Line  add  iterator  get  Override  List  has  Next  next  add  get  Alias  Full  Name  get  Decl  Class  get  Method  Info  has  Next  add,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Method  Arguments  add  Instructions  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
293,add  Override  Annotation,Code  Writer  Method  Node,void,,get  start  Line  add  iterator  get  Override  List  has  Next  next  add  get  Alias  Full  Name  get  Decl  Class  get  Method  Info  has  Next  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Method  Arguments  add  Instructions  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,1,0
294,add  Instructions,Code  Writer,void,,is  Fallback  Mode  get  Args  root  add  Fallback  Method  Code  is  Fallback  Mode  dump  Instructions  add  Region  Insns,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
295,add  Instructions,Code  Writer,void,,is  Fallback  Mode  get  Args  root  add  Fallback  Method  Code  is  Fallback  Mode  dump  Instructions  add  Region  Insns,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Region  Insns  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,1,0
296,add  Region  Insns,Code  Writer,void,,make  Region  get  Region  add  Error  insert  Decompilation  Problems  dump  Instructions  contains  get  Top  Parent  Class  get  Parent  Class  add  Error  insert  Decompilation  Problems  dump  Instructions,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Instructions  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
297,add  Region  Insns,Code  Writer,void,,make  Region  get  Region  add  Error  insert  Decompilation  Problems  dump  Instructions  contains  get  Top  Parent  Class  get  Parent  Class  add  Error  insert  Decompilation  Problems  dump  Instructions,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Instructions  dump  Instructions  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,1,0
298,dump  Instructions,Code  Writer,void,,start  Line  add  Fallback  Method  Code  start  Line  add  add  add  add  add  add  add  add  start  Line  get  Alias  Full  Name  get  Class  Info  get  Parent  Class  get  Alias  list  To  String  get  Arguments  Types  get  Method  Info  to  String  get  Return  Type  get  Method  Info,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Instructions  add  Region  Insns  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
299,dump  Instructions,Code  Writer,void,,start  Line  add  Fallback  Method  Code  start  Line  add  add  add  add  add  add  add  add  start  Line  get  Alias  Full  Name  get  Class  Info  get  Parent  Class  get  Alias  list  To  String  get  Arguments  Types  get  Method  Info  to  String  get  Return  Type  get  Method  Info,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Method  Gen,log  mth  class  Gen  annotation  Gen  name  Gen  Fallback  Option,Method  Gen  get  Class  Gen  get  Name  Gen  get  Method  Node  add  Definition  add  Override  Annotation  add  Method  Arguments  add  Instructions  add  Region  Insns  add  Fallback  Method  Code  add  Fallback  Insns  is  Comment  Escape  Needed  need  Label  get  Fallback  Method  Gen  get  Label  Name,1,0
300,declare  Vars,Code  Writer  I  Container,void,,get  get  Vars  start  Line  declare  Var  add,Region  Gen,log,Region  Gen  make  Region  make  Simple  Region  make  Region  Indent  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
301,declare  Vars,Code  Writer  I  Container,void,,get  get  Vars  start  Line  declare  Var  add,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Region  Gen,log,Region  Gen  make  Region  make  Simple  Region  make  Region  Indent  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,1,0
302,make  Region  Indent,Code  Writer  I  Container,void,,inc  Indent  make  Region  dec  Indent,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
303,make  Region  Indent,Code  Writer  I  Container,void,,inc  Indent  make  Region  dec  Indent,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,1,0
304,make  Simple  Block,I  Block  Code  Writer,void,,contains  get  Instructions  contains  make  Insn  get  make  Insn  get  Return  Insn,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Region  Indent  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
305,make  Simple  Block,I  Block  Code  Writer,void,,contains  get  Instructions  contains  make  Insn  get  make  Insn  get  Return  Insn,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Region  Indent  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,1,0
306,make  Synchronized  Region,Code  Writer  Region  Gen,void,,start  Line  add  Arg  get  Arg  get  Enter  Insn  add  make  Region  Indent  get  Region  start  Line,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Region  Indent  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,0,0
307,make  Synchronized  Region,Code  Writer  Region  Gen,void,,start  Line  add  Arg  get  Arg  get  Enter  Insn  add  make  Region  Indent  get  Region  start  Line,Code  Writer,log  nl  indent  str  add  line  numbers  indent  cache  buf  code  indent  Str  indent  line  offset  annotations  line  Map  Definition  Wrapper  node,Code  Writer  start  Line  start  Line  start  Line  start  Line  With  Num  add  Multi  Line  add  add  add  new  Line  add  Indent  add  Line  add  Line  Indent  update  Indent  inc  Indent  dec  Indent  inc  Indent  dec  Indent  get  Indent  set  Indent  get  Line  add  Simple  Value  Definition  Wrapper  get  Node  attach  Definition  attach  Annotation  attach  Line  Annotation  attach  Annotation  attach  Source  Line  attach  Source  Line  finish  remove  First  Empty  Line  process  Definition  Annotations  buf  Length  get  Code  Str  to  String,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Region  Indent  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,1,0
308,make  Synchronized  Region,Code  Writer  Region  Gen,void,,start  Line  add  Arg  get  Arg  get  Enter  Insn  add  make  Region  Indent  get  Region  start  Line,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Region  Indent  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,Synchronized  Region,enter  Insn  exit  Insns  region,Synchronized  Region  get  Enter  Insn  get  Exit  Insns  get  Region  get  Sub  Blocks  base  String  to  String,0,0
309,make  Synchronized  Region,Code  Writer  Region  Gen,void,,start  Line  add  Arg  get  Arg  get  Enter  Insn  add  make  Region  Indent  get  Region  start  Line,Synchronized  Region,enter  Insn  exit  Insns  region,Synchronized  Region  get  Enter  Insn  get  Exit  Insns  get  Region  get  Sub  Blocks  base  String  to  String,Region  Gen,log,Region  Gen  make  Region  declare  Vars  make  Simple  Region  make  Region  Indent  make  Simple  Block  make  If  connect  Else  If  make  Loop  make  Switch  add  Case  Key  make  Try  Catch  make  Catch  Block,1,1
310,is  Wrap  Needed,Condition  Gen,boolean,,is  Compare  contains  get  Mode,Condition  Gen,Cond  Stack  stack,get  Stack  push  pop  Condition  Gen  add  wrap  add  wrap  wrap  add  Compare  add  Ternary  add  Not  add  And  Or  is  Arg  Wrap  Needed,If  Condition,Mode  mode  args  compare,If  Condition  If  Condition  If  Condition  from  If  Block  from  If  Node  ternary  merge  get  Mode  get  Args  first  second  third  add  Arg  is  Compare  get  Compare  invert  not  simplify  simplify  Cmp  Op  get  Register  Args  to  String  equals  hash  Code,0,0
311,is  Wrap  Needed,Condition  Gen,boolean,,is  Compare  contains  get  Mode,If  Condition,Mode  mode  args  compare,If  Condition  If  Condition  If  Condition  from  If  Block  from  If  Node  ternary  merge  get  Mode  get  Args  first  second  third  add  Arg  is  Compare  get  Compare  invert  not  simplify  simplify  Cmp  Op  get  Register  Args  to  String  equals  hash  Code,Condition  Gen,Cond  Stack  stack,get  Stack  push  pop  Condition  Gen  add  wrap  add  wrap  wrap  add  Compare  add  Ternary  add  Not  add  And  Or  is  Arg  Wrap  Needed,1,1
312,get  Param  Name,Class  Node  String,String,,search  Method  By  Short  Name  get  Alias,Annotation  Gen,cls  class  Gen,Annotation  Gen  add  For  Class  add  For  Method  add  For  Field  add  For  Parameter  add  format  Annotation  add  Throws  get  Annotation  Default  Value  encode  Value  get  String  Utils,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,0,0
313,get  Param  Name,Class  Node  String,String,,search  Method  By  Short  Name  get  Alias,Class  Node,log  dex  cls  Def  Offset  cls  Info  access  Flags  super  Class  interfaces  generics  methods  fields  inner  Classes  inlined  Classes  smali  parent  Class  state  dependencies  mth  Info  Map,Class  Node  init  Access  Flags  Class  Node  load  Annotations  load  Static  Values  parse  Class  Signature  validate  Super  Cls  set  Fields  Types  From  Signature  add  Source  Filename  Attr  ensure  Processed  decompile  get  Code  reload  Code  decompile  load  unload  build  Cache  get  Super  Class  get  Interfaces  get  Generic  Type  Parameters  get  Methods  get  Fields  get  Const  Field  get  Const  Field  search  Field  By  Id  search  Field  search  Field  By  Name  And  Type  search  Field  By  Name  search  Method  search  Method  By  Short  Id  search  Method  By  Short  Name  search  Method  By  Id  get  Parent  Class  get  Top  Parent  Class  has  Not  Generated  Parent  get  Inner  Classes  get  Inner  And  Inlined  Classes  Recursive  add  Inner  Class  add  Inlined  Class  is  Enum  is  Anonymous  get  Class  Init  Mth  get  Default  Constructor  get  Access  Flags  set  Access  Flags  dex  root  type  Name  get  Raw  Name  get  Class  Info  get  Short  Name  get  Full  Name  get  Package  get  Smali  get  Smali  get  State  set  State  get  Dependencies  set  Dependencies  hash  Code  equals  to  String,Annotation  Gen,cls  class  Gen,Annotation  Gen  add  For  Class  add  For  Method  add  For  Field  add  For  Parameter  add  format  Annotation  add  Throws  get  Annotation  Default  Value  encode  Value  get  String  Utils,1,0
