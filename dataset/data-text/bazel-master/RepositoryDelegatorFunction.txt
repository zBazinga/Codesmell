Class:RepositoryDelegatorFunction
Field:REPOSITORY_OVERRIDES
MethodInvocation:create
Field:DEPENDENCY_FOR_UNCONDITIONAL_FETCHING
MethodInvocation:create
Field:DEPENDENCY_FOR_UNCONDITIONAL_CONFIGURING
MethodInvocation:create
Field:RESOLVED_FILE_FOR_VERIFICATION
MethodInvocation:create
Field:OUTPUT_VERIFICATION_REPOSITORY_RULES
MethodInvocation:create
Field:RESOLVED_FILE_INSTEAD_OF_WORKSPACE
MethodInvocation:create
Field:DONT_FETCH_UNCONDITIONALLY
Field:MARKER_FILE_VERSION
Field:handlers
Field:skylarkHandler
Field:isFetch
Field:directories
Field:managedDirectoriesKnowledge
Field:clientEnvironmentSupplier
Method-name:RepositoryDelegatorFunction
Method-returnType:null
Method-parameters:[ImmutableMap<String,RepositoryFunction> handlers, @Nullable RepositoryFunction skylarkHandler, AtomicBoolean isFetch, Supplier<Map<String,String>> clientEnvironmentSupplier, BlazeDirectories directories, ManagedDirectoriesKnowledge managedDirectoriesKnowledge]
FieldAccess:handlers
FieldAccess:skylarkHandler
FieldAccess:isFetch
FieldAccess:clientEnvironmentSupplier
FieldAccess:directories
FieldAccess:managedDirectoriesKnowledge
Method-name:getRepository
Method-returnType:Rule
Method-parameters:[RepositoryName repositoryName, Environment env]
MethodInvocation:getRuleByName
MethodInvocation:strippedName
Method-name:escape
Method-returnType:String
Method-parameters:[String str]
MethodInvocation:replace
MethodInvocation:replace
MethodInvocation:replace
Method-name:unescape
Method-returnType:String
Method-parameters:[String str]
MethodInvocation:equals
MethodInvocation:length
MethodInvocation:charAt
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:toString
Method-name:setupRepositoryRoot
Method-returnType:void
Method-parameters:[Path repoRoot]
MethodInvocation:deleteTree
MethodInvocation:createDirectoryAndParents
MethodInvocation:checkNotNull
MethodInvocation:getParentDirectory
Method-name:compute
Method-returnType:SkyValue
Method-parameters:[SkyKey skyKey, Environment env]
MethodInvocation:argument
MethodInvocation:get
MethodInvocation:equals
MethodInvocation:get
MethodInvocation:getRelative
MethodInvocation:getExternalRepositoryDirectory
MethodInvocation:strippedName
MethodInvocation:containsKey
MethodInvocation:checkNotNull
MethodInvocation:clearMarkerFile
MethodInvocation:setupOverride
MethodInvocation:get
MethodInvocation:strippedName
MethodInvocation:getRepository
MethodInvocation:getHandler
MethodInvocation:isConfigure
MethodInvocation:equals
MethodInvocation:get
MethodInvocation:valuesMissing
MethodInvocation:getManagedDirectories
MethodInvocation:get
MethodInvocation:isLocal
MethodInvocation:managedDirectoriesExist
MethodInvocation:getWorkspace
MethodInvocation:exists
MethodInvocation:areRepositoryAndMarkerFileConsistent
MethodInvocation:valuesMissing
MethodInvocation:getRepositoryDirectory
MethodInvocation:valuesMissing
MethodInvocation:build
MethodInvocation:setManagedDirectories
MethodInvocation:setDigest
MethodInvocation:setPath
MethodInvocation:builder
MethodInvocation:get
MethodInvocation:fetchRepository
MethodInvocation:getMarkerData
MethodInvocation:writeMarkerFile
MethodInvocation:build
MethodInvocation:setManagedDirectories
MethodInvocation:setDigest
MethodInvocation:exists
MethodInvocation:getRepositoryDirectory
MethodInvocation:valuesMissing
MethodInvocation:handle
MethodInvocation:getListener
MethodInvocation:warn
MethodInvocation:getLocation
MethodInvocation:format
MethodInvocation:getName
MethodInvocation:build
MethodInvocation:setManagedDirectories
MethodInvocation:setFetchingDelayed
MethodInvocation:setPath
MethodInvocation:builder
Method-name:getHandler
Method-returnType:RepositoryFunction
Method-parameters:[Rule rule]
MethodInvocation:isSkylark
MethodInvocation:getRuleClassObject
MethodInvocation:get
MethodInvocation:getRuleClass
MethodInvocation:setClientEnvironment
MethodInvocation:get
Method-name:fetchRepository
Method-returnType:RepositoryDirectoryValue.Builder
Method-parameters:[SkyKey skyKey, Path repoRoot, Environment env, Map<String,String> markerData, RepositoryFunction handler, Rule rule]
MethodInvocation:setupRepositoryRoot
MethodInvocation:getName
MethodInvocation:argument
MethodInvocation:post
MethodInvocation:getListener
MethodInvocation:fetch
MethodInvocation:post
MethodInvocation:getListener
MethodInvocation:post
MethodInvocation:getListener
MethodInvocation:getMessage
MethodInvocation:valuesMissing
MethodInvocation:post
MethodInvocation:getListener
MethodInvocation:post
MethodInvocation:getListener
MethodInvocation:checkNotNull
Method-name:extractTag
Method-returnType:String
Method-parameters:[SkyKey skyKey]
Method-name:setupOverride
Method-returnType:RepositoryDirectoryValue
Method-parameters:[PathFragment sourcePath, Environment env, Path repoRoot, String pathAttr]
MethodInvocation:setupRepositoryRoot
MethodInvocation:symlink
MethodInvocation:build
MethodInvocation:setDigest
Class:DigestWriter
Field:MANAGED_DIRECTORIES_MARKER
Field:markerPath
Field:rule
Field:markerData
Field:ruleKey
Method-name:DigestWriter
Method-returnType:null
Method-parameters:[BlazeDirectories directories, RepositoryName repositoryName, Rule rule, ImmutableSet<PathFragment> managedDirectories]
MethodInvocation:computeRuleKey
MethodInvocation:getMarkerPath
MethodInvocation:strippedName
FieldAccess:rule
MethodInvocation:newHashMap
MethodInvocation:sortedCopy
MethodInvocation:natural
MethodInvocation:collect
MethodInvocation:map
MethodInvocation:stream
MethodInvocation:joining
MethodInvocation:put
Method-name:getMarkerPath
Method-returnType:Path
Method-parameters:[BlazeDirectories directories, String ruleName]
MethodInvocation:getChild
MethodInvocation:getExternalRepositoryDirectory
Method-name:clearMarkerFile
Method-returnType:void
Method-parameters:[BlazeDirectories directories, RepositoryName repoName]
MethodInvocation:delete
MethodInvocation:getMarkerPath
MethodInvocation:strippedName
Method-name:writeMarkerFile
Method-returnType:byte[]
Method-parameters:[]
MethodInvocation:append
MethodInvocation:append
MethodInvocation:entrySet
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:escape
MethodInvocation:escape
MethodInvocation:toString
MethodInvocation:writeContent
MethodInvocation:digestAndReset
MethodInvocation:addString
Method-name:areRepositoryAndMarkerFileConsistent
Method-returnType:byte[]
Method-parameters:[RepositoryFunction handler, Environment env]
MethodInvocation:exists
MethodInvocation:readContent
MethodInvocation:readMarkerFile
MethodInvocation:equals
MethodInvocation:checkNotNull
MethodInvocation:equals
MethodInvocation:get
MethodInvocation:get
FieldAccess:markerData
MethodInvocation:verifyMarkerData
MethodInvocation:valuesMissing
MethodInvocation:digestAndReset
MethodInvocation:addString
MethodInvocation:delete
Method-name:getMarkerData
Method-returnType:Map<String,String>
Method-parameters:[]
Method-name:readMarkerFile
Method-returnType:String
Method-parameters:[String content, Map<String,String> markerData]
MethodInvocation:split
MethodInvocation:indexOf
MethodInvocation:unescape
MethodInvocation:substring
MethodInvocation:unescape
MethodInvocation:substring
MethodInvocation:put
Method-name:computeRuleKey
Method-returnType:String
Method-parameters:[Rule rule]
MethodInvocation:hexDigestAndReset
MethodInvocation:addInt
MethodInvocation:addBytes
MethodInvocation:toByteArray
MethodInvocation:build
MethodInvocation:serializeRule
Class:RepositoryFetching
Field:id
Field:finished
Field:message
Method-name:RepositoryFetching
Method-returnType:null
Method-parameters:[String name, boolean finished]
FieldAccess:id
FieldAccess:finished
FieldAccess:message
Method-name:RepositoryFetching
Method-returnType:null
Method-parameters:[String name, boolean finished, String message]
FieldAccess:id
FieldAccess:finished
FieldAccess:message
Method-name:getResourceIdentifier
Method-returnType:String
Method-parameters:[]
Method-name:getProgress
Method-returnType:String
Method-parameters:[]
Method-name:isFinished
Method-returnType:boolean
Method-parameters:[]
