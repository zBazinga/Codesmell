Class:Package
Field:packageIdentifier
Field:filename
Field:packageDirectory
Field:workspaceName
Field:sourceRoot
Field:makeEnv
Field:targets
Field:defaultVisibility
Field:defaultVisibilitySet
Field:defaultTestOnly
Field:defaultDeprecation
Field:defaultHdrsCheck
Field:defaultCopts
Field:buildFile
Field:containsErrors
Field:skylarkFileDependencies
Field:defaultApplicableLicenses
MethodInvocation:of
Field:defaultLicense
Field:defaultDistributionSet
Field:externalPackageRepositoryMappings
Field:repositoryMapping
Field:defaultCompatibleWith
MethodInvocation:of
Field:defaultRestrictedTo
MethodInvocation:of
Field:features
Field:events
Field:posts
Field:registeredExecutionPlatforms
Field:registeredToolchains
Field:computationSteps
Method-name:Package
Method-returnType:null
Method-parameters:[PackageIdentifier packageId, String runfilesPrefix]
FieldAccess:packageIdentifier
FieldAccess:workspaceName
Method-name:getSourceRoot
Method-returnType:Root
Method-parameters:[RootedPath buildFileRootedPath, PathFragment packageFragment]
MethodInvocation:getParentDirectory
MethodInvocation:getRootRelativePath
MethodInvocation:equals
MethodInvocation:getRoot
MethodInvocation:getParentDirectory
MethodInvocation:asFragment
MethodInvocation:asPath
MethodInvocation:segmentCount
MethodInvocation:getParentDirectory
MethodInvocation:isEmpty
MethodInvocation:getRoot
MethodInvocation:fromPath
MethodInvocation:getRelative
MethodInvocation:getRoot
Method-name:getTargets
Method-returnType:Set<Target>
Method-parameters:[BiMap<String,Target> targetMap]
MethodInvocation:values
Method-name:getTargets
Method-returnType:Iterable<T>
Method-parameters:[Map<String,Target> targetMap, Class<T> targetClass]
MethodInvocation:filter
MethodInvocation:values
Method-name:newExternalPackageBuilder
Method-returnType:Builder
Method-parameters:[Builder.Helper helper, RootedPath workspacePath, String runfilesPrefix, StarlarkSemantics starlarkSemantics]
MethodInvocation:setFilename
Method-name:getOrderedRuleList
Method-returnType:Iterable<Rule>
Method-parameters:[CompileOneDependencyTransformer compileOneDependencyTransformer]
MethodInvocation:newArrayList
MethodInvocation:getTargets
MethodInvocation:add
MethodInvocation:sort
MethodInvocation:comparing
MethodInvocation:getLocation
Method-name:getComputationSteps
Method-returnType:long
Method-parameters:[]
Method-name:getPackageIdentifier
Method-returnType:PackageIdentifier
Method-parameters:[]
Method-name:getRepositoryMapping
Method-returnType:ImmutableMap<RepositoryName,RepositoryName>
Method-parameters:[RepositoryName repository]
MethodInvocation:equals
MethodInvocation:getOrDefault
MethodInvocation:getOrDefault
MethodInvocation:of
MethodInvocation:getOrDefault
MethodInvocation:of
Method-name:getRepositoryMapping
Method-returnType:ImmutableMap<RepositoryName,RepositoryName>
Method-parameters:[]
Method-name:getExternalPackageRepositoryMappings
Method-returnType:ImmutableMap<RepositoryName,ImmutableMap<RepositoryName,RepositoryName>>
Method-parameters:[]
MethodInvocation:equals
FieldAccess:externalPackageRepositoryMappings
Method-name:getSourceRoot
Method-returnType:Root
Method-parameters:[]
Method-name:finishInit
Method-returnType:void
Method-parameters:[Builder builder]
MethodInvocation:getTargets
MethodInvocation:setContainsErrors
FieldAccess:filename
MethodInvocation:getFilename
FieldAccess:packageDirectory
MethodInvocation:getParentDirectory
MethodInvocation:asPath
FieldAccess:sourceRoot
MethodInvocation:getSourceRoot
MethodInvocation:getSourceRoot
MethodInvocation:getBaseName
MethodInvocation:getRootRelativePath
MethodInvocation:asPath
MethodInvocation:equals
MethodInvocation:getRelative
MethodInvocation:getSourceRoot
MethodInvocation:equals
MethodInvocation:getPathString
MethodInvocation:equals
MethodInvocation:getPathString
MethodInvocation:getSourceRoot
FieldAccess:makeEnv
MethodInvocation:copyOf
FieldAccess:targets
MethodInvocation:copyOf
FieldAccess:defaultVisibility
FieldAccess:defaultVisibilitySet
FieldAccess:defaultCopts
MethodInvocation:of
FieldAccess:defaultCopts
MethodInvocation:copyOf
FieldAccess:buildFile
FieldAccess:containsErrors
FieldAccess:skylarkFileDependencies
FieldAccess:defaultLicense
FieldAccess:defaultDistributionSet
FieldAccess:features
MethodInvocation:copyOf
FieldAccess:events
MethodInvocation:copyOf
FieldAccess:posts
MethodInvocation:copyOf
FieldAccess:registeredExecutionPlatforms
MethodInvocation:copyOf
FieldAccess:registeredToolchains
MethodInvocation:copyOf
FieldAccess:repositoryMapping
MethodInvocation:checkNotNull
MethodInvocation:builder
MethodInvocation:isEmpty
MethodInvocation:isWorkspace
MethodInvocation:forEach
MethodInvocation:put
MethodInvocation:copyOf
FieldAccess:externalPackageRepositoryMappings
MethodInvocation:build
Method-name:getSkylarkFileDependencies
Method-returnType:ImmutableList<Label>
Method-parameters:[]
Method-name:getFilename
Method-returnType:RootedPath
Method-parameters:[]
Method-name:getPackageDirectory
Method-returnType:Path
Method-parameters:[]
Method-name:getName
Method-returnType:String
Method-parameters:[]
MethodInvocation:getPathString
MethodInvocation:getPackageFragment
Method-name:getNameFragment
Method-returnType:PathFragment
Method-parameters:[]
MethodInvocation:getPackageFragment
Method-name:getMakeEnvironment
Method-returnType:ImmutableMap<String,String>
Method-parameters:[]
Method-name:getBuildFileLabel
Method-returnType:Label
Method-parameters:[]
MethodInvocation:getLabel
Method-name:getBuildFile
Method-returnType:InputFile
Method-parameters:[]
Method-name:containsErrors
Method-returnType:boolean
Method-parameters:[]
Method-name:getPosts
Method-returnType:List<Postable>
Method-parameters:[]
Method-name:getEvents
Method-returnType:List<Event>
Method-parameters:[]
Method-name:getTargets
Method-returnType:ImmutableSortedKeyMap<String,Target>
Method-parameters:[]
Method-name:getTargets
Method-returnType:Iterable<T>
Method-parameters:[Class<T> targetClass]
MethodInvocation:getTargets
Method-name:getRule
Method-returnType:Rule
Method-parameters:[String targetName]
MethodInvocation:get
Method-name:getWorkspaceName
Method-returnType:String
Method-parameters:[]
Method-name:getFeatures
Method-returnType:ImmutableSet<String>
Method-parameters:[]
Method-name:getTarget
Method-returnType:Target
Method-parameters:[String targetName]
MethodInvocation:get
MethodInvocation:getRelative
MethodInvocation:getPackageDirectory
MethodInvocation:isNormalized
MethodInvocation:equals
MethodInvocation:isDirectory
MethodInvocation:getName
MethodInvocation:exists
MethodInvocation:getName
MethodInvocation:didYouMean
MethodInvocation:keySet
MethodInvocation:makeNoSuchTargetException
Method-name:makeNoSuchTargetException
Method-returnType:NoSuchTargetException
Method-parameters:[String targetName, String suffix]
MethodInvocation:create
MethodInvocation:format
MethodInvocation:getName
MethodInvocation:getPathString
MethodInvocation:asPath
Method-name:getDefaultVisibility
Method-returnType:RuleVisibility
Method-parameters:[]
Method-name:getDefaultTestOnly
Method-returnType:Boolean
Method-parameters:[]
Method-name:setDefaultTestOnly
Method-returnType:void
Method-parameters:[boolean testOnly]
Method-name:getDefaultDeprecation
Method-returnType:String
Method-parameters:[]
Method-name:setDefaultDeprecation
Method-returnType:void
Method-parameters:[String deprecation]
Method-name:getDefaultHdrsCheck
Method-returnType:String
Method-parameters:[]
Method-name:setDefaultHdrsCheck
Method-returnType:void
Method-parameters:[String defaultHdrsCheck]
FieldAccess:defaultHdrsCheck
Method-name:getDefaultCopts
Method-returnType:ImmutableList<String>
Method-parameters:[]
Method-name:isDefaultHdrsCheckSet
Method-returnType:boolean
Method-parameters:[]
Method-name:isDefaultVisibilitySet
Method-returnType:boolean
Method-parameters:[]
Method-name:getDefaultApplicableLicenses
Method-returnType:Set<Label>
Method-parameters:[]
Method-name:setDefaultApplicableLicenses
Method-returnType:void
Method-parameters:[Set<Label> licenses]
Method-name:getDefaultLicense
Method-returnType:License
Method-parameters:[]
Method-name:getDefaultDistribs
Method-returnType:Set<License.DistributionType>
Method-parameters:[]
Method-name:getDefaultCompatibleWith
Method-returnType:Set<Label>
Method-parameters:[]
Method-name:setDefaultCompatibleWith
Method-returnType:void
Method-parameters:[Set<Label> environments]
Method-name:getDefaultRestrictedTo
Method-returnType:Set<Label>
Method-parameters:[]
Method-name:setDefaultRestrictedTo
Method-returnType:void
Method-parameters:[Set<Label> environments]
Method-name:getRegisteredExecutionPlatforms
Method-returnType:ImmutableList<String>
Method-parameters:[]
Method-name:getRegisteredToolchains
Method-returnType:ImmutableList<String>
Method-parameters:[]
Method-name:toString
Method-returnType:String
Method-parameters:[]
MethodInvocation:getName
MethodInvocation:getTargets
Method-name:dump
Method-returnType:void
Method-parameters:[PrintStream out]
MethodInvocation:println
MethodInvocation:getName
MethodInvocation:asPath
MethodInvocation:getFilename
MethodInvocation:println
MethodInvocation:getTargets
MethodInvocation:println
MethodInvocation:getTargetKind
MethodInvocation:getLabel
MethodInvocation:getAttributes
MethodInvocation:visitAttribute
MethodInvocation:of
MethodInvocation:getName
MethodInvocation:getType
MethodInvocation:println
MethodInvocation:getName
MethodInvocation:println
MethodInvocation:getTargets
MethodInvocation:print
MethodInvocation:getTargetKind
MethodInvocation:getLabel
MethodInvocation:println
MethodInvocation:getLabel
MethodInvocation:getGeneratingRule
MethodInvocation:println
Class:NameConflictException
Method-name:NameConflictException
Method-returnType:null
Method-parameters:[String message]
Class:Builder
Field:externalPackageRepositoryMappings
Field:pkg
Field:starlarkSemantics
Field:callStackBuilder
Field:environmentGroups
Field:registeredExecutionPlatforms
Field:registeredToolchains
Field:listInterner
Field:generatorNameByLocation
Field:repositoryMapping
MethodInvocation:of
Field:filename
Field:buildFileLabel
Field:buildFile
Field:makeEnv
Field:defaultVisibility
Field:defaultVisibilitySet
Field:defaultCopts
Field:features
Field:events
MethodInvocation:newArrayList
Field:posts
MethodInvocation:newArrayList
Field:ioExceptionMessage
Field:ioException
Field:containsErrors
Field:defaultApplicableLicenses
MethodInvocation:of
Field:defaultLicense
Field:defaultDistributionSet
Field:targets
MethodInvocation:create
Field:skylarkFileDependencies
MethodInvocation:of
Field:thirdPartyLicenceExistencePolicy
Field:packageFunctionUsed
Field:outputFilePrefixes
Field:alreadyBuilt
Field:builderEventHandler
Method-name:handle
Method-returnType:void
Method-parameters:[Event event]
MethodInvocation:addEvent
Method-name:Builder
Method-returnType:null
Method-parameters:[Package pkg, StarlarkSemantics starlarkSemantics]
FieldAccess:starlarkSemantics
FieldAccess:pkg
MethodInvocation:startsWith
MethodInvocation:getName
MethodInvocation:setDefaultTestonly
Method-name:Builder
Method-returnType:null
Method-parameters:[Helper helper, PackageIdentifier id, String runfilesPrefix, StarlarkSemantics starlarkSemantics]
MethodInvocation:createFreshPackage
Method-name:checkForDuplicateLabels
Method-returnType:boolean
Method-parameters:[Collection<Label> labels, String owner, String attrName, Location location, EventHandler eventHandler]
MethodInvocation:duplicatedElementsOf
MethodInvocation:handle
MethodInvocation:error
MethodInvocation:format
MethodInvocation:isEmpty
Method-name:conflictingOutputFile
Method-returnType:NameConflictException
Method-parameters:[OutputFile added, OutputFile existing]
MethodInvocation:getGeneratingRule
MethodInvocation:getGeneratingRule
MethodInvocation:format
MethodInvocation:getName
MethodInvocation:getGeneratingRule
MethodInvocation:getName
MethodInvocation:getName
MethodInvocation:format
MethodInvocation:getName
MethodInvocation:getName
MethodInvocation:getGeneratingRule
MethodInvocation:getName
MethodInvocation:getName
MethodInvocation:getGeneratingRule
Method-name:conflictsWith
Method-returnType:String
Method-parameters:[Target target]
MethodInvocation:getName
MethodInvocation:getGeneratingRule
MethodInvocation:getTargetKind
MethodInvocation:getLocation
Method-name:getGeneratorNameByLocation
Method-returnType:Map<Location,String>
Method-parameters:[]
Method-name:getPackageIdentifier
Method-returnType:PackageIdentifier
Method-parameters:[]
MethodInvocation:getPackageIdentifier
Method-name:isWorkspace
Method-returnType:boolean
Method-parameters:[]
MethodInvocation:equals
MethodInvocation:getPackageIdentifier
Method-name:getPackageWorkspaceName
Method-returnType:String
Method-parameters:[]
MethodInvocation:getWorkspaceName
Method-name:addRepositoryMappingEntry
Method-returnType:Builder
Method-parameters:[RepositoryName repoWithin, RepositoryName localName, RepositoryName mappedName]
MethodInvocation:computeIfAbsent
MethodInvocation:put
Method-name:addRepositoryMappings
Method-returnType:Builder
Method-parameters:[Package aPackage]
MethodInvocation:entrySet
MethodInvocation:entrySet
MethodInvocation:getValue
MethodInvocation:addRepositoryMappingEntry
MethodInvocation:getKey
MethodInvocation:getKey
MethodInvocation:getValue
Method-name:getRepositoryMapping
Method-returnType:ImmutableMap<RepositoryName,RepositoryName>
Method-parameters:[]
FieldAccess:repositoryMapping
Method-name:setRepositoryMapping
Method-returnType:Builder
Method-parameters:[ImmutableMap<RepositoryName,RepositoryName> repositoryMapping]
FieldAccess:repositoryMapping
MethodInvocation:checkNotNull
Method-name:getListInterner
Method-returnType:Interner<ImmutableList<?>>
Method-parameters:[]
Method-name:getBuildFileLabel
Method-returnType:Label
Method-parameters:[]
Method-name:getRepositoryMappingFor
Method-returnType:ImmutableMap<RepositoryName,RepositoryName>
Method-parameters:[RepositoryName name]
MethodInvocation:get
MethodInvocation:of
MethodInvocation:copyOf
Method-name:getFilename
Method-returnType:RootedPath
Method-parameters:[]
Method-name:setFilename
Method-returnType:Builder
Method-parameters:[RootedPath filename]
FieldAccess:filename
MethodInvocation:createLabel
MethodInvocation:getBaseName
MethodInvocation:getRootRelativePath
MethodInvocation:addInputFile
MethodInvocation:fromFile
MethodInvocation:toString
MethodInvocation:asPath
Method-name:getPosts
Method-returnType:List<Postable>
Method-parameters:[]
Method-name:getEvents
Method-returnType:List<Event>
Method-parameters:[]
Method-name:setMakeVariable
Method-returnType:Builder
Method-parameters:[String name, String value]
MethodInvocation:put
FieldAccess:makeEnv
Method-name:setDefaultVisibility
Method-returnType:Builder
Method-parameters:[RuleVisibility visibility]
FieldAccess:defaultVisibility
FieldAccess:defaultVisibilitySet
Method-name:setDefaultVisibilitySet
Method-returnType:Builder
Method-parameters:[boolean defaultVisibilitySet]
FieldAccess:defaultVisibilitySet
Method-name:setDefaultTestonly
Method-returnType:Builder
Method-parameters:[boolean defaultTestonly]
MethodInvocation:setDefaultTestOnly
Method-name:setDefaultDeprecation
Method-returnType:Builder
Method-parameters:[String defaultDeprecation]
MethodInvocation:setDefaultDeprecation
Method-name:setWorkspaceName
Method-returnType:Builder
Method-parameters:[String workspaceName]
Method-name:setThirdPartyLicenceExistencePolicy
Method-returnType:Builder
Method-parameters:[ThirdPartyLicenseExistencePolicy policy]
FieldAccess:thirdPartyLicenceExistencePolicy
Method-name:getThirdPartyLicenseExistencePolicy
Method-returnType:ThirdPartyLicenseExistencePolicy
Method-parameters:[]
Method-name:isPackageFunctionUsed
Method-returnType:boolean
Method-parameters:[]
Method-name:setPackageFunctionUsed
Method-returnType:void
Method-parameters:[]
Method-name:setComputationSteps
Method-returnType:void
Method-parameters:[long n]
Method-name:setDefaultHdrsCheck
Method-returnType:Builder
Method-parameters:[String hdrsCheck]
MethodInvocation:setDefaultHdrsCheck
Method-name:setDefaultCopts
Method-returnType:Builder
Method-parameters:[List<String> defaultCopts]
FieldAccess:defaultCopts
Method-name:addFeatures
Method-returnType:Builder
Method-parameters:[Iterable<String> features]
MethodInvocation:addAll
FieldAccess:features
Method-name:setIOExceptionAndMessage
Method-returnType:Builder
Method-parameters:[IOException e, String message]
FieldAccess:ioException
FieldAccess:ioExceptionMessage
MethodInvocation:setContainsErrors
Method-name:setContainsErrors
Method-returnType:Builder
Method-parameters:[]
Method-name:containsErrors
Method-returnType:boolean
Method-parameters:[]
Method-name:addPosts
Method-returnType:Builder
Method-parameters:[Iterable<Postable> posts]
MethodInvocation:add
FieldAccess:posts
Method-name:addEvents
Method-returnType:Builder
Method-parameters:[Iterable<Event> events]
MethodInvocation:addEvent
Method-name:addEvent
Method-returnType:Builder
Method-parameters:[Event event]
MethodInvocation:add
FieldAccess:events
Method-name:setSkylarkFileDependencies
Method-returnType:Builder
Method-parameters:[ImmutableList<Label> skylarkFileDependencies]
FieldAccess:skylarkFileDependencies
Method-name:setDefaultApplicableLicenses
Method-returnType:void
Method-parameters:[List<Label> licenses, String attrName, Location location]
MethodInvocation:checkForDuplicateLabels
MethodInvocation:getName
MethodInvocation:setContainsErrors
MethodInvocation:setDefaultApplicableLicenses
MethodInvocation:copyOf
Method-name:getDefaultApplicableLicenses
Method-returnType:ImmutableList<Label>
Method-parameters:[]
Method-name:getDefaultLicense
Method-returnType:License
Method-parameters:[]
Method-name:setDefaultLicense
Method-returnType:void
Method-parameters:[License license]
FieldAccess:defaultLicense
Method-name:getDefaultDistribs
Method-returnType:Set<DistributionType>
Method-parameters:[]
Method-name:setDefaultDistribs
Method-returnType:void
Method-parameters:[Set<DistributionType> dists]
FieldAccess:defaultDistributionSet
Method-name:setDefaultCompatibleWith
Method-returnType:void
Method-parameters:[List<Label> environments, String attrName, Location location]
MethodInvocation:checkForDuplicateLabels
MethodInvocation:getName
MethodInvocation:setContainsErrors
MethodInvocation:setDefaultCompatibleWith
MethodInvocation:copyOf
Method-name:setDefaultRestrictedTo
Method-returnType:void
Method-parameters:[List<Label> environments, String attrName, Location location]
MethodInvocation:checkForDuplicateLabels
MethodInvocation:getName
MethodInvocation:setContainsErrors
MethodInvocation:setDefaultRestrictedTo
MethodInvocation:copyOf
Method-name:createRule
Method-returnType:Rule
Method-parameters:[Label label, RuleClass ruleClass, Location location, List<StarlarkThread.CallStackEntry> callstack, AttributeContainer attributeContainer]
MethodInvocation:of
Method-name:createRule
Method-returnType:Rule
Method-parameters:[Label label, RuleClass ruleClass, Location location, List<StarlarkThread.CallStackEntry> callstack, AttributeContainer attributeContainer, ImplicitOutputsFunction implicitOutputsFunction]
MethodInvocation:of
Method-name:getTarget
Method-returnType:Target
Method-parameters:[String name]
MethodInvocation:get
Method-name:removeTarget
Method-returnType:void
Method-parameters:[Target target]
MethodInvocation:getPackage
MethodInvocation:remove
FieldAccess:targets
MethodInvocation:getName
Method-name:getTargets
Method-returnType:Set<Target>
Method-parameters:[]
MethodInvocation:getTargets
Method-name:getTargets
Method-returnType:Iterable<T>
Method-parameters:[Class<T> targetClass]
MethodInvocation:getTargets
Method-name:createInputFile
Method-returnType:InputFile
Method-parameters:[String targetName, Location location]
MethodInvocation:get
MethodInvocation:addInputFile
MethodInvocation:createLabel
MethodInvocation:getName
MethodInvocation:getName
MethodInvocation:getTargetKind
Method-name:setVisibilityAndLicense
Method-returnType:void
Method-parameters:[InputFile inputFile, RuleVisibility visibility, License license]
MethodInvocation:getName
MethodInvocation:get
MethodInvocation:getName
MethodInvocation:isVisibilitySpecified
MethodInvocation:getVisibility
MethodInvocation:equals
MethodInvocation:getLicense
MethodInvocation:put
MethodInvocation:getLabel
MethodInvocation:getLocation
Method-name:createLabel
Method-returnType:Label
Method-parameters:[String targetName]
MethodInvocation:create
MethodInvocation:getPackageIdentifier
Method-name:addPackageGroup
Method-returnType:void
Method-parameters:[String name, Collection<String> packages, Collection<Label> includes, EventHandler eventHandler, Location location]
MethodInvocation:createLabel
MethodInvocation:get
MethodInvocation:getName
MethodInvocation:nameConflict
MethodInvocation:put
MethodInvocation:getName
MethodInvocation:containsErrors
MethodInvocation:setContainsErrors
Method-name:addEnvironmentGroup
Method-returnType:void
Method-parameters:[String name, List<Label> environments, List<Label> defaults, EventHandler eventHandler, Location location]
MethodInvocation:checkForDuplicateLabels
MethodInvocation:checkForDuplicateLabels
MethodInvocation:setContainsErrors
MethodInvocation:createLabel
MethodInvocation:get
MethodInvocation:getName
MethodInvocation:nameConflict
MethodInvocation:put
MethodInvocation:getName
MethodInvocation:validateMembership
MethodInvocation:isEmpty
MethodInvocation:handle
MethodInvocation:setContainsErrors
MethodInvocation:getEnvironments
MethodInvocation:get
MethodInvocation:handle
MethodInvocation:error
MethodInvocation:getLabel
MethodInvocation:getLabel
MethodInvocation:setContainsErrors
MethodInvocation:put
Method-name:addRuleUnchecked
Method-returnType:void
Method-parameters:[Rule rule]
MethodInvocation:checkArgument
MethodInvocation:getPackage
MethodInvocation:getOutputFiles
MethodInvocation:put
MethodInvocation:getName
MethodInvocation:create
MethodInvocation:getName
MethodInvocation:segmentCount
MethodInvocation:toString
MethodInvocation:subFragment
MethodInvocation:putIfAbsent
MethodInvocation:put
MethodInvocation:getName
MethodInvocation:containsErrors
MethodInvocation:setContainsErrors
Method-name:addRule
Method-returnType:void
Method-parameters:[Rule rule]
MethodInvocation:checkForConflicts
MethodInvocation:addRuleUnchecked
Method-name:addRegisteredExecutionPlatforms
Method-returnType:void
Method-parameters:[List<String> platforms]
MethodInvocation:addAll
FieldAccess:registeredExecutionPlatforms
Method-name:addRegisteredToolchains
Method-returnType:void
Method-parameters:[List<String> toolchains]
MethodInvocation:addAll
FieldAccess:registeredToolchains
Method-name:beforeBuild
Method-returnType:Builder
Method-parameters:[boolean discoverAssumedInputFiles]
MethodInvocation:checkNotNull
MethodInvocation:checkNotNull
MethodInvocation:checkNotNull
MethodInvocation:checkNotNull
MethodInvocation:getPackageIdentifier
MethodInvocation:checkNotNull
MethodInvocation:get
MethodInvocation:getName
MethodInvocation:getTargets
MethodInvocation:visitLabels
MethodInvocation:of
MethodInvocation:createInputFileMaybe
MethodInvocation:getLabel
MethodInvocation:getLocation
MethodInvocation:containsKey
MethodInvocation:getLabel
MethodInvocation:put
MethodInvocation:getLabel
MethodInvocation:isTestRule
MethodInvocation:hasManualTag
MethodInvocation:add
MethodInvocation:getLabel
MethodInvocation:of
MethodInvocation:equals
MethodInvocation:getRuleClass
MethodInvocation:isEmpty
MethodInvocation:get
MethodInvocation:add
MethodInvocation:values
MethodInvocation:addInputFile
MethodInvocation:isEmpty
MethodInvocation:sort
MethodInvocation:setAttributeValueByName
Method-name:buildPartial
Method-returnType:Builder
Method-parameters:[]
MethodInvocation:beforeBuild
Method-name:finishBuild
Method-returnType:Package
Method-parameters:[]
MethodInvocation:unmodifiableBiMap
MethodInvocation:unmodifiableSet
MethodInvocation:copyOf
MethodInvocation:values
MethodInvocation:processMemberEnvironments
MethodInvocation:isEmpty
MethodInvocation:addEvents
MethodInvocation:setContainsErrors
MethodInvocation:finishInit
Method-name:build
Method-returnType:Package
Method-parameters:[]
MethodInvocation:build
Method-name:build
Method-returnType:Package
Method-parameters:[boolean discoverAssumedInputFiles]
MethodInvocation:beforeBuild
MethodInvocation:finishBuild
Method-name:createInputFileMaybe
Method-returnType:InputFile
Method-parameters:[Label label, Location location]
MethodInvocation:equals
MethodInvocation:getPackageIdentifier
MethodInvocation:getPackageIdentifier
MethodInvocation:containsKey
MethodInvocation:getName
MethodInvocation:incompatibleNoImplicitFileExport
Method-name:addInputFile
Method-returnType:InputFile
Method-parameters:[Label label, Location location]
MethodInvocation:addInputFile
Method-name:addInputFile
Method-returnType:InputFile
Method-parameters:[InputFile inputFile]
MethodInvocation:put
MethodInvocation:getName
MethodInvocation:getLabel
MethodInvocation:checkState
Method-name:checkForConflicts
Method-returnType:void
Method-parameters:[Rule rule]
MethodInvocation:getName
MethodInvocation:get
MethodInvocation:nameConflict
MethodInvocation:getOutputFiles
MethodInvocation:getName
MethodInvocation:put
MethodInvocation:duplicateOutputFile
MethodInvocation:get
MethodInvocation:duplicateOutputFile
MethodInvocation:containsKey
MethodInvocation:conflictingOutputFile
MethodInvocation:get
MethodInvocation:create
MethodInvocation:segmentCount
MethodInvocation:toString
MethodInvocation:subFragment
MethodInvocation:containsKey
MethodInvocation:conflictingOutputFile
MethodInvocation:get
MethodInvocation:containsKey
MethodInvocation:get
MethodInvocation:conflictingOutputFile
MethodInvocation:get
MethodInvocation:putIfAbsent
MethodInvocation:checkForInputOutputConflicts
MethodInvocation:keySet
Method-name:checkForInputOutputConflicts
Method-returnType:void
Method-parameters:[Rule rule, Set<String> outputFiles]
MethodInvocation:getPackageIdentifier
MethodInvocation:getLabel
MethodInvocation:getLabels
MethodInvocation:equals
MethodInvocation:getPackageIdentifier
MethodInvocation:contains
MethodInvocation:getName
MethodInvocation:inputOutputNameConflict
MethodInvocation:getName
Method-name:duplicateOutputFile
Method-returnType:NameConflictException
Method-parameters:[OutputFile duplicate, Target existing]
MethodInvocation:getTargetKind
MethodInvocation:getName
MethodInvocation:getName
MethodInvocation:getGeneratingRule
MethodInvocation:conflictsWith
Method-name:nameConflict
Method-returnType:NameConflictException
Method-parameters:[Target duplicate, Target existing]
MethodInvocation:getTargetKind
MethodInvocation:getName
MethodInvocation:getPackageName
MethodInvocation:getLabel
MethodInvocation:conflictsWith
Method-name:inputOutputNameConflict
Method-returnType:NameConflictException
Method-parameters:[Rule rule, String conflictingName]
MethodInvocation:getName
Method-name:createFreshPackage
Method-returnType:Package
Method-parameters:[PackageIdentifier packageId, String runfilesPrefix]
Method-name:onLoadingCompleteAndSuccessful
Method-returnType:void
Method-parameters:[Package pkg, StarlarkSemantics starlarkSemantics, long loadTimeNanos]
Class:DefaultHelper
Field:INSTANCE
Method-name:DefaultHelper
Method-returnType:null
Method-parameters:[]
Method-name:createFreshPackage
Method-returnType:Package
Method-parameters:[PackageIdentifier packageId, String runfilesPrefix]
Method-name:onLoadingCompleteAndSuccessful
Method-returnType:void
Method-parameters:[Package pkg, StarlarkSemantics starlarkSemantics, long loadTimeNanos]
Class:ThreadCompatibleInterner
Field:interns
Method-name:intern
Method-returnType:T
Method-parameters:[T sample]
MethodInvocation:get
MethodInvocation:put
Class:GeneratedLabelConflict
Method-name:GeneratedLabelConflict
Method-returnType:null
Method-parameters:[String message]
Class:PackageCodec
Method-name:getEncodedClass
Method-returnType:Class<Package>
Method-parameters:[]
Method-name:serialize
Method-returnType:void
Method-parameters:[SerializationContext context, Package input, CodedOutputStream codedOut]
MethodInvocation:checkClassExplicitlyAllowed
MethodInvocation:getDependency
MethodInvocation:serialize
MethodInvocation:getPackageSerializer
Method-name:deserialize
Method-returnType:Package
Method-parameters:[DeserializationContext context, CodedInputStream codedIn]
MethodInvocation:getDependency
MethodInvocation:deserialize
MethodInvocation:getPackageSerializer
