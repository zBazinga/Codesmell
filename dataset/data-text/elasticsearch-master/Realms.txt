Class:Realms
Field:logger
MethodInvocation:getLogger
Field:settings
Field:env
Field:factories
Field:licenseState
Field:threadContext
Field:reservedRealm
Field:realms
Field:standardRealmsOnly
Field:nativeRealmsOnly
Method-name:Realms
Method-returnType:null
Method-parameters:[Settings settings, Environment env, Map<String,Realm.Factory> factories, XPackLicenseState licenseState, ThreadContext threadContext, ReservedRealm reservedRealm]
Method-name:iterator
Method-returnType:Iterator<Realm>
Method-parameters:[]
MethodInvocation:iterator
MethodInvocation:asList
Method-name:getUnlicensedRealms
Method-returnType:List<Realm>
Method-parameters:[]
MethodInvocation:copyCurrentLicenseState
MethodInvocation:isSecurityEnabled
MethodInvocation:unmodifiableList
MethodInvocation:isAllowed
MethodInvocation:emptyList
MethodInvocation:asList
MethodInvocation:equals
FieldAccess:realms
MethodInvocation:emptyList
MethodInvocation:collect
MethodInvocation:filter
MethodInvocation:stream
MethodInvocation:contains
MethodInvocation:toList
MethodInvocation:unmodifiableList
Method-name:stream
Method-returnType:Stream<Realm>
Method-parameters:[]
MethodInvocation:stream
MethodInvocation:spliterator
Method-name:asList
Method-returnType:List<Realm>
Method-parameters:[]
MethodInvocation:copyCurrentLicenseState
MethodInvocation:isSecurityEnabled
MethodInvocation:emptyList
MethodInvocation:isAllowed
MethodInvocation:isAllowed
Method-name:realm
Method-returnType:Realm
Method-parameters:[String name]
MethodInvocation:equals
MethodInvocation:name
Method-name:realmFactory
Method-returnType:Realm.Factory
Method-parameters:[String type]
MethodInvocation:get
Method-name:initRealms
Method-returnType:List<Realm>
Method-parameters:[]
MethodInvocation:getRealmSettings
MethodInvocation:keySet
MethodInvocation:get
MethodInvocation:getType
MethodInvocation:getType
MethodInvocation:enabled
MethodInvocation:isDebugEnabled
MethodInvocation:debug
MethodInvocation:equals
MethodInvocation:getType
MethodInvocation:equals
MethodInvocation:getType
MethodInvocation:contains
MethodInvocation:getType
MethodInvocation:getType
MethodInvocation:getType
MethodInvocation:add
MethodInvocation:getType
MethodInvocation:equals
MethodInvocation:getType
MethodInvocation:add
MethodInvocation:getName
MethodInvocation:size
MethodInvocation:toString
MethodInvocation:getType
MethodInvocation:getType
MethodInvocation:create
MethodInvocation:add
MethodInvocation:computeIfAbsent
MethodInvocation:name
MethodInvocation:realmSettingPrefix
MethodInvocation:type
MethodInvocation:name
MethodInvocation:add
MethodInvocation:computeIfAbsent
MethodInvocation:order
MethodInvocation:name
MethodInvocation:add
MethodInvocation:checkUniqueOrders
MethodInvocation:isEmpty
MethodInvocation:sort
MethodInvocation:addNativeRealms
MethodInvocation:add
MethodInvocation:collect
MethodInvocation:map
MethodInvocation:filter
MethodInvocation:stream
MethodInvocation:entrySet
MethodInvocation:size
MethodInvocation:getValue
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:joining
MethodInvocation:hasText
MethodInvocation:unmodifiableList
Method-name:usageStats
Method-returnType:void
Method-parameters:[ActionListener<Map<String,Object>> listener]
Method-name:addNativeRealms
Method-returnType:void
Method-parameters:[List<Realm> realms]
MethodInvocation:get
MethodInvocation:add
MethodInvocation:create
MethodInvocation:ensureOrderSetting
MethodInvocation:get
MethodInvocation:add
MethodInvocation:create
MethodInvocation:ensureOrderSetting
Method-name:ensureOrderSetting
Method-returnType:Settings
Method-parameters:[Settings settings, RealmConfig.RealmIdentifier realmIdentifier, int order]
MethodInvocation:realmSettingPrefix
MethodInvocation:build
MethodInvocation:put
MethodInvocation:put
MethodInvocation:builder
Method-name:checkUniqueOrders
Method-returnType:void
Method-parameters:[Map<Integer,Set<String>> orderToRealmName]
MethodInvocation:collect
MethodInvocation:map
MethodInvocation:filter
MethodInvocation:stream
MethodInvocation:entrySet
MethodInvocation:size
MethodInvocation:getValue
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:joining
MethodInvocation:hasText
Method-name:combineMaps
Method-returnType:void
Method-parameters:[Map<String,Object> mapA, Map<String,Object> mapB]
Method-name:convertToMapOfLists
Method-returnType:Map<String,Object>
Method-parameters:[Map<String,Object> map]
MethodInvocation:size
MethodInvocation:entrySet
MethodInvocation:put
MethodInvocation:getKey
MethodInvocation:singletonList
MethodInvocation:getValue
Method-name:isRealmTypeAvailable
Method-returnType:boolean
Method-parameters:[XPackLicenseState licenseState, String type]
MethodInvocation:isAllowed
MethodInvocation:isAllowed
MethodInvocation:isStandardRealm
MethodInvocation:equals
MethodInvocation:equals
MethodInvocation:equals
