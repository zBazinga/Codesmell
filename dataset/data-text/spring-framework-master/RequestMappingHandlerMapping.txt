Class:RequestMappingHandlerMapping
Field:pathPrefixes
Field:contentTypeResolver
MethodInvocation:build
Field:embeddedValueResolver
Field:config
Method-name:setPathPrefixes
Method-returnType:void
Method-parameters:[Map<String,Predicate<Class<?>>> prefixes]
MethodInvocation:clear
FieldAccess:pathPrefixes
MethodInvocation:forEach
MethodInvocation:filter
MethodInvocation:stream
MethodInvocation:entrySet
MethodInvocation:hasText
MethodInvocation:getKey
MethodInvocation:put
FieldAccess:pathPrefixes
MethodInvocation:getKey
MethodInvocation:getValue
Method-name:getPathPrefixes
Method-returnType:Map<String,Predicate<Class<?>>>
Method-parameters:[]
MethodInvocation:unmodifiableMap
FieldAccess:pathPrefixes
Method-name:setContentTypeResolver
Method-returnType:void
Method-parameters:[RequestedContentTypeResolver contentTypeResolver]
MethodInvocation:notNull
FieldAccess:contentTypeResolver
Method-name:getContentTypeResolver
Method-returnType:RequestedContentTypeResolver
Method-parameters:[]
FieldAccess:contentTypeResolver
Method-name:setEmbeddedValueResolver
Method-returnType:void
Method-parameters:[StringValueResolver resolver]
FieldAccess:embeddedValueResolver
Method-name:afterPropertiesSet
Method-returnType:void
Method-parameters:[]
FieldAccess:config
MethodInvocation:setPatternParser
FieldAccess:config
MethodInvocation:getPathPatternParser
MethodInvocation:setContentTypeResolver
FieldAccess:config
MethodInvocation:getContentTypeResolver
Method-name:isHandler
Method-returnType:boolean
Method-parameters:[Class<?> beanType]
MethodInvocation:hasAnnotation
MethodInvocation:hasAnnotation
Method-name:getMappingForMethod
Method-returnType:RequestMappingInfo
Method-parameters:[Method method, Class<?> handlerType]
MethodInvocation:createRequestMappingInfo
MethodInvocation:createRequestMappingInfo
MethodInvocation:combine
MethodInvocation:entrySet
FieldAccess:pathPrefixes
MethodInvocation:test
MethodInvocation:getValue
MethodInvocation:getKey
FieldAccess:embeddedValueResolver
MethodInvocation:resolveStringValue
FieldAccess:embeddedValueResolver
MethodInvocation:combine
MethodInvocation:build
MethodInvocation:options
MethodInvocation:paths
FieldAccess:config
Method-name:createRequestMappingInfo
Method-returnType:RequestMappingInfo
Method-parameters:[AnnotatedElement element]
MethodInvocation:findMergedAnnotation
MethodInvocation:getCustomTypeCondition
MethodInvocation:getCustomMethodCondition
MethodInvocation:createRequestMappingInfo
Method-name:getCustomTypeCondition
Method-returnType:RequestCondition<?>
Method-parameters:[Class<?> handlerType]
Method-name:getCustomMethodCondition
Method-returnType:RequestCondition<?>
Method-parameters:[Method method]
Method-name:createRequestMappingInfo
Method-returnType:RequestMappingInfo
Method-parameters:[RequestMapping requestMapping, @Nullable RequestCondition<?> customCondition]
MethodInvocation:mappingName
MethodInvocation:produces
MethodInvocation:consumes
MethodInvocation:headers
MethodInvocation:params
MethodInvocation:methods
MethodInvocation:paths
MethodInvocation:resolveEmbeddedValuesInPatterns
MethodInvocation:path
MethodInvocation:method
MethodInvocation:params
MethodInvocation:headers
MethodInvocation:consumes
MethodInvocation:produces
MethodInvocation:name
MethodInvocation:customCondition
MethodInvocation:build
MethodInvocation:options
FieldAccess:config
Method-name:resolveEmbeddedValuesInPatterns
Method-returnType:String[]
Method-parameters:[String[] patterns]
FieldAccess:embeddedValueResolver
MethodInvocation:resolveStringValue
FieldAccess:embeddedValueResolver
Method-name:registerMapping
Method-returnType:void
Method-parameters:[RequestMappingInfo mapping, Object handler, Method method]
MethodInvocation:updateConsumesCondition
Method-name:registerHandlerMethod
Method-returnType:void
Method-parameters:[Object handler, Method method, RequestMappingInfo mapping]
MethodInvocation:updateConsumesCondition
Method-name:initCorsConfiguration
Method-returnType:CorsConfiguration
Method-parameters:[Object handler, Method method, RequestMappingInfo mappingInfo]
MethodInvocation:createHandlerMethod
MethodInvocation:getBeanType
MethodInvocation:findMergedAnnotation
MethodInvocation:findMergedAnnotation
MethodInvocation:updateCorsConfig
MethodInvocation:updateCorsConfig
MethodInvocation:isEmpty
MethodInvocation:getAllowedMethods
MethodInvocation:getMethods
MethodInvocation:getMethodsCondition
MethodInvocation:addAllowedMethod
MethodInvocation:name
MethodInvocation:applyPermitDefaultValues
Method-name:updateCorsConfig
Method-returnType:void
Method-parameters:[CorsConfiguration config, @Nullable CrossOrigin annotation]
MethodInvocation:origins
MethodInvocation:addAllowedOrigin
MethodInvocation:resolveCorsAnnotationValue
MethodInvocation:methods
MethodInvocation:addAllowedMethod
MethodInvocation:name
MethodInvocation:allowedHeaders
MethodInvocation:addAllowedHeader
MethodInvocation:resolveCorsAnnotationValue
MethodInvocation:exposedHeaders
MethodInvocation:addExposedHeader
MethodInvocation:resolveCorsAnnotationValue
MethodInvocation:resolveCorsAnnotationValue
MethodInvocation:allowCredentials
MethodInvocation:equalsIgnoreCase
MethodInvocation:setAllowCredentials
MethodInvocation:equalsIgnoreCase
MethodInvocation:setAllowCredentials
MethodInvocation:isEmpty
MethodInvocation:maxAge
MethodInvocation:getMaxAge
MethodInvocation:setMaxAge
MethodInvocation:maxAge
Method-name:resolveCorsAnnotationValue
Method-returnType:String
Method-parameters:[String value]
FieldAccess:embeddedValueResolver
MethodInvocation:resolveStringValue
FieldAccess:embeddedValueResolver
