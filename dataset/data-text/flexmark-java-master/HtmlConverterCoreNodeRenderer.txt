Class:HtmlConverterCoreNodeRenderer
Field:EMOJI_ALT_PREFIX
Field:NUMERIC_DOT_LIST_PAT
MethodInvocation:compile
Field:NUMERIC_PAREN_LIST_PAT
MethodInvocation:compile
Field:NON_NUMERIC_DOT_LIST_PAT
MethodInvocation:compile
MethodInvocation:pattern
MethodInvocation:pattern
Field:NON_NUMERIC_PAREN_LIST_PAT
MethodInvocation:compile
Field:BULLET_LIST_PAT
MethodInvocation:compile
Field:ALPHA_NUMERAL_PAT
MethodInvocation:compile
Field:explicitLinkTextTags
MethodInvocation:asList
Field:myAbbreviations
Field:myMacrosMap
Field:myHtmlConverterOptions
Field:myTable
Field:myTableSuppressColumns
Method-name:HtmlConverterCoreNodeRenderer
Method-returnType:null
Method-parameters:[DataHolder options]
Method-name:getHtmlConverterPhases
Method-returnType:Set<HtmlConverterPhase>
Method-parameters:[]
MethodInvocation:asList
Method-name:getHtmlNodeRendererHandlers
Method-returnType:Set<HtmlNodeRendererHandler<?>>
Method-parameters:[]
MethodInvocation:asList
MethodInvocation:processAside
MethodInvocation:add
MethodInvocation:add
Method-name:renderDocument
Method-returnType:void
Method-parameters:[HtmlNodeConverterContext context, LineAppendable out, Document document, HtmlConverterPhase phase]
MethodInvocation:getForDocument
MethodInvocation:get
MethodInvocation:getReferenceUrlToReferenceMap
MethodInvocation:getExternalReferences
MethodInvocation:getValues
MethodInvocation:put
MethodInvocation:toString
MethodInvocation:getUrl
MethodInvocation:put
MethodInvocation:toString
MethodInvocation:getReference
MethodInvocation:add
MethodInvocation:isEmpty
MethodInvocation:blankLine
MethodInvocation:entrySet
MethodInvocation:line
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:line
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:blankLine
MethodInvocation:getReferenceUrlToReferenceMap
MethodInvocation:isEmpty
MethodInvocation:getExternalReferences
MethodInvocation:entrySet
MethodInvocation:contains
MethodInvocation:getValue
MethodInvocation:blankLine
MethodInvocation:line
MethodInvocation:append
MethodInvocation:line
MethodInvocation:getChars
MethodInvocation:getValue
MethodInvocation:blankLine
MethodInvocation:isEmpty
MethodInvocation:entrySet
MethodInvocation:blankLine
MethodInvocation:line
MethodInvocation:append
MethodInvocation:append
MethodInvocation:getKey
MethodInvocation:getValue
MethodInvocation:of
MethodInvocation:append
MethodInvocation:append
MethodInvocation:trimEnd
MethodInvocation:append
MethodInvocation:blankLine
Method-name:getMaxRepeatedChars
Method-returnType:int
Method-parameters:[CharSequence text, char c, int minCount]
MethodInvocation:of
MethodInvocation:length
MethodInvocation:indexOf
MethodInvocation:countLeading
Method-name:hasChildrenOfType
Method-returnType:boolean
Method-parameters:[Element element, Set<String> nodeNames]
MethodInvocation:children
MethodInvocation:contains
MethodInvocation:toLowerCase
MethodInvocation:nodeName
Method-name:isFirstChild
Method-returnType:boolean
Method-parameters:[Element element]
MethodInvocation:childNodes
MethodInvocation:parent
MethodInvocation:equals
MethodInvocation:nodeName
MethodInvocation:isEmpty
MethodInvocation:trim
MethodInvocation:outerHtml
Method-name:isLastChild
Method-returnType:boolean
Method-parameters:[Element element]
MethodInvocation:children
MethodInvocation:parent
MethodInvocation:size
MethodInvocation:get
Method-name:processDefault
Method-returnType:void
Method-parameters:[Node node, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:renderDefault
Method-name:processA
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:hasAttr
MethodInvocation:isSuppressed
MethodInvocation:attr
MethodInvocation:resolveLink
MethodInvocation:getUrl
MethodInvocation:isPreFormatted
MethodInvocation:lastIndexOf
MethodInvocation:indexOf
MethodInvocation:substring
MethodInvocation:substring
MethodInvocation:append
MethodInvocation:isParsed
MethodInvocation:pushState
MethodInvocation:processTextNodes
MethodInvocation:trim
MethodInvocation:hasAttr
MethodInvocation:attr
MethodInvocation:isEmpty
MethodInvocation:contains
MethodInvocation:equals
MethodInvocation:isEmpty
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:transferIdToParent
MethodInvocation:isTextOnly
MethodInvocation:startsWith
MethodInvocation:isReference
MethodInvocation:hasChildrenOfType
MethodInvocation:getOrCreateReference
MethodInvocation:equals
MethodInvocation:getReference
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:getReference
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:replace
MethodInvocation:replace
MethodInvocation:append
MethodInvocation:equals
MethodInvocation:append
MethodInvocation:append
MethodInvocation:excludeAttributes
MethodInvocation:popState
MethodInvocation:transferIdToParent
MethodInvocation:popState
MethodInvocation:isSuppressed
MethodInvocation:processWrapped
MethodInvocation:childNodeSize
MethodInvocation:equals
MethodInvocation:tagName
MethodInvocation:parent
MethodInvocation:processTextNodes
Method-name:processAbbr
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:hasAttr
MethodInvocation:trim
MethodInvocation:processTextNodes
MethodInvocation:put
MethodInvocation:attr
Method-name:processBlockQuote
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:isFirstChild
MethodInvocation:line
MethodInvocation:pushPrefix
MethodInvocation:addPrefix
MethodInvocation:renderChildren
MethodInvocation:line
MethodInvocation:popPrefix
Method-name:processBr
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:isPreFormatted
MethodInvocation:append
MethodInvocation:getOptions
MethodInvocation:setOptions
MethodInvocation:getPendingEOL
MethodInvocation:line
MethodInvocation:append
MethodInvocation:getPendingEOL
MethodInvocation:toString
MethodInvocation:endsWith
MethodInvocation:blankLine
MethodInvocation:blankLine
MethodInvocation:append
MethodInvocation:blankLine
MethodInvocation:append
MethodInvocation:setOptions
Method-name:processCode
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:ownText
MethodInvocation:of
MethodInvocation:getMaxRepeatedChars
MethodInvocation:repeatOf
MethodInvocation:inlineCode
MethodInvocation:processTextNodes
MethodInvocation:isTextOnly
Method-name:processDel
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:isPreFormatted
MethodInvocation:wrapTextNodes
MethodInvocation:wrapTextNodes
MethodInvocation:isTextOnly
MethodInvocation:nextElementSibling
Method-name:handleDivTable
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:equals
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:classNames
MethodInvocation:contains
MethodInvocation:handleDivTableRow
MethodInvocation:next
MethodInvocation:finalizeTable
MethodInvocation:getMaxColumns
MethodInvocation:blankLine
MethodInvocation:appendTable
MethodInvocation:tailBlankLine
Method-name:handleDivTableRow
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:pushState
MethodInvocation:setHeader
MethodInvocation:hasIntersection
MethodInvocation:classNames
MethodInvocation:next
MethodInvocation:equals
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:hasIntersection
MethodInvocation:classNames
MethodInvocation:handleDivTableCell
MethodInvocation:nextRow
MethodInvocation:popState
Method-name:handleDivTableCell
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:replaceAll
MethodInvocation:trim
MethodInvocation:processTextNodes
MethodInvocation:addCell
MethodInvocation:replace
Method-name:hasIntersection
Method-returnType:boolean
Method-parameters:[@NotNull Set<String> stringSet1, String[] stringSet2]
MethodInvocation:contains
Method-name:processDiv
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:hasIntersection
MethodInvocation:classNames
MethodInvocation:handleDivTable
MethodInvocation:isFirstChild
MethodInvocation:getPendingEOL
MethodInvocation:getPendingSpace
MethodInvocation:lineWithTrailingSpaces
MethodInvocation:minLimit
MethodInvocation:getLineCountWithPending
MethodInvocation:getLineContent
MethodInvocation:countTrailing
MethodInvocation:of
MethodInvocation:removeLines
MethodInvocation:append
MethodInvocation:lineWithTrailingSpaces
MethodInvocation:blankLine
MethodInvocation:renderChildren
MethodInvocation:isLastChild
MethodInvocation:line
MethodInvocation:blankLine
Method-name:processDl
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:pushState
MethodInvocation:next
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:lineIf
MethodInvocation:blankLineIf
MethodInvocation:processTextNodes
MethodInvocation:line
MethodInvocation:handleDefinition
MethodInvocation:popState
Method-name:handleDefinition
Method-returnType:void
Method-parameters:[Element item, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:pushState
MethodInvocation:getOptions
MethodInvocation:children
MethodInvocation:isEmpty
MethodInvocation:equalsIgnoreCase
MethodInvocation:tagName
MethodInvocation:get
MethodInvocation:blankLine
MethodInvocation:repeatOf
MethodInvocation:setOptions
MethodInvocation:line
MethodInvocation:append
MethodInvocation:append
MethodInvocation:pushPrefix
MethodInvocation:addPrefix
MethodInvocation:setOptions
MethodInvocation:renderChildren
MethodInvocation:processTextNodes
MethodInvocation:line
MethodInvocation:popPrefix
MethodInvocation:popState
Method-name:processEmoji
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:hasAttr
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:attr
MethodInvocation:hasAttr
MethodInvocation:getEmojiFromURI
MethodInvocation:attr
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:renderDefault
Method-name:processEmphasis
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:isPreFormatted
MethodInvocation:wrapTextNodes
MethodInvocation:wrapTextNodes
MethodInvocation:isTextOnly
MethodInvocation:nextElementSibling
Method-name:processHr
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:blankLine
MethodInvocation:append
MethodInvocation:blankLine
Method-name:processImg
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:hasAttr
MethodInvocation:attr
MethodInvocation:getEmojiFromURI
MethodInvocation:hasAttr
MethodInvocation:attr
MethodInvocation:startsWith
MethodInvocation:indexOf
MethodInvocation:length
MethodInvocation:substring
MethodInvocation:length
MethodInvocation:substring
MethodInvocation:getEmojiFromShortcut
MethodInvocation:equals
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:isSuppressed
MethodInvocation:isParsed
MethodInvocation:hasAttr
MethodInvocation:replace
MethodInvocation:replace
MethodInvocation:trim
MethodInvocation:attr
MethodInvocation:isEmpty
MethodInvocation:hasAttr
MethodInvocation:replace
MethodInvocation:replace
MethodInvocation:attr
MethodInvocation:isEmpty
MethodInvocation:isTextOnly
MethodInvocation:resolveLink
MethodInvocation:getUrl
MethodInvocation:indexOf
MethodInvocation:indexOf
MethodInvocation:isReference
MethodInvocation:getOrCreateReference
MethodInvocation:equals
MethodInvocation:getReference
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:getReference
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:getReference
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:urlDecode
MethodInvocation:replace
MethodInvocation:substring
MethodInvocation:append
MethodInvocation:line
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:isSuppressed
MethodInvocation:processWrapped
Method-name:processInput
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:firstElementSibling
MethodInvocation:tagName
MethodInvocation:parent
MethodInvocation:equalsIgnoreCase
MethodInvocation:hasAttr
MethodInvocation:equalsIgnoreCase
MethodInvocation:attr
MethodInvocation:hasAttr
MethodInvocation:append
MethodInvocation:append
MethodInvocation:renderDefault
Method-name:processIns
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:isPreFormatted
MethodInvocation:wrapTextNodes
MethodInvocation:wrapTextNodes
MethodInvocation:isTextOnly
MethodInvocation:nextElementSibling
Method-name:processStrong
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:isPreFormatted
MethodInvocation:wrapTextNodes
MethodInvocation:wrapTextNodes
MethodInvocation:isTextOnly
MethodInvocation:nextElementSibling
Method-name:processSub
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:isTextOnly
MethodInvocation:isPreFormatted
MethodInvocation:wrapTextNodes
MethodInvocation:wrapTextNodes
Method-name:processSup
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:isTextOnly
MethodInvocation:isPreFormatted
MethodInvocation:wrapTextNodes
MethodInvocation:wrapTextNodes
Method-name:processMath
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processConditional
MethodInvocation:isTextOnly
MethodInvocation:processTextNodes
Method-name:handleListItem
Method-returnType:void
Method-parameters:[HtmlNodeConverterContext context, HtmlMarkdownWriter out, Element item, ListState listState]
MethodInvocation:pushState
MethodInvocation:getItemPrefix
FieldAccess:myHtmlConverterOptions
MethodInvocation:length
MethodInvocation:repeatOf
MethodInvocation:append
MethodInvocation:line
MethodInvocation:pushPrefix
MethodInvocation:addPrefix
MethodInvocation:offsetWithPending
MethodInvocation:renderChildren
MethodInvocation:offsetWithPending
MethodInvocation:getOptions
MethodInvocation:setOptions
MethodInvocation:line
MethodInvocation:setOptions
MethodInvocation:line
MethodInvocation:popPrefix
MethodInvocation:popState
Method-name:hasListItemParent
Method-returnType:boolean
Method-parameters:[Element element]
MethodInvocation:parent
MethodInvocation:equalsIgnoreCase
MethodInvocation:tagName
MethodInvocation:parent
Method-name:haveListItemAncestor
Method-returnType:boolean
Method-parameters:[Node node]
MethodInvocation:parent
MethodInvocation:equals
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:parent
Method-name:handleList
Method-returnType:void
Method-parameters:[HtmlNodeConverterContext context, HtmlMarkdownWriter out, Element element, boolean isNumbered, boolean isFakeList, boolean isNestedList]
MethodInvocation:pushState
MethodInvocation:haveListItemAncestor
MethodInvocation:getParent
MethodInvocation:getState
MethodInvocation:isFirstChild
MethodInvocation:blankLine
MethodInvocation:previousElementSibling
MethodInvocation:toUpperCase
MethodInvocation:tagName
MethodInvocation:equals
MethodInvocation:toUpperCase
MethodInvocation:tagName
MethodInvocation:equals
MethodInvocation:equals
MethodInvocation:blankLine
MethodInvocation:blankLine
MethodInvocation:append
MethodInvocation:line
MethodInvocation:hasAttr
MethodInvocation:parseInt
MethodInvocation:attr
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:handleListItem
MethodInvocation:childNodeSize
MethodInvocation:handleListItem
MethodInvocation:childNodeSize
MethodInvocation:getItemPrefix
FieldAccess:myHtmlConverterOptions
MethodInvocation:length
MethodInvocation:repeatOf
MethodInvocation:pushPrefix
MethodInvocation:addPrefix
MethodInvocation:handleList
MethodInvocation:popPrefix
MethodInvocation:render
MethodInvocation:next
MethodInvocation:nextElementSibling
MethodInvocation:blankLine
MethodInvocation:popState
Method-name:processLi
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:handleList
Method-name:processOl
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:handleList
Method-name:processUl
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:handleList
Method-name:processSvg
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:hasClass
MethodInvocation:renderDefault
Method-name:processP
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:firstElementSibling
MethodInvocation:tagName
MethodInvocation:parent
MethodInvocation:equalsIgnoreCase
MethodInvocation:equalsIgnoreCase
MethodInvocation:blankLineIf
MethodInvocation:isFirstChild
MethodInvocation:childNodeSize
MethodInvocation:blankLine
MethodInvocation:append
MethodInvocation:processTextNodes
MethodInvocation:line
MethodInvocation:tailBlankLine
Method-name:processHeading
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:trim
MethodInvocation:processTextNodes
MethodInvocation:isEmpty
MethodInvocation:blankLine
MethodInvocation:append
MethodInvocation:append
MethodInvocation:outputAttributes
MethodInvocation:append
MethodInvocation:line
MethodInvocation:minLimit
MethodInvocation:length
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:outputAttributes
MethodInvocation:blankLine
Method-name:processPre
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:pushState
MethodInvocation:getSubContext
MethodInvocation:setOptions
MethodInvocation:getMarkdown
MethodInvocation:getOptions
MethodInvocation:openPreFormatted
MethodInvocation:getMarkdown
MethodInvocation:next
MethodInvocation:equalsIgnoreCase
MethodInvocation:nodeName
MethodInvocation:equalsIgnoreCase
MethodInvocation:nodeName
MethodInvocation:renderChildren
MethodInvocation:isEmpty
MethodInvocation:removePrefix
MethodInvocation:className
MethodInvocation:equalsIgnoreCase
MethodInvocation:nodeName
MethodInvocation:append
MethodInvocation:getMarkdown
MethodInvocation:equalsIgnoreCase
MethodInvocation:nodeName
MethodInvocation:append
MethodInvocation:getMarkdown
MethodInvocation:getWholeText
MethodInvocation:renderChildren
MethodInvocation:closePreFormatted
MethodInvocation:getMarkdown
MethodInvocation:toString
MethodInvocation:getMarkdown
MethodInvocation:getMaxRepeatedChars
MethodInvocation:repeatOf
MethodInvocation:isEmpty
MethodInvocation:isEmpty
MethodInvocation:trim
MethodInvocation:append
MethodInvocation:blankLine
MethodInvocation:isEmpty
MethodInvocation:append
MethodInvocation:line
MethodInvocation:openPreFormatted
MethodInvocation:append
MethodInvocation:isEmpty
MethodInvocation:closePreFormatted
MethodInvocation:line
MethodInvocation:append
MethodInvocation:line
MethodInvocation:tailBlankLine
MethodInvocation:blankLine
MethodInvocation:pushPrefix
MethodInvocation:addPrefix
MethodInvocation:openPreFormatted
MethodInvocation:append
MethodInvocation:isEmpty
MethodInvocation:closePreFormatted
MethodInvocation:line
MethodInvocation:tailBlankLine
MethodInvocation:popPrefix
MethodInvocation:popState
Method-name:processTable
Method-returnType:void
Method-parameters:[Element table, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:pushState
MethodInvocation:next
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:handleTableCaption
MethodInvocation:setHeader
MethodInvocation:handleTableSection
MethodInvocation:setHeader
MethodInvocation:handleTableSection
MethodInvocation:children
MethodInvocation:setHeader
MethodInvocation:isEmpty
MethodInvocation:equalsIgnoreCase
MethodInvocation:tagName
MethodInvocation:get
MethodInvocation:handleTableRow
MethodInvocation:finalizeTable
MethodInvocation:getMaxColumns
MethodInvocation:blankLine
MethodInvocation:appendTable
MethodInvocation:tailBlankLine
MethodInvocation:popState
Method-name:handleTableSection
Method-returnType:void
Method-parameters:[HtmlNodeConverterContext context, HtmlMarkdownWriter out, Element element]
MethodInvocation:pushState
MethodInvocation:next
MethodInvocation:equalsIgnoreCase
MethodInvocation:nodeName
MethodInvocation:children
MethodInvocation:getHeader
MethodInvocation:isEmpty
MethodInvocation:equalsIgnoreCase
MethodInvocation:tagName
MethodInvocation:get
MethodInvocation:setHeader
MethodInvocation:getHeader
MethodInvocation:size
MethodInvocation:setHeader
MethodInvocation:handleTableRow
MethodInvocation:setHeader
MethodInvocation:popState
Method-name:handleTableRow
Method-returnType:void
Method-parameters:[HtmlNodeConverterContext context, HtmlMarkdownWriter out, Element element]
MethodInvocation:pushState
MethodInvocation:next
MethodInvocation:toLowerCase
MethodInvocation:nodeName
MethodInvocation:handleTableCell
MethodInvocation:nextRow
MethodInvocation:popState
Method-name:handleTableCaption
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:setCaption
MethodInvocation:trim
MethodInvocation:processTextNodes
Method-name:handleTableCell
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:replaceAll
MethodInvocation:trim
MethodInvocation:processTextNodes
MethodInvocation:hasAttr
MethodInvocation:parseInt
MethodInvocation:attr
MethodInvocation:hasAttr
MethodInvocation:parseInt
MethodInvocation:attr
MethodInvocation:hasAttr
MethodInvocation:getAlignment
MethodInvocation:attr
MethodInvocation:classNames
MethodInvocation:isEmpty
MethodInvocation:get
MethodInvocation:keySet
MethodInvocation:find
MethodInvocation:matcher
MethodInvocation:get
MethodInvocation:addCell
MethodInvocation:replace
Method-name:matchingText
Method-returnType:boolean
Method-parameters:[Pattern pattern, String text, String[] match]
MethodInvocation:matcher
MethodInvocation:matches
MethodInvocation:groupCount
MethodInvocation:group
MethodInvocation:group
Method-name:convertNumeric
Method-returnType:String
Method-parameters:[String text]
MethodInvocation:trim
MethodInvocation:matches
MethodInvocation:matcher
MethodInvocation:matches
MethodInvocation:matcher
MethodInvocation:valueOf
MethodInvocation:toInt
MethodInvocation:matches
MethodInvocation:matcher
MethodInvocation:toUpperCase
MethodInvocation:length
MethodInvocation:charAt
MethodInvocation:valueOf
Method-name:processUnwrapped
Method-returnType:void
Method-parameters:[Node node, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processUnwrapped
Method-name:processWrapped
Method-returnType:void
Method-parameters:[Node node, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:processWrapped
Method-name:processSpan
Method-returnType:void
Method-parameters:[Element element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:hasAttr
MethodInvocation:attr
MethodInvocation:equals
MethodInvocation:processTextNodes
MethodInvocation:matchingText
MethodInvocation:append
MethodInvocation:append
MethodInvocation:matchingText
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:matchingText
MethodInvocation:append
MethodInvocation:append
MethodInvocation:convertNumeric
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:matchingText
MethodInvocation:append
MethodInvocation:append
MethodInvocation:convertNumeric
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:convertNumeric
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:matches
MethodInvocation:matcher
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:transferIdToParent
MethodInvocation:renderChildren
Method-name:processComment
Method-returnType:void
Method-parameters:[Comment element, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:append
MethodInvocation:append
MethodInvocation:append
MethodInvocation:getData
Method-name:processText
Method-returnType:void
Method-parameters:[TextNode node, HtmlNodeConverterContext context, HtmlMarkdownWriter out]
MethodInvocation:isPreFormatted
MethodInvocation:append
MethodInvocation:prepareText
MethodInvocation:getWholeText
MethodInvocation:prepareText
MethodInvocation:text
MethodInvocation:offsetWithPending
MethodInvocation:isEmpty
MethodInvocation:trim
MethodInvocation:append
